//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_Dispatch_IncidentReportPost", "IncidentReportPost", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.IncidentReportPost), "Dispatch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.Dispatch), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_IncidentReportPost_Dispatch", "Dispatch", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.Dispatch), "IncidentReportPost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.IncidentReportPost), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_IncidentReport_IncidentReportPost", "IncidentReportPost", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.IncidentReportPost), "IncidentReport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.IncidentReport), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_IncidentReport_IncidentType", "IncidentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.IncidentType), "IncidentReport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.IncidentReport), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_IncidentReport_Reporter", "Reporter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.Reporter), "IncidentReport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.IncidentReport), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_IncidentReport_SubSystem", "SubSystem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.SubSystem), "IncidentReport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.IncidentReport), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_IncidentReportPost_IncidentReport", "IncidentReport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.IncidentReport), "IncidentReportPost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.IncidentReportPost), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_IncidentReportPost_IncidentReportPost", "IncidentReportPost", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.IncidentReportPost), "IncidentReportPost1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.IncidentReportPost), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_IncidentType_SubSystem", "SubSystem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.SubSystem), "IncidentType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.IncidentType), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_ReporterIncidentType_IncidentType", "IncidentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.IncidentType), "ReporterIncidentType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.ReporterIncidentType), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_Kap_Cities_Kap_Prefectures", "Kali_Prefectures", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.Prefecture), "Kali_Cities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.City), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_Kap_Prefectures_Kap_Regions", "Kali_Regions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.Region), "Kali_Prefectures", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.Prefecture), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_SubSystemReporterTypes_SubSystem", "SubSystem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.SubSystem), "SubSystemReporterType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.SubSystemReporterType), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_Academic_Kap_Cities", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.City), "Academic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.Academic), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_Academic_Kap_Prefectures", "Prefecture", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.Prefecture), "Academic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.Academic), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "MassMessageReporterXRef", "MassMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.MassMessage), "Reporter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.Reporter))]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "UsersInRoles", "Reporter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.Reporter), "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.Role))]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_EmailLog_Reporter", "Reporter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.Reporter), "EmailLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.Email), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "AcademicStudent", "Academic", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.Academic), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.Student), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InstitutionOffice", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.Institution), "Office", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipOffice), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "CityOffice", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.City), "Office", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipOffice), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "PrefectureOffice", "Prefecture", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.Prefecture), "Office", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipOffice), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "CityProvider", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.City), "Provider", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipProvider), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "PrefectureProvider", "Prefecture", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.Prefecture), "Provider", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipProvider), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "CountryProvider", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.Country), "Provider", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipProvider), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_SmsLog_Reporter", "Reporter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.Reporter), "SmsLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.SMS), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_Country_GlobalRegion", "GlobalRegion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.GlobalRegion), "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.Country), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InstitutionFacultyMember", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.Institution), "FacultyMember", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.FacultyMember), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_Academic_Institution", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.Institution), "Academic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.Academic), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_InternshipPositionGroup_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.Country), "InternshipPositionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionGroup), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_InternshipPositionGroup_Kali_Cities", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.City), "InternshipPositionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionGroup), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_InternshipPositionGroup_Kali_Prefectures", "Prefecture", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.Prefecture), "InternshipPositionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionGroup), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipProviderInternshipPositionGroup", "InternshipProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.InternshipProvider), "InternshipPositionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionGroup), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_VerificationLog_Reporter", "Reporter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.Reporter), "VerificationLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.VerificationLog), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipProviderPrimaryActivity", "InternshipProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipProvider), "PrimaryActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.PrimaryActivity), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionGroupAcademicXRef1", "Academic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.Academic), "InternshipPositionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionGroup))]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionGroupPhysicalObjectXRef1", "InternshipPositionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionGroup), "PhysicalObject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.PhysicalObject))]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipOfficeAcademics", "InternshipOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipOffice), "Academic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.Academic))]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_InternshipPositionLog_InternshipPosition", "InternshipPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.InternshipPosition), "InternshipPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionLog), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionLogPreAssignedByOffice", "InternshipPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionLog), "InternshipOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.InternshipOffice), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionLogAssignedToStudent", "InternshipPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionLog), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.Student), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionPreAssignedByOffice", "InternshipPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPosition), "InternshipOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.InternshipOffice), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionPreAssignedByMasterAccountID", "InternshipPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPosition), "InternshipOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.InternshipOffice), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionAssignedToStudent", "InternshipPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPosition), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.Student), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_InternshipPosition_InternshipPositionGroup", "InternshipPositionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.InternshipPositionGroup), "InternshipPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPosition), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_BlockedPositionGroup_InternshipPositionGroup", "InternshipPositionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.InternshipPositionGroup), "BlockedPositionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.BlockedPositionGroup), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "BlockedPositionGroupInternshipOffice", "BlockedPositionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.BlockedPositionGroup), "InternshipOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.InternshipOffice), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionLogAssignedBy", "InternshipPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionLog), "InternshipOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.InternshipOffice), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionLogInternshipOffice", "InternshipPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionLog), "InternshipOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.InternshipOffice), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionLogStudent", "InternshipPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionLog), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.Student), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionLogPreAssignedByMasterAccount", "InternshipPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionLog), "InternshipOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.InternshipOffice), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionLogAssignedByMasterAccount", "InternshipPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionLog), "InternshipOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.InternshipOffice), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionLogCompletedByMasterAccount", "InternshipPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionLog), "InternshipOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.InternshipOffice), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionLogUnAssignedByMasterAccount", "InternshipPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionLog), "InternshipOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.InternshipOffice), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionLogUnAssignedByOffice", "InternshipPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionLog), "InternshipOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.InternshipOffice), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionLogUnPreAssignedByOffice", "InternshipPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionLog), "InternshipOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.InternshipOffice), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionLogUnPreAssignedByMasterAccount", "InternshipPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionLog), "InternshipOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.InternshipOffice), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionLogUnCompletedByOffice", "InternshipPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionLog), "InternshipOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.InternshipOffice), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionLogUnCompletedByMasterAccount", "InternshipPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionLog), "InternshipOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.InternshipOffice), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "InternshipPositionCanceledStudent", "InternshipPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPosition), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.Student), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_Reporter_MasterAccount", "Reporter", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.Reporter), "Reporter1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.Reporter), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_BlockedPositionGroup_MasterBlock", "BlockedPositionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.BlockedPositionGroup), "BlockedPositionGroup1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.BlockedPositionGroup), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_IncidentReport_LastDispatchedPost", "IncidentReportPost", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.IncidentReportPost), "IncidentReport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.IncidentReport), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_InternshipPosition_PreAssignedForAcademic", "Academic", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.Academic), "InternshipPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPosition), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_InternshipPositionLog_PreAssignedForAcademic", "Academic", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.Academic), "InternshipPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionLog), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_InternshipPositionGroupLog_InternshipPositionGroup", "InternshipPositionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.InternshipPositionGroup), "InternshipPositionGroupLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.InternshipPositionGroupLog), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_Kali_Cities_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.Country), "City", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.City), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_Kali_Prefectures_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.Country), "Prefecture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.Prefecture), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_Kali_Regions_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.Country), "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.Region), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "PreviousAcademicStudent", "Academic", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudentPractice.BusinessModel.Academic), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.Student), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_QuestionnaireQuestion_Questionnaire", "Questionnaire", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.Questionnaire), "QuestionnaireQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.QuestionnaireQuestion), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_SubmittedQuestionnaire_Questionnaire", "Questionnaire", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.Questionnaire), "SubmittedQuestionnaire", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.SubmittedQuestionnaire), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_QuestionnaireAnswer_QuestionnaireQuestion", "QuestionnaireQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.QuestionnaireQuestion), "QuestionnaireAnswer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.QuestionnaireAnswer), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_QuestionnaireAnswer_SubmittedQuestionnaire", "SubmittedQuestionnaire", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.SubmittedQuestionnaire), "QuestionnaireAnswer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.QuestionnaireAnswer), true)]
[assembly: EdmRelationshipAttribute("DBEntitiesModel", "FK_SubmittedQuestionnaire_Reporter", "Reporter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudentPractice.BusinessModel.Reporter), "SubmittedQuestionnaire", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudentPractice.BusinessModel.SubmittedQuestionnaire), true)]

#endregion


namespace StudentPractice.BusinessModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DBEntities : Imis.Domain.EF.DomainContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DBEntities object using the connection string found in the 'DBEntities' section of the application configuration file.
        /// </summary>
        public DBEntities() : base("name=DBEntities", "DBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DBEntities object.
        /// </summary>
        public DBEntities(string connectionString) : base(connectionString, "DBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DBEntities object.
        /// </summary>
        public DBEntities(EntityConnection connection) : base(connection, "DBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Dispatch> DispatchSet
        {
            get
            {
                if ((_DispatchSet == null))
                {
                    _DispatchSet = base.CreateObjectSet<Dispatch>("DispatchSet");
                }
                return _DispatchSet;
            }
        }
        private ObjectSet<Dispatch> _DispatchSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IncidentReport> IncidentReportSet
        {
            get
            {
                if ((_IncidentReportSet == null))
                {
                    _IncidentReportSet = base.CreateObjectSet<IncidentReport>("IncidentReportSet");
                }
                return _IncidentReportSet;
            }
        }
        private ObjectSet<IncidentReport> _IncidentReportSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IncidentReportPost> IncidentReportPostSet
        {
            get
            {
                if ((_IncidentReportPostSet == null))
                {
                    _IncidentReportPostSet = base.CreateObjectSet<IncidentReportPost>("IncidentReportPostSet");
                }
                return _IncidentReportPostSet;
            }
        }
        private ObjectSet<IncidentReportPost> _IncidentReportPostSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IncidentType> IncidentTypeSet
        {
            get
            {
                if ((_IncidentTypeSet == null))
                {
                    _IncidentTypeSet = base.CreateObjectSet<IncidentType>("IncidentTypeSet");
                }
                return _IncidentTypeSet;
            }
        }
        private ObjectSet<IncidentType> _IncidentTypeSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> CitySet
        {
            get
            {
                if ((_CitySet == null))
                {
                    _CitySet = base.CreateObjectSet<City>("CitySet");
                }
                return _CitySet;
            }
        }
        private ObjectSet<City> _CitySet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Prefecture> PrefectureSet
        {
            get
            {
                if ((_PrefectureSet == null))
                {
                    _PrefectureSet = base.CreateObjectSet<Prefecture>("PrefectureSet");
                }
                return _PrefectureSet;
            }
        }
        private ObjectSet<Prefecture> _PrefectureSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Region> RegionSet
        {
            get
            {
                if ((_RegionSet == null))
                {
                    _RegionSet = base.CreateObjectSet<Region>("RegionSet");
                }
                return _RegionSet;
            }
        }
        private ObjectSet<Region> _RegionSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reporter> Reporters
        {
            get
            {
                if ((_Reporters == null))
                {
                    _Reporters = base.CreateObjectSet<Reporter>("Reporters");
                }
                return _Reporters;
            }
        }
        private ObjectSet<Reporter> _Reporters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReporterIncidentType> ReporterIncidentTypeSet
        {
            get
            {
                if ((_ReporterIncidentTypeSet == null))
                {
                    _ReporterIncidentTypeSet = base.CreateObjectSet<ReporterIncidentType>("ReporterIncidentTypeSet");
                }
                return _ReporterIncidentTypeSet;
            }
        }
        private ObjectSet<ReporterIncidentType> _ReporterIncidentTypeSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubSystem> SubSystemSet
        {
            get
            {
                if ((_SubSystemSet == null))
                {
                    _SubSystemSet = base.CreateObjectSet<SubSystem>("SubSystemSet");
                }
                return _SubSystemSet;
            }
        }
        private ObjectSet<SubSystem> _SubSystemSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubSystemReporterType> SubSystemReporterTypeSet
        {
            get
            {
                if ((_SubSystemReporterTypeSet == null))
                {
                    _SubSystemReporterTypeSet = base.CreateObjectSet<SubSystemReporterType>("SubSystemReporterTypeSet");
                }
                return _SubSystemReporterTypeSet;
            }
        }
        private ObjectSet<SubSystemReporterType> _SubSystemReporterTypeSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Academic> AcademicSet
        {
            get
            {
                if ((_AcademicSet == null))
                {
                    _AcademicSet = base.CreateObjectSet<Academic>("AcademicSet");
                }
                return _AcademicSet;
            }
        }
        private ObjectSet<Academic> _AcademicSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MassMessage> MassMessage
        {
            get
            {
                if ((_MassMessage == null))
                {
                    _MassMessage = base.CreateObjectSet<MassMessage>("MassMessage");
                }
                return _MassMessage;
            }
        }
        private ObjectSet<MassMessage> _MassMessage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Email> EmailLog
        {
            get
            {
                if ((_EmailLog == null))
                {
                    _EmailLog = base.CreateObjectSet<Email>("EmailLog");
                }
                return _EmailLog;
            }
        }
        private ObjectSet<Email> _EmailLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Institution> Institution
        {
            get
            {
                if ((_Institution == null))
                {
                    _Institution = base.CreateObjectSet<Institution>("Institution");
                }
                return _Institution;
            }
        }
        private ObjectSet<Institution> _Institution;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Country
        {
            get
            {
                if ((_Country == null))
                {
                    _Country = base.CreateObjectSet<Country>("Country");
                }
                return _Country;
            }
        }
        private ObjectSet<Country> _Country;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SMS> SmsLog
        {
            get
            {
                if ((_SmsLog == null))
                {
                    _SmsLog = base.CreateObjectSet<SMS>("SmsLog");
                }
                return _SmsLog;
            }
        }
        private ObjectSet<SMS> _SmsLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GlobalRegion> GlobalRegion
        {
            get
            {
                if ((_GlobalRegion == null))
                {
                    _GlobalRegion = base.CreateObjectSet<GlobalRegion>("GlobalRegion");
                }
                return _GlobalRegion;
            }
        }
        private ObjectSet<GlobalRegion> _GlobalRegion;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhysicalObject> PhysicalObjectSet
        {
            get
            {
                if ((_PhysicalObjectSet == null))
                {
                    _PhysicalObjectSet = base.CreateObjectSet<PhysicalObject>("PhysicalObjectSet");
                }
                return _PhysicalObjectSet;
            }
        }
        private ObjectSet<PhysicalObject> _PhysicalObjectSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InternshipPositionGroup> InternshipPositionGroup
        {
            get
            {
                if ((_InternshipPositionGroup == null))
                {
                    _InternshipPositionGroup = base.CreateObjectSet<InternshipPositionGroup>("InternshipPositionGroup");
                }
                return _InternshipPositionGroup;
            }
        }
        private ObjectSet<InternshipPositionGroup> _InternshipPositionGroup;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VerificationLog> VerificationLog
        {
            get
            {
                if ((_VerificationLog == null))
                {
                    _VerificationLog = base.CreateObjectSet<VerificationLog>("VerificationLog");
                }
                return _VerificationLog;
            }
        }
        private ObjectSet<VerificationLog> _VerificationLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrimaryActivity> PrimaryActivity
        {
            get
            {
                if ((_PrimaryActivity == null))
                {
                    _PrimaryActivity = base.CreateObjectSet<PrimaryActivity>("PrimaryActivity");
                }
                return _PrimaryActivity;
            }
        }
        private ObjectSet<PrimaryActivity> _PrimaryActivity;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InternshipPosition> InternshipPositionSet
        {
            get
            {
                if ((_InternshipPositionSet == null))
                {
                    _InternshipPositionSet = base.CreateObjectSet<InternshipPosition>("InternshipPositionSet");
                }
                return _InternshipPositionSet;
            }
        }
        private ObjectSet<InternshipPosition> _InternshipPositionSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InternshipPositionLog> InternshipPositionLog
        {
            get
            {
                if ((_InternshipPositionLog == null))
                {
                    _InternshipPositionLog = base.CreateObjectSet<InternshipPositionLog>("InternshipPositionLog");
                }
                return _InternshipPositionLog;
            }
        }
        private ObjectSet<InternshipPositionLog> _InternshipPositionLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BlockedPositionGroup> BlockedPositionGroupSet
        {
            get
            {
                if ((_BlockedPositionGroupSet == null))
                {
                    _BlockedPositionGroupSet = base.CreateObjectSet<BlockedPositionGroup>("BlockedPositionGroupSet");
                }
                return _BlockedPositionGroupSet;
            }
        }
        private ObjectSet<BlockedPositionGroup> _BlockedPositionGroupSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InternshipPositionGroupLog> InternshipPositionGroupLog
        {
            get
            {
                if ((_InternshipPositionGroupLog == null))
                {
                    _InternshipPositionGroupLog = base.CreateObjectSet<InternshipPositionGroupLog>("InternshipPositionGroupLog");
                }
                return _InternshipPositionGroupLog;
            }
        }
        private ObjectSet<InternshipPositionGroupLog> _InternshipPositionGroupLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StudentPracticeApiLog> StudentPracticeApiLog
        {
            get
            {
                if ((_StudentPracticeApiLog == null))
                {
                    _StudentPracticeApiLog = base.CreateObjectSet<StudentPracticeApiLog>("StudentPracticeApiLog");
                }
                return _StudentPracticeApiLog;
            }
        }
        private ObjectSet<StudentPracticeApiLog> _StudentPracticeApiLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QueueEntry> QueueEntries
        {
            get
            {
                if ((_QueueEntries == null))
                {
                    _QueueEntries = base.CreateObjectSet<QueueEntry>("QueueEntries");
                }
                return _QueueEntries;
            }
        }
        private ObjectSet<QueueEntry> _QueueEntries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Questionnaire> Questionnaires
        {
            get
            {
                if ((_Questionnaires == null))
                {
                    _Questionnaires = base.CreateObjectSet<Questionnaire>("Questionnaires");
                }
                return _Questionnaires;
            }
        }
        private ObjectSet<Questionnaire> _Questionnaires;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuestionnaireAnswer> QuestionnaireAnswers
        {
            get
            {
                if ((_QuestionnaireAnswers == null))
                {
                    _QuestionnaireAnswers = base.CreateObjectSet<QuestionnaireAnswer>("QuestionnaireAnswers");
                }
                return _QuestionnaireAnswers;
            }
        }
        private ObjectSet<QuestionnaireAnswer> _QuestionnaireAnswers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuestionnaireQuestion> QuestionnaireQuestions
        {
            get
            {
                if ((_QuestionnaireQuestions == null))
                {
                    _QuestionnaireQuestions = base.CreateObjectSet<QuestionnaireQuestion>("QuestionnaireQuestions");
                }
                return _QuestionnaireQuestions;
            }
        }
        private ObjectSet<QuestionnaireQuestion> _QuestionnaireQuestions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubmittedQuestionnaire> SubmittedQuestionnaires
        {
            get
            {
                if ((_SubmittedQuestionnaires == null))
                {
                    _SubmittedQuestionnaires = base.CreateObjectSet<SubmittedQuestionnaire>("SubmittedQuestionnaires");
                }
                return _SubmittedQuestionnaires;
            }
        }
        private ObjectSet<SubmittedQuestionnaire> _SubmittedQuestionnaires;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DispatchSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDispatchSet(Dispatch dispatch)
        {
            base.AddObject("DispatchSet", dispatch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IncidentReportSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIncidentReportSet(IncidentReport incidentReport)
        {
            base.AddObject("IncidentReportSet", incidentReport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IncidentReportPostSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIncidentReportPostSet(IncidentReportPost incidentReportPost)
        {
            base.AddObject("IncidentReportPostSet", incidentReportPost);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IncidentTypeSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIncidentTypeSet(IncidentType incidentType)
        {
            base.AddObject("IncidentTypeSet", incidentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CitySet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCitySet(City city)
        {
            base.AddObject("CitySet", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrefectureSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrefectureSet(Prefecture prefecture)
        {
            base.AddObject("PrefectureSet", prefecture);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegionSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegionSet(Region region)
        {
            base.AddObject("RegionSet", region);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reporters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReporters(Reporter reporter)
        {
            base.AddObject("Reporters", reporter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReporterIncidentTypeSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReporterIncidentTypeSet(ReporterIncidentType reporterIncidentType)
        {
            base.AddObject("ReporterIncidentTypeSet", reporterIncidentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubSystemSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubSystemSet(SubSystem subSystem)
        {
            base.AddObject("SubSystemSet", subSystem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubSystemReporterTypeSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubSystemReporterTypeSet(SubSystemReporterType subSystemReporterType)
        {
            base.AddObject("SubSystemReporterTypeSet", subSystemReporterType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AcademicSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAcademicSet(Academic academic)
        {
            base.AddObject("AcademicSet", academic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MassMessage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMassMessage(MassMessage massMessage)
        {
            base.AddObject("MassMessage", massMessage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailLog(Email email)
        {
            base.AddObject("EmailLog", email);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Institution EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstitution(Institution institution)
        {
            base.AddObject("Institution", institution);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Country EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountry(Country country)
        {
            base.AddObject("Country", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SmsLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSmsLog(SMS sMS)
        {
            base.AddObject("SmsLog", sMS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GlobalRegion EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGlobalRegion(GlobalRegion globalRegion)
        {
            base.AddObject("GlobalRegion", globalRegion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhysicalObjectSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhysicalObjectSet(PhysicalObject physicalObject)
        {
            base.AddObject("PhysicalObjectSet", physicalObject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InternshipPositionGroup EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInternshipPositionGroup(InternshipPositionGroup internshipPositionGroup)
        {
            base.AddObject("InternshipPositionGroup", internshipPositionGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VerificationLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVerificationLog(VerificationLog verificationLog)
        {
            base.AddObject("VerificationLog", verificationLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrimaryActivity EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrimaryActivity(PrimaryActivity primaryActivity)
        {
            base.AddObject("PrimaryActivity", primaryActivity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InternshipPositionSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInternshipPositionSet(InternshipPosition internshipPosition)
        {
            base.AddObject("InternshipPositionSet", internshipPosition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InternshipPositionLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInternshipPositionLog(InternshipPositionLog internshipPositionLog)
        {
            base.AddObject("InternshipPositionLog", internshipPositionLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BlockedPositionGroupSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlockedPositionGroupSet(BlockedPositionGroup blockedPositionGroup)
        {
            base.AddObject("BlockedPositionGroupSet", blockedPositionGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InternshipPositionGroupLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInternshipPositionGroupLog(InternshipPositionGroupLog internshipPositionGroupLog)
        {
            base.AddObject("InternshipPositionGroupLog", internshipPositionGroupLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StudentPracticeApiLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudentPracticeApiLog(StudentPracticeApiLog studentPracticeApiLog)
        {
            base.AddObject("StudentPracticeApiLog", studentPracticeApiLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QueueEntries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQueueEntries(QueueEntry queueEntry)
        {
            base.AddObject("QueueEntries", queueEntry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Questionnaires EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestionnaires(Questionnaire questionnaire)
        {
            base.AddObject("Questionnaires", questionnaire);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuestionnaireAnswers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestionnaireAnswers(QuestionnaireAnswer questionnaireAnswer)
        {
            base.AddObject("QuestionnaireAnswers", questionnaireAnswer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuestionnaireQuestions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestionnaireQuestions(QuestionnaireQuestion questionnaireQuestion)
        {
            base.AddObject("QuestionnaireQuestions", questionnaireQuestion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubmittedQuestionnaires EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubmittedQuestionnaires(SubmittedQuestionnaire submittedQuestionnaire)
        {
            base.AddObject("SubmittedQuestionnaires", submittedQuestionnaire);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Nullable<global::System.Int32>> GetDistinctOriginAcademicIDs()
        {
            return base.ExecuteFunction<Nullable<global::System.Int32>>("GetDistinctOriginAcademicIDs");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="academicID">No Metadata Documentation available.</param>
        /// <param name="studentCategory1">No Metadata Documentation available.</param>
        /// <param name="studentCategory2">No Metadata Documentation available.</param>
        /// <param name="schoolCategory1">No Metadata Documentation available.</param>
        /// <param name="schoolCategory2">No Metadata Documentation available.</param>
        public ObjectResult<GetTransferStatisticsByDepartment_Result> GetTransferStatisticsByDepartment(Nullable<global::System.Int32> academicID, Nullable<global::System.Int32> studentCategory1, Nullable<global::System.Int32> studentCategory2, Nullable<global::System.Int32> schoolCategory1, Nullable<global::System.Int32> schoolCategory2)
        {
            ObjectParameter academicIDParameter;
            if (academicID.HasValue)
            {
                academicIDParameter = new ObjectParameter("AcademicID", academicID);
            }
            else
            {
                academicIDParameter = new ObjectParameter("AcademicID", typeof(global::System.Int32));
            }
    
            ObjectParameter studentCategory1Parameter;
            if (studentCategory1.HasValue)
            {
                studentCategory1Parameter = new ObjectParameter("StudentCategory1", studentCategory1);
            }
            else
            {
                studentCategory1Parameter = new ObjectParameter("StudentCategory1", typeof(global::System.Int32));
            }
    
            ObjectParameter studentCategory2Parameter;
            if (studentCategory2.HasValue)
            {
                studentCategory2Parameter = new ObjectParameter("StudentCategory2", studentCategory2);
            }
            else
            {
                studentCategory2Parameter = new ObjectParameter("StudentCategory2", typeof(global::System.Int32));
            }
    
            ObjectParameter schoolCategory1Parameter;
            if (schoolCategory1.HasValue)
            {
                schoolCategory1Parameter = new ObjectParameter("SchoolCategory1", schoolCategory1);
            }
            else
            {
                schoolCategory1Parameter = new ObjectParameter("SchoolCategory1", typeof(global::System.Int32));
            }
    
            ObjectParameter schoolCategory2Parameter;
            if (schoolCategory2.HasValue)
            {
                schoolCategory2Parameter = new ObjectParameter("SchoolCategory2", schoolCategory2);
            }
            else
            {
                schoolCategory2Parameter = new ObjectParameter("SchoolCategory2", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetTransferStatisticsByDepartment_Result>("GetTransferStatisticsByDepartment", academicIDParameter, studentCategory1Parameter, studentCategory2Parameter, schoolCategory1Parameter, schoolCategory2Parameter);
        }

        #endregion

    }
    

    #endregion

    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="Academic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Academic : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Academic object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="institutionInGreek">Initial value of the InstitutionInGreek property.</param>
        /// <param name="departmentInGreek">Initial value of the DepartmentInGreek property.</param>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="maxAllowedPreAssignedPositions">Initial value of the MaxAllowedPreAssignedPositions property.</param>
        /// <param name="preAssignedPositions">Initial value of the PreAssignedPositions property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Academic CreateAcademic(global::System.Int32 id, global::System.String institutionInGreek, global::System.String departmentInGreek, global::System.Int32 institutionID, global::System.Int32 maxAllowedPreAssignedPositions, global::System.Int32 preAssignedPositions, global::System.Boolean isActive)
        {
            Academic academic = new Academic();
            academic.ID = id;
            academic.InstitutionInGreek = institutionInGreek;
            academic.DepartmentInGreek = departmentInGreek;
            academic.InstitutionID = institutionID;
            academic.MaxAllowedPreAssignedPositions = maxAllowedPreAssignedPositions;
            academic.PreAssignedPositions = preAssignedPositions;
            academic.IsActive = isActive;
            return academic;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstitutionInGreek
        {
            get
            {
                return _InstitutionInGreek;
            }
            set
            {
                if (_InstitutionInGreek != value)
                {
                    OnInstitutionInGreekChanging(value);
                    ReportPropertyChanging("InstitutionInGreek");
                    _InstitutionInGreek = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("InstitutionInGreek");
                    OnInstitutionInGreekChanged();
                }
            }
        }
        private global::System.String _InstitutionInGreek;
        partial void OnInstitutionInGreekChanging(global::System.String value);
        partial void OnInstitutionInGreekChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SchoolInGreek
        {
            get
            {
                return _SchoolInGreek;
            }
            set
            {
                if (_SchoolInGreek != value)
                {
                    OnSchoolInGreekChanging(value);
                    ReportPropertyChanging("SchoolInGreek");
                    _SchoolInGreek = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("SchoolInGreek");
                    OnSchoolInGreekChanged();
                }
            }
        }
        private global::System.String _SchoolInGreek;
        partial void OnSchoolInGreekChanging(global::System.String value);
        partial void OnSchoolInGreekChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DepartmentInGreek
        {
            get
            {
                return _DepartmentInGreek;
            }
            set
            {
                if (_DepartmentInGreek != value)
                {
                    OnDepartmentInGreekChanging(value);
                    ReportPropertyChanging("DepartmentInGreek");
                    _DepartmentInGreek = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DepartmentInGreek");
                    OnDepartmentInGreekChanged();
                }
            }
        }
        private global::System.String _DepartmentInGreek;
        partial void OnDepartmentInGreekChanging(global::System.String value);
        partial void OnDepartmentInGreekChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                if (_Address != value)
                {
                    OnAddressChanging(value);
                    ReportPropertyChanging("Address");
                    _Address = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("Address");
                    OnAddressChanged();
                }
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                if (_ZipCode != value)
                {
                    OnZipCodeChanging(value);
                    ReportPropertyChanging("ZipCode");
                    _ZipCode = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("ZipCode");
                    OnZipCodeChanged();
                }
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                if (_CityID != value)
                {
                    OnCityIDChanging(value);
                    ReportPropertyChanging("CityID");
                    _CityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityID");
                    OnCityIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrefectureID
        {
            get
            {
                return _PrefectureID;
            }
            set
            {
                if (_PrefectureID != value)
                {
                    OnPrefectureIDChanging(value);
                    ReportPropertyChanging("PrefectureID");
                    _PrefectureID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PrefectureID");
                    OnPrefectureIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _PrefectureID;
        partial void OnPrefectureIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrefectureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Semesters
        {
            get
            {
                return _Semesters;
            }
            set
            {
                if (_Semesters != value)
                {
                    OnSemestersChanging(value);
                    ReportPropertyChanging("Semesters");
                    _Semesters = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Semesters");
                    OnSemestersChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _Semesters;
        partial void OnSemestersChanging(Nullable<global::System.Int32> value);
        partial void OnSemestersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                if (_InstitutionID != value)
                {
                    OnInstitutionIDChanging(value);
                    ReportPropertyChanging("InstitutionID");
                    _InstitutionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstitutionID");
                    OnInstitutionIDChanged();
                }
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxAllowedPreAssignedPositions
        {
            get
            {
                return _MaxAllowedPreAssignedPositions;
            }
            set
            {
                if (_MaxAllowedPreAssignedPositions != value)
                {
                    OnMaxAllowedPreAssignedPositionsChanging(value);
                    ReportPropertyChanging("MaxAllowedPreAssignedPositions");
                    _MaxAllowedPreAssignedPositions = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MaxAllowedPreAssignedPositions");
                    OnMaxAllowedPreAssignedPositionsChanged();
                }
            }
        }
        private global::System.Int32 _MaxAllowedPreAssignedPositions;
        partial void OnMaxAllowedPreAssignedPositionsChanging(global::System.Int32 value);
        partial void OnMaxAllowedPreAssignedPositionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PreAssignedPositions
        {
            get
            {
                return _PreAssignedPositions;
            }
            set
            {
                if (_PreAssignedPositions != value)
                {
                    OnPreAssignedPositionsChanging(value);
                    ReportPropertyChanging("PreAssignedPositions");
                    _PreAssignedPositions = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PreAssignedPositions");
                    OnPreAssignedPositionsChanged();
                }
            }
        }
        private global::System.Int32 _PreAssignedPositions;
        partial void OnPreAssignedPositionsChanging(global::System.Int32 value);
        partial void OnPreAssignedPositionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PositionRules
        {
            get
            {
                return _PositionRules;
            }
            set
            {
                if (_PositionRules != value)
                {
                    OnPositionRulesChanging(value);
                    ReportPropertyChanging("PositionRules");
                    _PositionRules = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("PositionRules");
                    OnPositionRulesChanged();
                }
            }
        }
        private global::System.String _PositionRules;
        partial void OnPositionRulesChanging(global::System.String value);
        partial void OnPositionRulesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                if (_IsActive != value)
                {
                    OnIsActiveChanging(value);
                    ReportPropertyChanging("IsActive");
                    _IsActive = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsActive");
                    OnIsActiveChanged();
                }
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InstitutionInLatin
        {
            get
            {
                return _InstitutionInLatin;
            }
            set
            {
                if (_InstitutionInLatin != value)
                {
                    OnInstitutionInLatinChanging(value);
                    ReportPropertyChanging("InstitutionInLatin");
                    _InstitutionInLatin = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("InstitutionInLatin");
                    OnInstitutionInLatinChanged();
                }
            }
        }
        private global::System.String _InstitutionInLatin;
        partial void OnInstitutionInLatinChanging(global::System.String value);
        partial void OnInstitutionInLatinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SchoolInLatin
        {
            get
            {
                return _SchoolInLatin;
            }
            set
            {
                if (_SchoolInLatin != value)
                {
                    OnSchoolInLatinChanging(value);
                    ReportPropertyChanging("SchoolInLatin");
                    _SchoolInLatin = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("SchoolInLatin");
                    OnSchoolInLatinChanged();
                }
            }
        }
        private global::System.String _SchoolInLatin;
        partial void OnSchoolInLatinChanging(global::System.String value);
        partial void OnSchoolInLatinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DepartmentInLatin
        {
            get
            {
                return _DepartmentInLatin;
            }
            set
            {
                if (_DepartmentInLatin != value)
                {
                    OnDepartmentInLatinChanging(value);
                    ReportPropertyChanging("DepartmentInLatin");
                    _DepartmentInLatin = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("DepartmentInLatin");
                    OnDepartmentInLatinChanged();
                }
            }
        }
        private global::System.String _DepartmentInLatin;
        partial void OnDepartmentInLatinChanging(global::System.String value);
        partial void OnDepartmentInLatinChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Academic_Kap_Cities", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DBEntitiesModel.FK_Academic_Kap_Cities", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DBEntitiesModel.FK_Academic_Kap_Cities", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DBEntitiesModel.FK_Academic_Kap_Cities", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("DBEntitiesModel.FK_Academic_Kap_Cities", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Academic_Kap_Prefectures", "Prefecture")]
        public Prefecture Prefecture
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prefecture>("DBEntitiesModel.FK_Academic_Kap_Prefectures", "Prefecture").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prefecture>("DBEntitiesModel.FK_Academic_Kap_Prefectures", "Prefecture").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Prefecture> PrefectureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prefecture>("DBEntitiesModel.FK_Academic_Kap_Prefectures", "Prefecture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Prefecture>("DBEntitiesModel.FK_Academic_Kap_Prefectures", "Prefecture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "AcademicStudent", "Student")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("DBEntitiesModel.AcademicStudent", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("DBEntitiesModel.AcademicStudent", "Student", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Academic_Institution", "Institution")]
        public Institution InstitutionRef
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("DBEntitiesModel.FK_Academic_Institution", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("DBEntitiesModel.FK_Academic_Institution", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionRefReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("DBEntitiesModel.FK_Academic_Institution", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("DBEntitiesModel.FK_Academic_Institution", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionGroupAcademicXRef1", "InternshipPositionGroup")]
        public EntityCollection<InternshipPositionGroup> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionGroup>("DBEntitiesModel.InternshipPositionGroupAcademicXRef1", "InternshipPositionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionGroup>("DBEntitiesModel.InternshipPositionGroupAcademicXRef1", "InternshipPositionGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipOfficeAcademics", "InternshipOffice")]
        public EntityCollection<InternshipOffice> InternshipOffices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipOffice>("DBEntitiesModel.InternshipOfficeAcademics", "InternshipOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipOffice>("DBEntitiesModel.InternshipOfficeAcademics", "InternshipOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_InternshipPosition_PreAssignedForAcademic", "InternshipPosition")]
        public EntityCollection<InternshipPosition> InternshipPosition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPosition>("DBEntitiesModel.FK_InternshipPosition_PreAssignedForAcademic", "InternshipPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPosition>("DBEntitiesModel.FK_InternshipPosition_PreAssignedForAcademic", "InternshipPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_InternshipPositionLog_PreAssignedForAcademic", "InternshipPositionLog")]
        public EntityCollection<InternshipPositionLog> InternshipPositionLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionLog>("DBEntitiesModel.FK_InternshipPositionLog_PreAssignedForAcademic", "InternshipPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionLog>("DBEntitiesModel.FK_InternshipPositionLog_PreAssignedForAcademic", "InternshipPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "PreviousAcademicStudent", "Student")]
        public EntityCollection<Student> PreviousStudents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("DBEntitiesModel.PreviousAcademicStudent", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("DBEntitiesModel.PreviousAcademicStudent", "Student", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="AdminUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdminUser : Reporter
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdminUser object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="reporterTypeInt">Initial value of the ReporterTypeInt property.</param>
        /// <param name="declarationTypeInt">Initial value of the DeclarationTypeInt property.</param>
        /// <param name="usernameFromLDAP">Initial value of the UsernameFromLDAP property.</param>
        /// <param name="isEmailVerified">Initial value of the IsEmailVerified property.</param>
        /// <param name="mustChangePassword">Initial value of the MustChangePassword property.</param>
        /// <param name="createdAt">Initial value of the CreatedAt property.</param>
        /// <param name="createdAtDateOnly">Initial value of the CreatedAtDateOnly property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isContactInfoCompleted">Initial value of the IsContactInfoCompleted property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isMasterAccount">Initial value of the IsMasterAccount property.</param>
        /// <param name="registrationTypeInt">Initial value of the RegistrationTypeInt property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static AdminUser CreateAdminUser(global::System.Int32 id, global::System.Int32 reporterTypeInt, global::System.Int32 declarationTypeInt, global::System.String usernameFromLDAP, global::System.Boolean isEmailVerified, global::System.Boolean mustChangePassword, global::System.DateTime createdAt, global::System.DateTime createdAtDateOnly, global::System.String createdBy, global::System.Boolean isContactInfoCompleted, global::System.Boolean isApproved, global::System.Boolean isMasterAccount, global::System.Int32 registrationTypeInt, global::System.Boolean isActive)
        {
            AdminUser adminUser = new AdminUser();
            adminUser.ID = id;
            adminUser.ReporterTypeInt = reporterTypeInt;
            adminUser.DeclarationTypeInt = declarationTypeInt;
            adminUser.UsernameFromLDAP = usernameFromLDAP;
            adminUser.IsEmailVerified = isEmailVerified;
            adminUser.MustChangePassword = mustChangePassword;
            adminUser.CreatedAt = createdAt;
            adminUser.CreatedAtDateOnly = createdAtDateOnly;
            adminUser.CreatedBy = createdBy;
            adminUser.IsContactInfoCompleted = isContactInfoCompleted;
            adminUser.IsApproved = isApproved;
            adminUser.IsMasterAccount = isMasterAccount;
            adminUser.RegistrationTypeInt = registrationTypeInt;
            adminUser.IsActive = isActive;
            return adminUser;
        }

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="BlockedPositionGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlockedPositionGroup : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BlockedPositionGroup object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="groupID">Initial value of the GroupID property.</param>
        /// <param name="masterAccountID">Initial value of the MasterAccountID property.</param>
        /// <param name="blockingReasonInt">Initial value of the BlockingReasonInt property.</param>
        /// <param name="daysLeft">Initial value of the DaysLeft property.</param>
        /// <param name="createdAt">Initial value of the CreatedAt property.</param>
        /// <param name="createdAtDateOnly">Initial value of the CreatedAtDateOnly property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static BlockedPositionGroup CreateBlockedPositionGroup(global::System.Int32 id, global::System.Int32 groupID, global::System.Int32 masterAccountID, global::System.Int32 blockingReasonInt, global::System.Int32 daysLeft, global::System.DateTime createdAt, global::System.DateTime createdAtDateOnly, global::System.String createdBy)
        {
            BlockedPositionGroup blockedPositionGroup = new BlockedPositionGroup();
            blockedPositionGroup.ID = id;
            blockedPositionGroup.GroupID = groupID;
            blockedPositionGroup.MasterAccountID = masterAccountID;
            blockedPositionGroup.BlockingReasonInt = blockingReasonInt;
            blockedPositionGroup.DaysLeft = daysLeft;
            blockedPositionGroup.CreatedAt = createdAt;
            blockedPositionGroup.CreatedAtDateOnly = createdAtDateOnly;
            blockedPositionGroup.CreatedBy = createdBy;
            return blockedPositionGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                if (_GroupID != value)
                {
                    OnGroupIDChanging(value);
                    ReportPropertyChanging("GroupID");
                    _GroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupID");
                    OnGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _GroupID;
        partial void OnGroupIDChanging(global::System.Int32 value);
        partial void OnGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterAccountID
        {
            get
            {
                return _MasterAccountID;
            }
            set
            {
                if (_MasterAccountID != value)
                {
                    OnMasterAccountIDChanging(value);
                    ReportPropertyChanging("MasterAccountID");
                    _MasterAccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MasterAccountID");
                    OnMasterAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _MasterAccountID;
        partial void OnMasterAccountIDChanging(global::System.Int32 value);
        partial void OnMasterAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlockingReasonInt
        {
            get
            {
                return _BlockingReasonInt;
            }
            set
            {
                if (_BlockingReasonInt != value)
                {
                    OnBlockingReasonIntChanging(value);
                    ReportPropertyChanging("BlockingReasonInt");
                    _BlockingReasonInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BlockingReasonInt");
                    OnBlockingReasonIntChanged();
                }
            }
        }
        private global::System.Int32 _BlockingReasonInt;
        partial void OnBlockingReasonIntChanging(global::System.Int32 value);
        partial void OnBlockingReasonIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DaysLeft
        {
            get
            {
                return _DaysLeft;
            }
            set
            {
                if (_DaysLeft != value)
                {
                    OnDaysLeftChanging(value);
                    ReportPropertyChanging("DaysLeft");
                    _DaysLeft = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DaysLeft");
                    OnDaysLeftChanged();
                }
            }
        }
        private global::System.Int32 _DaysLeft;
        partial void OnDaysLeftChanging(global::System.Int32 value);
        partial void OnDaysLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                if (_CreatedAt != value)
                {
                    OnCreatedAtChanging(value);
                    ReportPropertyChanging("CreatedAt");
                    _CreatedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedAt");
                    OnCreatedAtChanged();
                }
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAtDateOnly
        {
            get
            {
                return _CreatedAtDateOnly;
            }
            set
            {
                if (_CreatedAtDateOnly != value)
                {
                    OnCreatedAtDateOnlyChanging(value);
                    ReportPropertyChanging("CreatedAtDateOnly");
                    _CreatedAtDateOnly = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedAtDateOnly");
                    OnCreatedAtDateOnlyChanged();
                }
            }
        }
        private global::System.DateTime _CreatedAtDateOnly;
        partial void OnCreatedAtDateOnlyChanging(global::System.DateTime value);
        partial void OnCreatedAtDateOnlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                if (_CreatedBy != value)
                {
                    OnCreatedByChanging(value);
                    ReportPropertyChanging("CreatedBy");
                    _CreatedBy = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CreatedBy");
                    OnCreatedByChanged();
                }
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedAt
        {
            get
            {
                return _UpdatedAt;
            }
            set
            {
                if (_UpdatedAt != value)
                {
                    OnUpdatedAtChanging(value);
                    ReportPropertyChanging("UpdatedAt");
                    _UpdatedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UpdatedAt");
                    OnUpdatedAtChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _UpdatedAt;
        partial void OnUpdatedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                if (_UpdatedBy != value)
                {
                    OnUpdatedByChanging(value);
                    ReportPropertyChanging("UpdatedBy");
                    _UpdatedBy = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("UpdatedBy");
                    OnUpdatedByChanged();
                }
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MasterBlockID
        {
            get
            {
                return _MasterBlockID;
            }
            set
            {
                if (_MasterBlockID != value)
                {
                    OnMasterBlockIDChanging(value);
                    ReportPropertyChanging("MasterBlockID");
                    _MasterBlockID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MasterBlockID");
                    OnMasterBlockIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _MasterBlockID;
        partial void OnMasterBlockIDChanging(Nullable<global::System.Int32> value);
        partial void OnMasterBlockIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_BlockedPositionGroup_InternshipPositionGroup", "InternshipPositionGroup")]
        public InternshipPositionGroup InternshipPositionGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipPositionGroup>("DBEntitiesModel.FK_BlockedPositionGroup_InternshipPositionGroup", "InternshipPositionGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipPositionGroup>("DBEntitiesModel.FK_BlockedPositionGroup_InternshipPositionGroup", "InternshipPositionGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipPositionGroup> InternshipPositionGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipPositionGroup>("DBEntitiesModel.FK_BlockedPositionGroup_InternshipPositionGroup", "InternshipPositionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipPositionGroup>("DBEntitiesModel.FK_BlockedPositionGroup_InternshipPositionGroup", "InternshipPositionGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "BlockedPositionGroupInternshipOffice", "InternshipOffice")]
        public InternshipOffice MasterAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.BlockedPositionGroupInternshipOffice", "InternshipOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.BlockedPositionGroupInternshipOffice", "InternshipOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipOffice> MasterAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.BlockedPositionGroupInternshipOffice", "InternshipOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipOffice>("DBEntitiesModel.BlockedPositionGroupInternshipOffice", "InternshipOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_BlockedPositionGroup_MasterBlock", "BlockedPositionGroup1")]
        public EntityCollection<BlockedPositionGroup> CascadedBlocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlockedPositionGroup>("DBEntitiesModel.FK_BlockedPositionGroup_MasterBlock", "BlockedPositionGroup1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlockedPositionGroup>("DBEntitiesModel.FK_BlockedPositionGroup_MasterBlock", "BlockedPositionGroup1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_BlockedPositionGroup_MasterBlock", "BlockedPositionGroup")]
        public BlockedPositionGroup MasterBlock
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlockedPositionGroup>("DBEntitiesModel.FK_BlockedPositionGroup_MasterBlock", "BlockedPositionGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlockedPositionGroup>("DBEntitiesModel.FK_BlockedPositionGroup_MasterBlock", "BlockedPositionGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BlockedPositionGroup> MasterBlockReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BlockedPositionGroup>("DBEntitiesModel.FK_BlockedPositionGroup_MasterBlock", "BlockedPositionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BlockedPositionGroup>("DBEntitiesModel.FK_BlockedPositionGroup_MasterBlock", "BlockedPositionGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="prefectureID">Initial value of the PrefectureID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        public static City CreateCity(global::System.Int32 id, global::System.String name, global::System.Int32 prefectureID, global::System.Int32 countryID)
        {
            City city = new City();
            city.ID = id;
            city.Name = name;
            city.PrefectureID = prefectureID;
            city.CountryID = countryID;
            return city;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PrefectureID
        {
            get
            {
                return _PrefectureID;
            }
            set
            {
                if (_PrefectureID != value)
                {
                    OnPrefectureIDChanging(value);
                    ReportPropertyChanging("PrefectureID");
                    _PrefectureID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PrefectureID");
                    OnPrefectureIDChanged();
                }
            }
        }
        private global::System.Int32 _PrefectureID;
        partial void OnPrefectureIDChanging(global::System.Int32 value);
        partial void OnPrefectureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Kap_Cities_Kap_Prefectures", "Kali_Prefectures")]
        public Prefecture Prefectures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prefecture>("DBEntitiesModel.FK_Kap_Cities_Kap_Prefectures", "Kali_Prefectures").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prefecture>("DBEntitiesModel.FK_Kap_Cities_Kap_Prefectures", "Kali_Prefectures").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Prefecture> PrefecturesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prefecture>("DBEntitiesModel.FK_Kap_Cities_Kap_Prefectures", "Kali_Prefectures");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Prefecture>("DBEntitiesModel.FK_Kap_Cities_Kap_Prefectures", "Kali_Prefectures", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Academic_Kap_Cities", "Academic")]
        public EntityCollection<Academic> Academic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Academic>("DBEntitiesModel.FK_Academic_Kap_Cities", "Academic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Academic>("DBEntitiesModel.FK_Academic_Kap_Cities", "Academic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "CityOffice", "Office")]
        public EntityCollection<InternshipOffice> Offices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipOffice>("DBEntitiesModel.CityOffice", "Office");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipOffice>("DBEntitiesModel.CityOffice", "Office", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "CityProvider", "Provider")]
        public EntityCollection<InternshipProvider> Providers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipProvider>("DBEntitiesModel.CityProvider", "Provider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipProvider>("DBEntitiesModel.CityProvider", "Provider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_InternshipPositionGroup_Kali_Cities", "InternshipPositionGroup")]
        public EntityCollection<InternshipPositionGroup> InternshipPositionGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionGroup>("DBEntitiesModel.FK_InternshipPositionGroup_Kali_Cities", "InternshipPositionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionGroup>("DBEntitiesModel.FK_InternshipPositionGroup_Kali_Cities", "InternshipPositionGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Kali_Cities_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DBEntitiesModel.FK_Kali_Cities_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DBEntitiesModel.FK_Kali_Cities_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DBEntitiesModel.FK_Kali_Cities_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("DBEntitiesModel.FK_Kali_Cities_Country", "Country", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="nameInGreek">Initial value of the NameInGreek property.</param>
        /// <param name="globalRegionID">Initial value of the GlobalRegionID property.</param>
        public static Country CreateCountry(global::System.Int32 id, global::System.String nameInGreek, global::System.Int32 globalRegionID)
        {
            Country country = new Country();
            country.ID = id;
            country.NameInGreek = nameInGreek;
            country.GlobalRegionID = globalRegionID;
            return country;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameInGreek
        {
            get
            {
                return _NameInGreek;
            }
            set
            {
                if (_NameInGreek != value)
                {
                    OnNameInGreekChanging(value);
                    ReportPropertyChanging("NameInGreek");
                    _NameInGreek = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("NameInGreek");
                    OnNameInGreekChanged();
                }
            }
        }
        private global::System.String _NameInGreek;
        partial void OnNameInGreekChanging(global::System.String value);
        partial void OnNameInGreekChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GlobalRegionID
        {
            get
            {
                return _GlobalRegionID;
            }
            set
            {
                if (_GlobalRegionID != value)
                {
                    OnGlobalRegionIDChanging(value);
                    ReportPropertyChanging("GlobalRegionID");
                    _GlobalRegionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GlobalRegionID");
                    OnGlobalRegionIDChanged();
                }
            }
        }
        private global::System.Int32 _GlobalRegionID;
        partial void OnGlobalRegionIDChanging(global::System.Int32 value);
        partial void OnGlobalRegionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameInLatin
        {
            get
            {
                return _NameInLatin;
            }
            set
            {
                if (_NameInLatin != value)
                {
                    OnNameInLatinChanging(value);
                    ReportPropertyChanging("NameInLatin");
                    _NameInLatin = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("NameInLatin");
                    OnNameInLatinChanged();
                }
            }
        }
        private global::System.String _NameInLatin;
        partial void OnNameInLatinChanging(global::System.String value);
        partial void OnNameInLatinChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "CountryProvider", "Provider")]
        public EntityCollection<InternshipProvider> Providers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipProvider>("DBEntitiesModel.CountryProvider", "Provider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipProvider>("DBEntitiesModel.CountryProvider", "Provider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Country_GlobalRegion", "GlobalRegion")]
        public GlobalRegion GlobalRegion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GlobalRegion>("DBEntitiesModel.FK_Country_GlobalRegion", "GlobalRegion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GlobalRegion>("DBEntitiesModel.FK_Country_GlobalRegion", "GlobalRegion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GlobalRegion> GlobalRegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GlobalRegion>("DBEntitiesModel.FK_Country_GlobalRegion", "GlobalRegion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GlobalRegion>("DBEntitiesModel.FK_Country_GlobalRegion", "GlobalRegion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_InternshipPositionGroup_Country", "InternshipPositionGroup")]
        public EntityCollection<InternshipPositionGroup> InternshipPositionGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionGroup>("DBEntitiesModel.FK_InternshipPositionGroup_Country", "InternshipPositionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionGroup>("DBEntitiesModel.FK_InternshipPositionGroup_Country", "InternshipPositionGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Kali_Cities_Country", "City")]
        public EntityCollection<City> Kali_Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("DBEntitiesModel.FK_Kali_Cities_Country", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("DBEntitiesModel.FK_Kali_Cities_Country", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Kali_Prefectures_Country", "Prefecture")]
        public EntityCollection<Prefecture> Kali_Prefectures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Prefecture>("DBEntitiesModel.FK_Kali_Prefectures_Country", "Prefecture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Prefecture>("DBEntitiesModel.FK_Kali_Prefectures_Country", "Prefecture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Kali_Regions_Country", "Region")]
        public EntityCollection<Region> Kali_Regions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Region>("DBEntitiesModel.FK_Kali_Regions_Country", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Region>("DBEntitiesModel.FK_Kali_Regions_Country", "Region", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="Dispatch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dispatch : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Dispatch object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="incidentReportPostID">Initial value of the IncidentReportPostID property.</param>
        /// <param name="dispatchTypeInt">Initial value of the DispatchTypeInt property.</param>
        /// <param name="dispatchText">Initial value of the DispatchText property.</param>
        /// <param name="dispatchSentAt">Initial value of the DispatchSentAt property.</param>
        /// <param name="dispatchSentBy">Initial value of the DispatchSentBy property.</param>
        public static Dispatch CreateDispatch(global::System.Int32 id, global::System.Int32 incidentReportPostID, global::System.Int32 dispatchTypeInt, global::System.String dispatchText, global::System.DateTime dispatchSentAt, global::System.String dispatchSentBy)
        {
            Dispatch dispatch = new Dispatch();
            dispatch.ID = id;
            dispatch.IncidentReportPostID = incidentReportPostID;
            dispatch.DispatchTypeInt = dispatchTypeInt;
            dispatch.DispatchText = dispatchText;
            dispatch.DispatchSentAt = dispatchSentAt;
            dispatch.DispatchSentBy = dispatchSentBy;
            return dispatch;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IncidentReportPostID
        {
            get
            {
                return _IncidentReportPostID;
            }
            set
            {
                if (_IncidentReportPostID != value)
                {
                    OnIncidentReportPostIDChanging(value);
                    ReportPropertyChanging("IncidentReportPostID");
                    _IncidentReportPostID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IncidentReportPostID");
                    OnIncidentReportPostIDChanged();
                }
            }
        }
        private global::System.Int32 _IncidentReportPostID;
        partial void OnIncidentReportPostIDChanging(global::System.Int32 value);
        partial void OnIncidentReportPostIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DispatchTypeInt
        {
            get
            {
                return _DispatchTypeInt;
            }
            set
            {
                if (_DispatchTypeInt != value)
                {
                    OnDispatchTypeIntChanging(value);
                    ReportPropertyChanging("DispatchTypeInt");
                    _DispatchTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DispatchTypeInt");
                    OnDispatchTypeIntChanged();
                }
            }
        }
        private global::System.Int32 _DispatchTypeInt;
        partial void OnDispatchTypeIntChanging(global::System.Int32 value);
        partial void OnDispatchTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DispatchText
        {
            get
            {
                return _DispatchText;
            }
            set
            {
                if (_DispatchText != value)
                {
                    OnDispatchTextChanging(value);
                    ReportPropertyChanging("DispatchText");
                    _DispatchText = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DispatchText");
                    OnDispatchTextChanged();
                }
            }
        }
        private global::System.String _DispatchText;
        partial void OnDispatchTextChanging(global::System.String value);
        partial void OnDispatchTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DispatchSentAt
        {
            get
            {
                return _DispatchSentAt;
            }
            set
            {
                if (_DispatchSentAt != value)
                {
                    OnDispatchSentAtChanging(value);
                    ReportPropertyChanging("DispatchSentAt");
                    _DispatchSentAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DispatchSentAt");
                    OnDispatchSentAtChanged();
                }
            }
        }
        private global::System.DateTime _DispatchSentAt;
        partial void OnDispatchSentAtChanging(global::System.DateTime value);
        partial void OnDispatchSentAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DispatchSentBy
        {
            get
            {
                return _DispatchSentBy;
            }
            set
            {
                if (_DispatchSentBy != value)
                {
                    OnDispatchSentByChanging(value);
                    ReportPropertyChanging("DispatchSentBy");
                    _DispatchSentBy = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DispatchSentBy");
                    OnDispatchSentByChanged();
                }
            }
        }
        private global::System.String _DispatchSentBy;
        partial void OnDispatchSentByChanging(global::System.String value);
        partial void OnDispatchSentByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Dispatch_IncidentReportPost", "IncidentReportPost")]
        public IncidentReportPost IncidentReportPost
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentReportPost>("DBEntitiesModel.FK_Dispatch_IncidentReportPost", "IncidentReportPost").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentReportPost>("DBEntitiesModel.FK_Dispatch_IncidentReportPost", "IncidentReportPost").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IncidentReportPost> IncidentReportPostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentReportPost>("DBEntitiesModel.FK_Dispatch_IncidentReportPost", "IncidentReportPost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IncidentReportPost>("DBEntitiesModel.FK_Dispatch_IncidentReportPost", "IncidentReportPost", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_IncidentReportPost_Dispatch", "IncidentReportPost")]
        public EntityCollection<IncidentReportPost> IncidentReportPosts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IncidentReportPost>("DBEntitiesModel.FK_IncidentReportPost_Dispatch", "IncidentReportPost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IncidentReportPost>("DBEntitiesModel.FK_IncidentReportPost_Dispatch", "IncidentReportPost", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="Email")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Email : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Email object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="reporterID">Initial value of the ReporterID property.</param>
        /// <param name="sentAt">Initial value of the SentAt property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        public static Email CreateEmail(global::System.Int32 id, global::System.Int32 type, global::System.Int32 reporterID, global::System.DateTime sentAt, global::System.String emailAddress, global::System.String subject, global::System.String body)
        {
            Email email = new Email();
            email.ID = id;
            email.Type = type;
            email.ReporterID = reporterID;
            email.SentAt = sentAt;
            email.EmailAddress = emailAddress;
            email.Subject = subject;
            email.Body = body;
            return email;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                if (_Type != value)
                {
                    OnTypeChanging(value);
                    ReportPropertyChanging("Type");
                    _Type = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Type");
                    OnTypeChanged();
                }
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReporterID
        {
            get
            {
                return _ReporterID;
            }
            set
            {
                if (_ReporterID != value)
                {
                    OnReporterIDChanging(value);
                    ReportPropertyChanging("ReporterID");
                    _ReporterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReporterID");
                    OnReporterIDChanged();
                }
            }
        }
        private global::System.Int32 _ReporterID;
        partial void OnReporterIDChanging(global::System.Int32 value);
        partial void OnReporterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SentAt
        {
            get
            {
                return _SentAt;
            }
            set
            {
                if (_SentAt != value)
                {
                    OnSentAtChanging(value);
                    ReportPropertyChanging("SentAt");
                    _SentAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SentAt");
                    OnSentAtChanged();
                }
            }
        }
        private global::System.DateTime _SentAt;
        partial void OnSentAtChanging(global::System.DateTime value);
        partial void OnSentAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                if (_EmailAddress != value)
                {
                    OnEmailAddressChanging(value);
                    ReportPropertyChanging("EmailAddress");
                    _EmailAddress = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EmailAddress");
                    OnEmailAddressChanged();
                }
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                if (_Subject != value)
                {
                    OnSubjectChanging(value);
                    ReportPropertyChanging("Subject");
                    _Subject = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Subject");
                    OnSubjectChanged();
                }
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                if (_Body != value)
                {
                    OnBodyChanging(value);
                    ReportPropertyChanging("Body");
                    _Body = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Body");
                    OnBodyChanged();
                }
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_EmailLog_Reporter", "Reporter")]
        public Reporter Reporter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reporter>("DBEntitiesModel.FK_EmailLog_Reporter", "Reporter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reporter>("DBEntitiesModel.FK_EmailLog_Reporter", "Reporter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reporter> ReporterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reporter>("DBEntitiesModel.FK_EmailLog_Reporter", "Reporter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Reporter>("DBEntitiesModel.FK_EmailLog_Reporter", "Reporter", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="FacultyMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FacultyMember : Reporter
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FacultyMember object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="reporterTypeInt">Initial value of the ReporterTypeInt property.</param>
        /// <param name="declarationTypeInt">Initial value of the DeclarationTypeInt property.</param>
        /// <param name="usernameFromLDAP">Initial value of the UsernameFromLDAP property.</param>
        /// <param name="isEmailVerified">Initial value of the IsEmailVerified property.</param>
        /// <param name="mustChangePassword">Initial value of the MustChangePassword property.</param>
        /// <param name="createdAt">Initial value of the CreatedAt property.</param>
        /// <param name="createdAtDateOnly">Initial value of the CreatedAtDateOnly property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isContactInfoCompleted">Initial value of the IsContactInfoCompleted property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isMasterAccount">Initial value of the IsMasterAccount property.</param>
        /// <param name="registrationTypeInt">Initial value of the RegistrationTypeInt property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static FacultyMember CreateFacultyMember(global::System.Int32 id, global::System.Int32 reporterTypeInt, global::System.Int32 declarationTypeInt, global::System.String usernameFromLDAP, global::System.Boolean isEmailVerified, global::System.Boolean mustChangePassword, global::System.DateTime createdAt, global::System.DateTime createdAtDateOnly, global::System.String createdBy, global::System.Boolean isContactInfoCompleted, global::System.Boolean isApproved, global::System.Boolean isMasterAccount, global::System.Int32 registrationTypeInt, global::System.Boolean isActive)
        {
            FacultyMember facultyMember = new FacultyMember();
            facultyMember.ID = id;
            facultyMember.ReporterTypeInt = reporterTypeInt;
            facultyMember.DeclarationTypeInt = declarationTypeInt;
            facultyMember.UsernameFromLDAP = usernameFromLDAP;
            facultyMember.IsEmailVerified = isEmailVerified;
            facultyMember.MustChangePassword = mustChangePassword;
            facultyMember.CreatedAt = createdAt;
            facultyMember.CreatedAtDateOnly = createdAtDateOnly;
            facultyMember.CreatedBy = createdBy;
            facultyMember.IsContactInfoCompleted = isContactInfoCompleted;
            facultyMember.IsApproved = isApproved;
            facultyMember.IsMasterAccount = isMasterAccount;
            facultyMember.RegistrationTypeInt = registrationTypeInt;
            facultyMember.IsActive = isActive;
            return facultyMember;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                if (_InstitutionID != value)
                {
                    OnInstitutionIDChanging(value);
                    ReportPropertyChanging("InstitutionID");
                    _InstitutionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstitutionID");
                    OnInstitutionIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _InstitutionID;
        partial void OnInstitutionIDChanging(Nullable<global::System.Int32> value);
        partial void OnInstitutionIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InstitutionFacultyMember", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("DBEntitiesModel.InstitutionFacultyMember", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("DBEntitiesModel.InstitutionFacultyMember", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("DBEntitiesModel.InstitutionFacultyMember", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("DBEntitiesModel.InstitutionFacultyMember", "Institution", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="GlobalRegion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GlobalRegion : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GlobalRegion object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static GlobalRegion CreateGlobalRegion(global::System.Int32 id, global::System.String name)
        {
            GlobalRegion globalRegion = new GlobalRegion();
            globalRegion.ID = id;
            globalRegion.Name = name;
            return globalRegion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Country_GlobalRegion", "Country")]
        public EntityCollection<Country> Countries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Country>("DBEntitiesModel.FK_Country_GlobalRegion", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Country>("DBEntitiesModel.FK_Country_GlobalRegion", "Country", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="HelpdeskUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HelpdeskUser : Reporter
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HelpdeskUser object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="reporterTypeInt">Initial value of the ReporterTypeInt property.</param>
        /// <param name="declarationTypeInt">Initial value of the DeclarationTypeInt property.</param>
        /// <param name="usernameFromLDAP">Initial value of the UsernameFromLDAP property.</param>
        /// <param name="isEmailVerified">Initial value of the IsEmailVerified property.</param>
        /// <param name="mustChangePassword">Initial value of the MustChangePassword property.</param>
        /// <param name="createdAt">Initial value of the CreatedAt property.</param>
        /// <param name="createdAtDateOnly">Initial value of the CreatedAtDateOnly property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isContactInfoCompleted">Initial value of the IsContactInfoCompleted property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isMasterAccount">Initial value of the IsMasterAccount property.</param>
        /// <param name="registrationTypeInt">Initial value of the RegistrationTypeInt property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static HelpdeskUser CreateHelpdeskUser(global::System.Int32 id, global::System.Int32 reporterTypeInt, global::System.Int32 declarationTypeInt, global::System.String usernameFromLDAP, global::System.Boolean isEmailVerified, global::System.Boolean mustChangePassword, global::System.DateTime createdAt, global::System.DateTime createdAtDateOnly, global::System.String createdBy, global::System.Boolean isContactInfoCompleted, global::System.Boolean isApproved, global::System.Boolean isMasterAccount, global::System.Int32 registrationTypeInt, global::System.Boolean isActive)
        {
            HelpdeskUser helpdeskUser = new HelpdeskUser();
            helpdeskUser.ID = id;
            helpdeskUser.ReporterTypeInt = reporterTypeInt;
            helpdeskUser.DeclarationTypeInt = declarationTypeInt;
            helpdeskUser.UsernameFromLDAP = usernameFromLDAP;
            helpdeskUser.IsEmailVerified = isEmailVerified;
            helpdeskUser.MustChangePassword = mustChangePassword;
            helpdeskUser.CreatedAt = createdAt;
            helpdeskUser.CreatedAtDateOnly = createdAtDateOnly;
            helpdeskUser.CreatedBy = createdBy;
            helpdeskUser.IsContactInfoCompleted = isContactInfoCompleted;
            helpdeskUser.IsApproved = isApproved;
            helpdeskUser.IsMasterAccount = isMasterAccount;
            helpdeskUser.RegistrationTypeInt = registrationTypeInt;
            helpdeskUser.IsActive = isActive;
            return helpdeskUser;
        }

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="IncidentReport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IncidentReport : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IncidentReport object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="subSystemID">Initial value of the SubSystemID property.</param>
        /// <param name="submissionTypeInt">Initial value of the SubmissionTypeInt property.</param>
        /// <param name="callTypeInt">Initial value of the CallTypeInt property.</param>
        /// <param name="handlerTypeInt">Initial value of the HandlerTypeInt property.</param>
        /// <param name="handlerStatusInt">Initial value of the HandlerStatusInt property.</param>
        /// <param name="incidentTypeID">Initial value of the IncidentTypeID property.</param>
        /// <param name="reporterID">Initial value of the ReporterID property.</param>
        /// <param name="reportStatusInt">Initial value of the ReportStatusInt property.</param>
        /// <param name="isLocked">Initial value of the IsLocked property.</param>
        /// <param name="createdAt">Initial value of the CreatedAt property.</param>
        /// <param name="createdAtDateOnly">Initial value of the CreatedAtDateOnly property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static IncidentReport CreateIncidentReport(global::System.Int32 id, global::System.Int32 subSystemID, global::System.Int32 submissionTypeInt, global::System.Int32 callTypeInt, global::System.Int32 handlerTypeInt, global::System.Int32 handlerStatusInt, global::System.Int32 incidentTypeID, global::System.Int32 reporterID, global::System.Int32 reportStatusInt, global::System.Boolean isLocked, global::System.DateTime createdAt, global::System.DateTime createdAtDateOnly, global::System.String createdBy)
        {
            IncidentReport incidentReport = new IncidentReport();
            incidentReport.ID = id;
            incidentReport.SubSystemID = subSystemID;
            incidentReport.SubmissionTypeInt = submissionTypeInt;
            incidentReport.CallTypeInt = callTypeInt;
            incidentReport.HandlerTypeInt = handlerTypeInt;
            incidentReport.HandlerStatusInt = handlerStatusInt;
            incidentReport.IncidentTypeID = incidentTypeID;
            incidentReport.ReporterID = reporterID;
            incidentReport.ReportStatusInt = reportStatusInt;
            incidentReport.IsLocked = isLocked;
            incidentReport.CreatedAt = createdAt;
            incidentReport.CreatedAtDateOnly = createdAtDateOnly;
            incidentReport.CreatedBy = createdBy;
            return incidentReport;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubSystemID
        {
            get
            {
                return _SubSystemID;
            }
            set
            {
                if (_SubSystemID != value)
                {
                    OnSubSystemIDChanging(value);
                    ReportPropertyChanging("SubSystemID");
                    _SubSystemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubSystemID");
                    OnSubSystemIDChanged();
                }
            }
        }
        private global::System.Int32 _SubSystemID;
        partial void OnSubSystemIDChanging(global::System.Int32 value);
        partial void OnSubSystemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubmissionTypeInt
        {
            get
            {
                return _SubmissionTypeInt;
            }
            set
            {
                if (_SubmissionTypeInt != value)
                {
                    OnSubmissionTypeIntChanging(value);
                    ReportPropertyChanging("SubmissionTypeInt");
                    _SubmissionTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubmissionTypeInt");
                    OnSubmissionTypeIntChanged();
                }
            }
        }
        private global::System.Int32 _SubmissionTypeInt;
        partial void OnSubmissionTypeIntChanging(global::System.Int32 value);
        partial void OnSubmissionTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CallTypeInt
        {
            get
            {
                return _CallTypeInt;
            }
            set
            {
                if (_CallTypeInt != value)
                {
                    OnCallTypeIntChanging(value);
                    ReportPropertyChanging("CallTypeInt");
                    _CallTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CallTypeInt");
                    OnCallTypeIntChanged();
                }
            }
        }
        private global::System.Int32 _CallTypeInt;
        partial void OnCallTypeIntChanging(global::System.Int32 value);
        partial void OnCallTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HandlerTypeInt
        {
            get
            {
                return _HandlerTypeInt;
            }
            set
            {
                if (_HandlerTypeInt != value)
                {
                    OnHandlerTypeIntChanging(value);
                    ReportPropertyChanging("HandlerTypeInt");
                    _HandlerTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HandlerTypeInt");
                    OnHandlerTypeIntChanged();
                }
            }
        }
        private global::System.Int32 _HandlerTypeInt;
        partial void OnHandlerTypeIntChanging(global::System.Int32 value);
        partial void OnHandlerTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HandlerStatusInt
        {
            get
            {
                return _HandlerStatusInt;
            }
            set
            {
                if (_HandlerStatusInt != value)
                {
                    OnHandlerStatusIntChanging(value);
                    ReportPropertyChanging("HandlerStatusInt");
                    _HandlerStatusInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HandlerStatusInt");
                    OnHandlerStatusIntChanged();
                }
            }
        }
        private global::System.Int32 _HandlerStatusInt;
        partial void OnHandlerStatusIntChanging(global::System.Int32 value);
        partial void OnHandlerStatusIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IncidentTypeID
        {
            get
            {
                return _IncidentTypeID;
            }
            set
            {
                if (_IncidentTypeID != value)
                {
                    OnIncidentTypeIDChanging(value);
                    ReportPropertyChanging("IncidentTypeID");
                    _IncidentTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IncidentTypeID");
                    OnIncidentTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _IncidentTypeID;
        partial void OnIncidentTypeIDChanging(global::System.Int32 value);
        partial void OnIncidentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReporterID
        {
            get
            {
                return _ReporterID;
            }
            set
            {
                if (_ReporterID != value)
                {
                    OnReporterIDChanging(value);
                    ReportPropertyChanging("ReporterID");
                    _ReporterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReporterID");
                    OnReporterIDChanged();
                }
            }
        }
        private global::System.Int32 _ReporterID;
        partial void OnReporterIDChanging(global::System.Int32 value);
        partial void OnReporterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportStatusInt
        {
            get
            {
                return _ReportStatusInt;
            }
            set
            {
                if (_ReportStatusInt != value)
                {
                    OnReportStatusIntChanging(value);
                    ReportPropertyChanging("ReportStatusInt");
                    _ReportStatusInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportStatusInt");
                    OnReportStatusIntChanged();
                }
            }
        }
        private global::System.Int32 _ReportStatusInt;
        partial void OnReportStatusIntChanging(global::System.Int32 value);
        partial void OnReportStatusIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReporterName
        {
            get
            {
                return _ReporterName;
            }
            set
            {
                if (_ReporterName != value)
                {
                    OnReporterNameChanging(value);
                    ReportPropertyChanging("ReporterName");
                    _ReporterName = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("ReporterName");
                    OnReporterNameChanged();
                }
            }
        }
        private global::System.String _ReporterName;
        partial void OnReporterNameChanging(global::System.String value);
        partial void OnReporterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReporterPhone
        {
            get
            {
                return _ReporterPhone;
            }
            set
            {
                if (_ReporterPhone != value)
                {
                    OnReporterPhoneChanging(value);
                    ReportPropertyChanging("ReporterPhone");
                    _ReporterPhone = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("ReporterPhone");
                    OnReporterPhoneChanged();
                }
            }
        }
        private global::System.String _ReporterPhone;
        partial void OnReporterPhoneChanging(global::System.String value);
        partial void OnReporterPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReporterEmail
        {
            get
            {
                return _ReporterEmail;
            }
            set
            {
                if (_ReporterEmail != value)
                {
                    OnReporterEmailChanging(value);
                    ReportPropertyChanging("ReporterEmail");
                    _ReporterEmail = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("ReporterEmail");
                    OnReporterEmailChanged();
                }
            }
        }
        private global::System.String _ReporterEmail;
        partial void OnReporterEmailChanging(global::System.String value);
        partial void OnReporterEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReportText
        {
            get
            {
                return _ReportText;
            }
            set
            {
                if (_ReportText != value)
                {
                    OnReportTextChanging(value);
                    ReportPropertyChanging("ReportText");
                    _ReportText = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("ReportText");
                    OnReportTextChanged();
                }
            }
        }
        private global::System.String _ReportText;
        partial void OnReportTextChanging(global::System.String value);
        partial void OnReportTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastPostID
        {
            get
            {
                return _LastPostID;
            }
            set
            {
                if (_LastPostID != value)
                {
                    OnLastPostIDChanging(value);
                    ReportPropertyChanging("LastPostID");
                    _LastPostID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastPostID");
                    OnLastPostIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _LastPostID;
        partial void OnLastPostIDChanging(Nullable<global::System.Int32> value);
        partial void OnLastPostIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastDispatchedPostID
        {
            get
            {
                return _LastDispatchedPostID;
            }
            set
            {
                if (_LastDispatchedPostID != value)
                {
                    OnLastDispatchedPostIDChanging(value);
                    ReportPropertyChanging("LastDispatchedPostID");
                    _LastDispatchedPostID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastDispatchedPostID");
                    OnLastDispatchedPostIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _LastDispatchedPostID;
        partial void OnLastDispatchedPostIDChanging(Nullable<global::System.Int32> value);
        partial void OnLastDispatchedPostIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLocked
        {
            get
            {
                return _IsLocked;
            }
            set
            {
                if (_IsLocked != value)
                {
                    OnIsLockedChanging(value);
                    ReportPropertyChanging("IsLocked");
                    _IsLocked = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsLocked");
                    OnIsLockedChanged();
                }
            }
        }
        private global::System.Boolean _IsLocked;
        partial void OnIsLockedChanging(global::System.Boolean value);
        partial void OnIsLockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLockAt
        {
            get
            {
                return _LastLockAt;
            }
            set
            {
                if (_LastLockAt != value)
                {
                    OnLastLockAtChanging(value);
                    ReportPropertyChanging("LastLockAt");
                    _LastLockAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastLockAt");
                    OnLastLockAtChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _LastLockAt;
        partial void OnLastLockAtChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLockAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastLockBy
        {
            get
            {
                return _LastLockBy;
            }
            set
            {
                if (_LastLockBy != value)
                {
                    OnLastLockByChanging(value);
                    ReportPropertyChanging("LastLockBy");
                    _LastLockBy = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("LastLockBy");
                    OnLastLockByChanged();
                }
            }
        }
        private global::System.String _LastLockBy;
        partial void OnLastLockByChanging(global::System.String value);
        partial void OnLastLockByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                if (_CreatedAt != value)
                {
                    OnCreatedAtChanging(value);
                    ReportPropertyChanging("CreatedAt");
                    _CreatedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedAt");
                    OnCreatedAtChanged();
                }
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAtDateOnly
        {
            get
            {
                return _CreatedAtDateOnly;
            }
            set
            {
                if (_CreatedAtDateOnly != value)
                {
                    OnCreatedAtDateOnlyChanging(value);
                    ReportPropertyChanging("CreatedAtDateOnly");
                    _CreatedAtDateOnly = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedAtDateOnly");
                    OnCreatedAtDateOnlyChanged();
                }
            }
        }
        private global::System.DateTime _CreatedAtDateOnly;
        partial void OnCreatedAtDateOnlyChanging(global::System.DateTime value);
        partial void OnCreatedAtDateOnlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                if (_CreatedBy != value)
                {
                    OnCreatedByChanging(value);
                    ReportPropertyChanging("CreatedBy");
                    _CreatedBy = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CreatedBy");
                    OnCreatedByChanged();
                }
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedAt
        {
            get
            {
                return _UpdatedAt;
            }
            set
            {
                if (_UpdatedAt != value)
                {
                    OnUpdatedAtChanging(value);
                    ReportPropertyChanging("UpdatedAt");
                    _UpdatedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UpdatedAt");
                    OnUpdatedAtChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _UpdatedAt;
        partial void OnUpdatedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                if (_UpdatedBy != value)
                {
                    OnUpdatedByChanging(value);
                    ReportPropertyChanging("UpdatedBy");
                    _UpdatedBy = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("UpdatedBy");
                    OnUpdatedByChanged();
                }
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_IncidentReport_IncidentReportPost", "IncidentReportPost")]
        public IncidentReportPost LastPost
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentReportPost>("DBEntitiesModel.FK_IncidentReport_IncidentReportPost", "IncidentReportPost").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentReportPost>("DBEntitiesModel.FK_IncidentReport_IncidentReportPost", "IncidentReportPost").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IncidentReportPost> LastPostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentReportPost>("DBEntitiesModel.FK_IncidentReport_IncidentReportPost", "IncidentReportPost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IncidentReportPost>("DBEntitiesModel.FK_IncidentReport_IncidentReportPost", "IncidentReportPost", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_IncidentReport_IncidentType", "IncidentType")]
        public IncidentType IncidentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentType>("DBEntitiesModel.FK_IncidentReport_IncidentType", "IncidentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentType>("DBEntitiesModel.FK_IncidentReport_IncidentType", "IncidentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IncidentType> IncidentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentType>("DBEntitiesModel.FK_IncidentReport_IncidentType", "IncidentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IncidentType>("DBEntitiesModel.FK_IncidentReport_IncidentType", "IncidentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_IncidentReport_Reporter", "Reporter")]
        public Reporter Reporter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reporter>("DBEntitiesModel.FK_IncidentReport_Reporter", "Reporter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reporter>("DBEntitiesModel.FK_IncidentReport_Reporter", "Reporter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reporter> ReporterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reporter>("DBEntitiesModel.FK_IncidentReport_Reporter", "Reporter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Reporter>("DBEntitiesModel.FK_IncidentReport_Reporter", "Reporter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_IncidentReport_SubSystem", "SubSystem")]
        public SubSystem SubSystem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubSystem>("DBEntitiesModel.FK_IncidentReport_SubSystem", "SubSystem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubSystem>("DBEntitiesModel.FK_IncidentReport_SubSystem", "SubSystem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubSystem> SubSystemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubSystem>("DBEntitiesModel.FK_IncidentReport_SubSystem", "SubSystem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubSystem>("DBEntitiesModel.FK_IncidentReport_SubSystem", "SubSystem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_IncidentReportPost_IncidentReport", "IncidentReportPost")]
        public EntityCollection<IncidentReportPost> IncidentReportPosts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IncidentReportPost>("DBEntitiesModel.FK_IncidentReportPost_IncidentReport", "IncidentReportPost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IncidentReportPost>("DBEntitiesModel.FK_IncidentReportPost_IncidentReport", "IncidentReportPost", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_IncidentReport_LastDispatchedPost", "IncidentReportPost")]
        public IncidentReportPost LastDispatchedPost
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentReportPost>("DBEntitiesModel.FK_IncidentReport_LastDispatchedPost", "IncidentReportPost").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentReportPost>("DBEntitiesModel.FK_IncidentReport_LastDispatchedPost", "IncidentReportPost").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IncidentReportPost> LastDispatchedPostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentReportPost>("DBEntitiesModel.FK_IncidentReport_LastDispatchedPost", "IncidentReportPost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IncidentReportPost>("DBEntitiesModel.FK_IncidentReport_LastDispatchedPost", "IncidentReportPost", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="IncidentReportPost")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IncidentReportPost : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IncidentReportPost object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="incidentReportID">Initial value of the IncidentReportID property.</param>
        /// <param name="callTypeInt">Initial value of the CallTypeInt property.</param>
        /// <param name="postText">Initial value of the PostText property.</param>
        /// <param name="createdAt">Initial value of the CreatedAt property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdAtDateOnly">Initial value of the CreatedAtDateOnly property.</param>
        public static IncidentReportPost CreateIncidentReportPost(global::System.Int32 id, global::System.Int32 incidentReportID, global::System.Int32 callTypeInt, global::System.String postText, global::System.DateTime createdAt, global::System.String createdBy, global::System.DateTime createdAtDateOnly)
        {
            IncidentReportPost incidentReportPost = new IncidentReportPost();
            incidentReportPost.ID = id;
            incidentReportPost.IncidentReportID = incidentReportID;
            incidentReportPost.CallTypeInt = callTypeInt;
            incidentReportPost.PostText = postText;
            incidentReportPost.CreatedAt = createdAt;
            incidentReportPost.CreatedBy = createdBy;
            incidentReportPost.CreatedAtDateOnly = createdAtDateOnly;
            return incidentReportPost;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IncidentReportID
        {
            get
            {
                return _IncidentReportID;
            }
            set
            {
                if (_IncidentReportID != value)
                {
                    OnIncidentReportIDChanging(value);
                    ReportPropertyChanging("IncidentReportID");
                    _IncidentReportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IncidentReportID");
                    OnIncidentReportIDChanged();
                }
            }
        }
        private global::System.Int32 _IncidentReportID;
        partial void OnIncidentReportIDChanging(global::System.Int32 value);
        partial void OnIncidentReportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CallTypeInt
        {
            get
            {
                return _CallTypeInt;
            }
            set
            {
                if (_CallTypeInt != value)
                {
                    OnCallTypeIntChanging(value);
                    ReportPropertyChanging("CallTypeInt");
                    _CallTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CallTypeInt");
                    OnCallTypeIntChanged();
                }
            }
        }
        private global::System.Int32 _CallTypeInt;
        partial void OnCallTypeIntChanging(global::System.Int32 value);
        partial void OnCallTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                if (_ParentID != value)
                {
                    OnParentIDChanging(value);
                    ReportPropertyChanging("ParentID");
                    _ParentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParentID");
                    OnParentIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostText
        {
            get
            {
                return _PostText;
            }
            set
            {
                if (_PostText != value)
                {
                    OnPostTextChanging(value);
                    ReportPropertyChanging("PostText");
                    _PostText = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PostText");
                    OnPostTextChanged();
                }
            }
        }
        private global::System.String _PostText;
        partial void OnPostTextChanging(global::System.String value);
        partial void OnPostTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastDispatchID
        {
            get
            {
                return _LastDispatchID;
            }
            set
            {
                if (_LastDispatchID != value)
                {
                    OnLastDispatchIDChanging(value);
                    ReportPropertyChanging("LastDispatchID");
                    _LastDispatchID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastDispatchID");
                    OnLastDispatchIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _LastDispatchID;
        partial void OnLastDispatchIDChanging(Nullable<global::System.Int32> value);
        partial void OnLastDispatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                if (_CreatedAt != value)
                {
                    OnCreatedAtChanging(value);
                    ReportPropertyChanging("CreatedAt");
                    _CreatedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedAt");
                    OnCreatedAtChanged();
                }
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                if (_CreatedBy != value)
                {
                    OnCreatedByChanging(value);
                    ReportPropertyChanging("CreatedBy");
                    _CreatedBy = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CreatedBy");
                    OnCreatedByChanged();
                }
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedAt
        {
            get
            {
                return _UpdatedAt;
            }
            set
            {
                if (_UpdatedAt != value)
                {
                    OnUpdatedAtChanging(value);
                    ReportPropertyChanging("UpdatedAt");
                    _UpdatedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UpdatedAt");
                    OnUpdatedAtChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _UpdatedAt;
        partial void OnUpdatedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                if (_UpdatedBy != value)
                {
                    OnUpdatedByChanging(value);
                    ReportPropertyChanging("UpdatedBy");
                    _UpdatedBy = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("UpdatedBy");
                    OnUpdatedByChanged();
                }
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAtDateOnly
        {
            get
            {
                return _CreatedAtDateOnly;
            }
            set
            {
                if (_CreatedAtDateOnly != value)
                {
                    OnCreatedAtDateOnlyChanging(value);
                    ReportPropertyChanging("CreatedAtDateOnly");
                    _CreatedAtDateOnly = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedAtDateOnly");
                    OnCreatedAtDateOnlyChanged();
                }
            }
        }
        private global::System.DateTime _CreatedAtDateOnly;
        partial void OnCreatedAtDateOnlyChanging(global::System.DateTime value);
        partial void OnCreatedAtDateOnlyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Dispatch_IncidentReportPost", "Dispatch")]
        public EntityCollection<Dispatch> Dispatches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dispatch>("DBEntitiesModel.FK_Dispatch_IncidentReportPost", "Dispatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dispatch>("DBEntitiesModel.FK_Dispatch_IncidentReportPost", "Dispatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_IncidentReportPost_Dispatch", "Dispatch")]
        public Dispatch LastDispatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dispatch>("DBEntitiesModel.FK_IncidentReportPost_Dispatch", "Dispatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dispatch>("DBEntitiesModel.FK_IncidentReportPost_Dispatch", "Dispatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dispatch> LastDispatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dispatch>("DBEntitiesModel.FK_IncidentReportPost_Dispatch", "Dispatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dispatch>("DBEntitiesModel.FK_IncidentReportPost_Dispatch", "Dispatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_IncidentReport_IncidentReportPost", "IncidentReport")]
        public EntityCollection<IncidentReport> IncidentReports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IncidentReport>("DBEntitiesModel.FK_IncidentReport_IncidentReportPost", "IncidentReport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IncidentReport>("DBEntitiesModel.FK_IncidentReport_IncidentReportPost", "IncidentReport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_IncidentReportPost_IncidentReport", "IncidentReport")]
        public IncidentReport IncidentReport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentReport>("DBEntitiesModel.FK_IncidentReportPost_IncidentReport", "IncidentReport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentReport>("DBEntitiesModel.FK_IncidentReportPost_IncidentReport", "IncidentReport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IncidentReport> IncidentReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentReport>("DBEntitiesModel.FK_IncidentReportPost_IncidentReport", "IncidentReport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IncidentReport>("DBEntitiesModel.FK_IncidentReportPost_IncidentReport", "IncidentReport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_IncidentReportPost_IncidentReportPost", "IncidentReportPost1")]
        public EntityCollection<IncidentReportPost> IncidentReportPost1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IncidentReportPost>("DBEntitiesModel.FK_IncidentReportPost_IncidentReportPost", "IncidentReportPost1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IncidentReportPost>("DBEntitiesModel.FK_IncidentReportPost_IncidentReportPost", "IncidentReportPost1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_IncidentReportPost_IncidentReportPost", "IncidentReportPost")]
        public IncidentReportPost IncidentReportPost2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentReportPost>("DBEntitiesModel.FK_IncidentReportPost_IncidentReportPost", "IncidentReportPost").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentReportPost>("DBEntitiesModel.FK_IncidentReportPost_IncidentReportPost", "IncidentReportPost").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IncidentReportPost> IncidentReportPost2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentReportPost>("DBEntitiesModel.FK_IncidentReportPost_IncidentReportPost", "IncidentReportPost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IncidentReportPost>("DBEntitiesModel.FK_IncidentReportPost_IncidentReportPost", "IncidentReportPost", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_IncidentReport_LastDispatchedPost", "IncidentReport")]
        public EntityCollection<IncidentReport> IncidentReport1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IncidentReport>("DBEntitiesModel.FK_IncidentReport_LastDispatchedPost", "IncidentReport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IncidentReport>("DBEntitiesModel.FK_IncidentReport_LastDispatchedPost", "IncidentReport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="IncidentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IncidentType : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IncidentType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="nameInGreek">Initial value of the NameInGreek property.</param>
        /// <param name="subSystemID">Initial value of the SubSystemID property.</param>
        public static IncidentType CreateIncidentType(global::System.Int32 id, global::System.String nameInGreek, global::System.Int32 subSystemID)
        {
            IncidentType incidentType = new IncidentType();
            incidentType.ID = id;
            incidentType.NameInGreek = nameInGreek;
            incidentType.SubSystemID = subSystemID;
            return incidentType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameInGreek
        {
            get
            {
                return _NameInGreek;
            }
            set
            {
                if (_NameInGreek != value)
                {
                    OnNameInGreekChanging(value);
                    ReportPropertyChanging("NameInGreek");
                    _NameInGreek = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("NameInGreek");
                    OnNameInGreekChanged();
                }
            }
        }
        private global::System.String _NameInGreek;
        partial void OnNameInGreekChanging(global::System.String value);
        partial void OnNameInGreekChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubSystemID
        {
            get
            {
                return _SubSystemID;
            }
            set
            {
                if (_SubSystemID != value)
                {
                    OnSubSystemIDChanging(value);
                    ReportPropertyChanging("SubSystemID");
                    _SubSystemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubSystemID");
                    OnSubSystemIDChanged();
                }
            }
        }
        private global::System.Int32 _SubSystemID;
        partial void OnSubSystemIDChanging(global::System.Int32 value);
        partial void OnSubSystemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameInLatin
        {
            get
            {
                return _NameInLatin;
            }
            set
            {
                if (_NameInLatin != value)
                {
                    OnNameInLatinChanging(value);
                    ReportPropertyChanging("NameInLatin");
                    _NameInLatin = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("NameInLatin");
                    OnNameInLatinChanged();
                }
            }
        }
        private global::System.String _NameInLatin;
        partial void OnNameInLatinChanging(global::System.String value);
        partial void OnNameInLatinChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_IncidentReport_IncidentType", "IncidentReport")]
        public EntityCollection<IncidentReport> IncidentReports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IncidentReport>("DBEntitiesModel.FK_IncidentReport_IncidentType", "IncidentReport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IncidentReport>("DBEntitiesModel.FK_IncidentReport_IncidentType", "IncidentReport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_IncidentType_SubSystem", "SubSystem")]
        public SubSystem SubSystem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubSystem>("DBEntitiesModel.FK_IncidentType_SubSystem", "SubSystem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubSystem>("DBEntitiesModel.FK_IncidentType_SubSystem", "SubSystem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubSystem> SubSystemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubSystem>("DBEntitiesModel.FK_IncidentType_SubSystem", "SubSystem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubSystem>("DBEntitiesModel.FK_IncidentType_SubSystem", "SubSystem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_ReporterIncidentType_IncidentType", "ReporterIncidentType")]
        public EntityCollection<ReporterIncidentType> ReporterIncidentTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReporterIncidentType>("DBEntitiesModel.FK_ReporterIncidentType_IncidentType", "ReporterIncidentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReporterIncidentType>("DBEntitiesModel.FK_ReporterIncidentType_IncidentType", "ReporterIncidentType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="Institution")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Institution : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Institution object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="institutionTypeInt">Initial value of the InstitutionTypeInt property.</param>
        /// <param name="nameInGreek">Initial value of the NameInGreek property.</param>
        /// <param name="nameInLatin">Initial value of the NameInLatin property.</param>
        public static Institution CreateInstitution(global::System.Int32 id, global::System.Int32 institutionTypeInt, global::System.String nameInGreek, global::System.String nameInLatin)
        {
            Institution institution = new Institution();
            institution.ID = id;
            institution.InstitutionTypeInt = institutionTypeInt;
            institution.NameInGreek = nameInGreek;
            institution.NameInLatin = nameInLatin;
            return institution;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionTypeInt
        {
            get
            {
                return _InstitutionTypeInt;
            }
            set
            {
                if (_InstitutionTypeInt != value)
                {
                    OnInstitutionTypeIntChanging(value);
                    ReportPropertyChanging("InstitutionTypeInt");
                    _InstitutionTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstitutionTypeInt");
                    OnInstitutionTypeIntChanged();
                }
            }
        }
        private global::System.Int32 _InstitutionTypeInt;
        partial void OnInstitutionTypeIntChanging(global::System.Int32 value);
        partial void OnInstitutionTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameInGreek
        {
            get
            {
                return _NameInGreek;
            }
            set
            {
                if (_NameInGreek != value)
                {
                    OnNameInGreekChanging(value);
                    ReportPropertyChanging("NameInGreek");
                    _NameInGreek = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("NameInGreek");
                    OnNameInGreekChanged();
                }
            }
        }
        private global::System.String _NameInGreek;
        partial void OnNameInGreekChanging(global::System.String value);
        partial void OnNameInGreekChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameInLatin
        {
            get
            {
                return _NameInLatin;
            }
            set
            {
                if (_NameInLatin != value)
                {
                    OnNameInLatinChanging(value);
                    ReportPropertyChanging("NameInLatin");
                    _NameInLatin = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("NameInLatin");
                    OnNameInLatinChanged();
                }
            }
        }
        private global::System.String _NameInLatin;
        partial void OnNameInLatinChanging(global::System.String value);
        partial void OnNameInLatinChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InstitutionOffice", "Office")]
        public EntityCollection<InternshipOffice> Offices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipOffice>("DBEntitiesModel.InstitutionOffice", "Office");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipOffice>("DBEntitiesModel.InstitutionOffice", "Office", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InstitutionFacultyMember", "FacultyMember")]
        public EntityCollection<FacultyMember> FacultyMembers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FacultyMember>("DBEntitiesModel.InstitutionFacultyMember", "FacultyMember");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FacultyMember>("DBEntitiesModel.InstitutionFacultyMember", "FacultyMember", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Academic_Institution", "Academic")]
        public EntityCollection<Academic> Academics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Academic>("DBEntitiesModel.FK_Academic_Institution", "Academic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Academic>("DBEntitiesModel.FK_Academic_Institution", "Academic", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="InternshipOffice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InternshipOffice : Reporter
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InternshipOffice object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="reporterTypeInt">Initial value of the ReporterTypeInt property.</param>
        /// <param name="declarationTypeInt">Initial value of the DeclarationTypeInt property.</param>
        /// <param name="usernameFromLDAP">Initial value of the UsernameFromLDAP property.</param>
        /// <param name="isEmailVerified">Initial value of the IsEmailVerified property.</param>
        /// <param name="mustChangePassword">Initial value of the MustChangePassword property.</param>
        /// <param name="createdAt">Initial value of the CreatedAt property.</param>
        /// <param name="createdAtDateOnly">Initial value of the CreatedAtDateOnly property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isContactInfoCompleted">Initial value of the IsContactInfoCompleted property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isMasterAccount">Initial value of the IsMasterAccount property.</param>
        /// <param name="registrationTypeInt">Initial value of the RegistrationTypeInt property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static InternshipOffice CreateInternshipOffice(global::System.Int32 id, global::System.Int32 reporterTypeInt, global::System.Int32 declarationTypeInt, global::System.String usernameFromLDAP, global::System.Boolean isEmailVerified, global::System.Boolean mustChangePassword, global::System.DateTime createdAt, global::System.DateTime createdAtDateOnly, global::System.String createdBy, global::System.Boolean isContactInfoCompleted, global::System.Boolean isApproved, global::System.Boolean isMasterAccount, global::System.Int32 registrationTypeInt, global::System.Boolean isActive)
        {
            InternshipOffice internshipOffice = new InternshipOffice();
            internshipOffice.ID = id;
            internshipOffice.ReporterTypeInt = reporterTypeInt;
            internshipOffice.DeclarationTypeInt = declarationTypeInt;
            internshipOffice.UsernameFromLDAP = usernameFromLDAP;
            internshipOffice.IsEmailVerified = isEmailVerified;
            internshipOffice.MustChangePassword = mustChangePassword;
            internshipOffice.CreatedAt = createdAt;
            internshipOffice.CreatedAtDateOnly = createdAtDateOnly;
            internshipOffice.CreatedBy = createdBy;
            internshipOffice.IsContactInfoCompleted = isContactInfoCompleted;
            internshipOffice.IsApproved = isApproved;
            internshipOffice.IsMasterAccount = isMasterAccount;
            internshipOffice.RegistrationTypeInt = registrationTypeInt;
            internshipOffice.IsActive = isActive;
            return internshipOffice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OfficeTypeInt
        {
            get
            {
                return _OfficeTypeInt;
            }
            set
            {
                if (_OfficeTypeInt != value)
                {
                    OnOfficeTypeIntChanging(value);
                    ReportPropertyChanging("OfficeTypeInt");
                    _OfficeTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OfficeTypeInt");
                    OnOfficeTypeIntChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _OfficeTypeInt;
        partial void OnOfficeTypeIntChanging(Nullable<global::System.Int32> value);
        partial void OnOfficeTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CanViewAllAcademics
        {
            get
            {
                return _CanViewAllAcademics;
            }
            set
            {
                if (_CanViewAllAcademics != value)
                {
                    OnCanViewAllAcademicsChanging(value);
                    ReportPropertyChanging("CanViewAllAcademics");
                    _CanViewAllAcademics = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CanViewAllAcademics");
                    OnCanViewAllAcademicsChanged();
                }
            }
        }
        private Nullable<global::System.Boolean> _CanViewAllAcademics;
        partial void OnCanViewAllAcademicsChanging(Nullable<global::System.Boolean> value);
        partial void OnCanViewAllAcademicsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                if (_InstitutionID != value)
                {
                    OnInstitutionIDChanging(value);
                    ReportPropertyChanging("InstitutionID");
                    _InstitutionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstitutionID");
                    OnInstitutionIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _InstitutionID;
        partial void OnInstitutionIDChanging(Nullable<global::System.Int32> value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CertifierTypeInt
        {
            get
            {
                return _CertifierTypeInt;
            }
            set
            {
                if (_CertifierTypeInt != value)
                {
                    OnCertifierTypeIntChanging(value);
                    ReportPropertyChanging("CertifierTypeInt");
                    _CertifierTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CertifierTypeInt");
                    OnCertifierTypeIntChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _CertifierTypeInt;
        partial void OnCertifierTypeIntChanging(Nullable<global::System.Int32> value);
        partial void OnCertifierTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CertifierName
        {
            get
            {
                return _CertifierName;
            }
            set
            {
                if (_CertifierName != value)
                {
                    OnCertifierNameChanging(value);
                    ReportPropertyChanging("CertifierName");
                    _CertifierName = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("CertifierName");
                    OnCertifierNameChanged();
                }
            }
        }
        private global::System.String _CertifierName;
        partial void OnCertifierNameChanging(global::System.String value);
        partial void OnCertifierNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                if (_Address != value)
                {
                    OnAddressChanging(value);
                    ReportPropertyChanging("Address");
                    _Address = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("Address");
                    OnAddressChanged();
                }
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                if (_ZipCode != value)
                {
                    OnZipCodeChanging(value);
                    ReportPropertyChanging("ZipCode");
                    _ZipCode = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("ZipCode");
                    OnZipCodeChanged();
                }
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                if (_CityID != value)
                {
                    OnCityIDChanging(value);
                    ReportPropertyChanging("CityID");
                    _CityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityID");
                    OnCityIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrefectureID
        {
            get
            {
                return _PrefectureID;
            }
            set
            {
                if (_PrefectureID != value)
                {
                    OnPrefectureIDChanging(value);
                    ReportPropertyChanging("PrefectureID");
                    _PrefectureID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PrefectureID");
                    OnPrefectureIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _PrefectureID;
        partial void OnPrefectureIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrefectureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CanHandleDepartmentalStudents
        {
            get
            {
                return _CanHandleDepartmentalStudents;
            }
            set
            {
                if (_CanHandleDepartmentalStudents != value)
                {
                    OnCanHandleDepartmentalStudentsChanging(value);
                    ReportPropertyChanging("CanHandleDepartmentalStudents");
                    _CanHandleDepartmentalStudents = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CanHandleDepartmentalStudents");
                    OnCanHandleDepartmentalStudentsChanged();
                }
            }
        }
        private Nullable<global::System.Boolean> _CanHandleDepartmentalStudents;
        partial void OnCanHandleDepartmentalStudentsChanging(Nullable<global::System.Boolean> value);
        partial void OnCanHandleDepartmentalStudentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> TransferStudentsToOtherAccount
        {
            get
            {
                return _TransferStudentsToOtherAccount;
            }
            set
            {
                if (_TransferStudentsToOtherAccount != value)
                {
                    OnTransferStudentsToOtherAccountChanging(value);
                    ReportPropertyChanging("TransferStudentsToOtherAccount");
                    _TransferStudentsToOtherAccount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransferStudentsToOtherAccount");
                    OnTransferStudentsToOtherAccountChanged();
                }
            }
        }
        private Nullable<global::System.Boolean> _TransferStudentsToOtherAccount;
        partial void OnTransferStudentsToOtherAccountChanging(Nullable<global::System.Boolean> value);
        partial void OnTransferStudentsToOtherAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsApiAppoved
        {
            get
            {
                return _IsApiAppoved;
            }
            set
            {
                if (_IsApiAppoved != value)
                {
                    OnIsApiAppovedChanging(value);
                    ReportPropertyChanging("IsApiAppoved");
                    _IsApiAppoved = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsApiAppoved");
                    OnIsApiAppovedChanged();
                }
            }
        }
        private Nullable<global::System.Boolean> _IsApiAppoved;
        partial void OnIsApiAppovedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsApiAppovedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InstitutionOffice", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("DBEntitiesModel.InstitutionOffice", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("DBEntitiesModel.InstitutionOffice", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("DBEntitiesModel.InstitutionOffice", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("DBEntitiesModel.InstitutionOffice", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "CityOffice", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DBEntitiesModel.CityOffice", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DBEntitiesModel.CityOffice", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DBEntitiesModel.CityOffice", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("DBEntitiesModel.CityOffice", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "PrefectureOffice", "Prefecture")]
        public Prefecture Prefecture
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prefecture>("DBEntitiesModel.PrefectureOffice", "Prefecture").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prefecture>("DBEntitiesModel.PrefectureOffice", "Prefecture").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Prefecture> PrefectureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prefecture>("DBEntitiesModel.PrefectureOffice", "Prefecture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Prefecture>("DBEntitiesModel.PrefectureOffice", "Prefecture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipOfficeAcademics", "Academic")]
        public EntityCollection<Academic> Academics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Academic>("DBEntitiesModel.InternshipOfficeAcademics", "Academic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Academic>("DBEntitiesModel.InternshipOfficeAcademics", "Academic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionPreAssignedByOffice", "InternshipPosition")]
        public EntityCollection<InternshipPosition> PreAssignedByOfficePositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPosition>("DBEntitiesModel.InternshipPositionPreAssignedByOffice", "InternshipPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPosition>("DBEntitiesModel.InternshipPositionPreAssignedByOffice", "InternshipPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionPreAssignedByMasterAccountID", "InternshipPosition")]
        public EntityCollection<InternshipPosition> PreAssignedByMasterAccountPositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPosition>("DBEntitiesModel.InternshipPositionPreAssignedByMasterAccountID", "InternshipPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPosition>("DBEntitiesModel.InternshipPositionPreAssignedByMasterAccountID", "InternshipPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "BlockedPositionGroupInternshipOffice", "BlockedPositionGroup")]
        public EntityCollection<BlockedPositionGroup> BlockedPositionGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlockedPositionGroup>("DBEntitiesModel.BlockedPositionGroupInternshipOffice", "BlockedPositionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlockedPositionGroup>("DBEntitiesModel.BlockedPositionGroupInternshipOffice", "BlockedPositionGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogPreAssignedByOffice", "InternshipPositionLog")]
        public EntityCollection<InternshipPositionLog> PreAssignedByOfficeLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogPreAssignedByOffice", "InternshipPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogPreAssignedByOffice", "InternshipPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogPreAssignedByMasterAccount", "InternshipPositionLog")]
        public EntityCollection<InternshipPositionLog> PreAssignedByMasterAccountLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogPreAssignedByMasterAccount", "InternshipPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogPreAssignedByMasterAccount", "InternshipPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogAssignedBy", "InternshipPositionLog")]
        public EntityCollection<InternshipPositionLog> AssignedByOfficeLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogAssignedBy", "InternshipPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogAssignedBy", "InternshipPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogAssignedByMasterAccount", "InternshipPositionLog")]
        public EntityCollection<InternshipPositionLog> AssignedByMasterAccountLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogAssignedByMasterAccount", "InternshipPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogAssignedByMasterAccount", "InternshipPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogInternshipOffice", "InternshipPositionLog")]
        public EntityCollection<InternshipPositionLog> CompletedByOfficeLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogInternshipOffice", "InternshipPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogInternshipOffice", "InternshipPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogCompletedByMasterAccount", "InternshipPositionLog")]
        public EntityCollection<InternshipPositionLog> CompletedByMasterAccountLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogCompletedByMasterAccount", "InternshipPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogCompletedByMasterAccount", "InternshipPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogUnPreAssignedByOffice", "InternshipPositionLog")]
        public EntityCollection<InternshipPositionLog> UnPreAssignedByOfficeLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogUnPreAssignedByOffice", "InternshipPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogUnPreAssignedByOffice", "InternshipPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogUnPreAssignedByMasterAccount", "InternshipPositionLog")]
        public EntityCollection<InternshipPositionLog> UnPreAssignedByMasterAccountLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogUnPreAssignedByMasterAccount", "InternshipPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogUnPreAssignedByMasterAccount", "InternshipPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogUnAssignedByMasterAccount", "InternshipPositionLog")]
        public EntityCollection<InternshipPositionLog> UnAssignedByMasterAccountLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogUnAssignedByMasterAccount", "InternshipPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogUnAssignedByMasterAccount", "InternshipPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogUnAssignedByOffice", "InternshipPositionLog")]
        public EntityCollection<InternshipPositionLog> UnAssignedByOfficeLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogUnAssignedByOffice", "InternshipPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogUnAssignedByOffice", "InternshipPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogUnCompletedByOffice", "InternshipPositionLog")]
        public EntityCollection<InternshipPositionLog> UnCompletedByOfficeLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogUnCompletedByOffice", "InternshipPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogUnCompletedByOffice", "InternshipPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogUnCompletedByMasterAccount", "InternshipPositionLog")]
        public EntityCollection<InternshipPositionLog> UnCompletedByMasterAccountLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogUnCompletedByMasterAccount", "InternshipPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogUnCompletedByMasterAccount", "InternshipPositionLog", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="InternshipPosition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InternshipPosition : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InternshipPosition object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="groupID">Initial value of the GroupID property.</param>
        /// <param name="positionStatusInt">Initial value of the PositionStatusInt property.</param>
        /// <param name="cancellationReasonInt">Initial value of the CancellationReasonInt property.</param>
        /// <param name="createdAt">Initial value of the CreatedAt property.</param>
        /// <param name="createdAtDateOnly">Initial value of the CreatedAtDateOnly property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static InternshipPosition CreateInternshipPosition(global::System.Int32 id, global::System.Int32 groupID, global::System.Int32 positionStatusInt, global::System.Int32 cancellationReasonInt, global::System.DateTime createdAt, global::System.DateTime createdAtDateOnly, global::System.String createdBy)
        {
            InternshipPosition internshipPosition = new InternshipPosition();
            internshipPosition.ID = id;
            internshipPosition.GroupID = groupID;
            internshipPosition.PositionStatusInt = positionStatusInt;
            internshipPosition.CancellationReasonInt = cancellationReasonInt;
            internshipPosition.CreatedAt = createdAt;
            internshipPosition.CreatedAtDateOnly = createdAtDateOnly;
            internshipPosition.CreatedBy = createdBy;
            return internshipPosition;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                if (_GroupID != value)
                {
                    OnGroupIDChanging(value);
                    ReportPropertyChanging("GroupID");
                    _GroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupID");
                    OnGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _GroupID;
        partial void OnGroupIDChanging(global::System.Int32 value);
        partial void OnGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositionStatusInt
        {
            get
            {
                return _PositionStatusInt;
            }
            set
            {
                if (_PositionStatusInt != value)
                {
                    OnPositionStatusIntChanging(value);
                    ReportPropertyChanging("PositionStatusInt");
                    _PositionStatusInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PositionStatusInt");
                    OnPositionStatusIntChanged();
                }
            }
        }
        private global::System.Int32 _PositionStatusInt;
        partial void OnPositionStatusIntChanging(global::System.Int32 value);
        partial void OnPositionStatusIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreAssignedByOfficeID
        {
            get
            {
                return _PreAssignedByOfficeID;
            }
            set
            {
                if (_PreAssignedByOfficeID != value)
                {
                    OnPreAssignedByOfficeIDChanging(value);
                    ReportPropertyChanging("PreAssignedByOfficeID");
                    _PreAssignedByOfficeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PreAssignedByOfficeID");
                    OnPreAssignedByOfficeIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _PreAssignedByOfficeID;
        partial void OnPreAssignedByOfficeIDChanging(Nullable<global::System.Int32> value);
        partial void OnPreAssignedByOfficeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreAssignedByMasterAccountID
        {
            get
            {
                return _PreAssignedByMasterAccountID;
            }
            set
            {
                if (_PreAssignedByMasterAccountID != value)
                {
                    OnPreAssignedByMasterAccountIDChanging(value);
                    ReportPropertyChanging("PreAssignedByMasterAccountID");
                    _PreAssignedByMasterAccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PreAssignedByMasterAccountID");
                    OnPreAssignedByMasterAccountIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _PreAssignedByMasterAccountID;
        partial void OnPreAssignedByMasterAccountIDChanging(Nullable<global::System.Int32> value);
        partial void OnPreAssignedByMasterAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreAssignedForAcademicID
        {
            get
            {
                return _PreAssignedForAcademicID;
            }
            set
            {
                if (_PreAssignedForAcademicID != value)
                {
                    OnPreAssignedForAcademicIDChanging(value);
                    ReportPropertyChanging("PreAssignedForAcademicID");
                    _PreAssignedForAcademicID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PreAssignedForAcademicID");
                    OnPreAssignedForAcademicIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _PreAssignedForAcademicID;
        partial void OnPreAssignedForAcademicIDChanging(Nullable<global::System.Int32> value);
        partial void OnPreAssignedForAcademicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PreAssignedAt
        {
            get
            {
                return _PreAssignedAt;
            }
            set
            {
                if (_PreAssignedAt != value)
                {
                    OnPreAssignedAtChanging(value);
                    ReportPropertyChanging("PreAssignedAt");
                    _PreAssignedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PreAssignedAt");
                    OnPreAssignedAtChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _PreAssignedAt;
        partial void OnPreAssignedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnPreAssignedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DaysLeftForAssignment
        {
            get
            {
                return _DaysLeftForAssignment;
            }
            set
            {
                if (_DaysLeftForAssignment != value)
                {
                    OnDaysLeftForAssignmentChanging(value);
                    ReportPropertyChanging("DaysLeftForAssignment");
                    _DaysLeftForAssignment = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DaysLeftForAssignment");
                    OnDaysLeftForAssignmentChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _DaysLeftForAssignment;
        partial void OnDaysLeftForAssignmentChanging(Nullable<global::System.Int32> value);
        partial void OnDaysLeftForAssignmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AssignedToStudentID
        {
            get
            {
                return _AssignedToStudentID;
            }
            set
            {
                if (_AssignedToStudentID != value)
                {
                    OnAssignedToStudentIDChanging(value);
                    ReportPropertyChanging("AssignedToStudentID");
                    _AssignedToStudentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssignedToStudentID");
                    OnAssignedToStudentIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _AssignedToStudentID;
        partial void OnAssignedToStudentIDChanging(Nullable<global::System.Int32> value);
        partial void OnAssignedToStudentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AssignedAt
        {
            get
            {
                return _AssignedAt;
            }
            set
            {
                if (_AssignedAt != value)
                {
                    OnAssignedAtChanging(value);
                    ReportPropertyChanging("AssignedAt");
                    _AssignedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssignedAt");
                    OnAssignedAtChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _AssignedAt;
        partial void OnAssignedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnAssignedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ImplementationStartDate
        {
            get
            {
                return _ImplementationStartDate;
            }
            set
            {
                if (_ImplementationStartDate != value)
                {
                    OnImplementationStartDateChanging(value);
                    ReportPropertyChanging("ImplementationStartDate");
                    _ImplementationStartDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImplementationStartDate");
                    OnImplementationStartDateChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _ImplementationStartDate;
        partial void OnImplementationStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnImplementationStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ImplementationEndDate
        {
            get
            {
                return _ImplementationEndDate;
            }
            set
            {
                if (_ImplementationEndDate != value)
                {
                    OnImplementationEndDateChanging(value);
                    ReportPropertyChanging("ImplementationEndDate");
                    _ImplementationEndDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImplementationEndDate");
                    OnImplementationEndDateChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _ImplementationEndDate;
        partial void OnImplementationEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnImplementationEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CompletedAt
        {
            get
            {
                return _CompletedAt;
            }
            set
            {
                if (_CompletedAt != value)
                {
                    OnCompletedAtChanging(value);
                    ReportPropertyChanging("CompletedAt");
                    _CompletedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompletedAt");
                    OnCompletedAtChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _CompletedAt;
        partial void OnCompletedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnCompletedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompletionComments
        {
            get
            {
                return _CompletionComments;
            }
            set
            {
                if (_CompletionComments != value)
                {
                    OnCompletionCommentsChanging(value);
                    ReportPropertyChanging("CompletionComments");
                    _CompletionComments = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("CompletionComments");
                    OnCompletionCommentsChanged();
                }
            }
        }
        private global::System.String _CompletionComments;
        partial void OnCompletionCommentsChanging(global::System.String value);
        partial void OnCompletionCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CancellationReasonInt
        {
            get
            {
                return _CancellationReasonInt;
            }
            set
            {
                if (_CancellationReasonInt != value)
                {
                    OnCancellationReasonIntChanging(value);
                    ReportPropertyChanging("CancellationReasonInt");
                    _CancellationReasonInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CancellationReasonInt");
                    OnCancellationReasonIntChanged();
                }
            }
        }
        private global::System.Int32 _CancellationReasonInt;
        partial void OnCancellationReasonIntChanging(global::System.Int32 value);
        partial void OnCancellationReasonIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CanceledStudentID
        {
            get
            {
                return _CanceledStudentID;
            }
            set
            {
                if (_CanceledStudentID != value)
                {
                    OnCanceledStudentIDChanging(value);
                    ReportPropertyChanging("CanceledStudentID");
                    _CanceledStudentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CanceledStudentID");
                    OnCanceledStudentIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _CanceledStudentID;
        partial void OnCanceledStudentIDChanging(Nullable<global::System.Int32> value);
        partial void OnCanceledStudentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                if (_CreatedAt != value)
                {
                    OnCreatedAtChanging(value);
                    ReportPropertyChanging("CreatedAt");
                    _CreatedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedAt");
                    OnCreatedAtChanged();
                }
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAtDateOnly
        {
            get
            {
                return _CreatedAtDateOnly;
            }
            set
            {
                if (_CreatedAtDateOnly != value)
                {
                    OnCreatedAtDateOnlyChanging(value);
                    ReportPropertyChanging("CreatedAtDateOnly");
                    _CreatedAtDateOnly = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedAtDateOnly");
                    OnCreatedAtDateOnlyChanged();
                }
            }
        }
        private global::System.DateTime _CreatedAtDateOnly;
        partial void OnCreatedAtDateOnlyChanging(global::System.DateTime value);
        partial void OnCreatedAtDateOnlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                if (_CreatedBy != value)
                {
                    OnCreatedByChanging(value);
                    ReportPropertyChanging("CreatedBy");
                    _CreatedBy = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CreatedBy");
                    OnCreatedByChanged();
                }
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedAt
        {
            get
            {
                return _UpdatedAt;
            }
            set
            {
                if (_UpdatedAt != value)
                {
                    OnUpdatedAtChanging(value);
                    ReportPropertyChanging("UpdatedAt");
                    _UpdatedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UpdatedAt");
                    OnUpdatedAtChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _UpdatedAt;
        partial void OnUpdatedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                if (_UpdatedBy != value)
                {
                    OnUpdatedByChanging(value);
                    ReportPropertyChanging("UpdatedBy");
                    _UpdatedBy = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("UpdatedBy");
                    OnUpdatedByChanged();
                }
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FundingTypeInt
        {
            get
            {
                return _FundingTypeInt;
            }
            set
            {
                if (_FundingTypeInt != value)
                {
                    OnFundingTypeIntChanging(value);
                    ReportPropertyChanging("FundingTypeInt");
                    _FundingTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundingTypeInt");
                    OnFundingTypeIntChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _FundingTypeInt;
        partial void OnFundingTypeIntChanging(Nullable<global::System.Int32> value);
        partial void OnFundingTypeIntChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_InternshipPosition_InternshipPositionGroup", "InternshipPositionGroup")]
        public InternshipPositionGroup InternshipPositionGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipPositionGroup>("DBEntitiesModel.FK_InternshipPosition_InternshipPositionGroup", "InternshipPositionGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipPositionGroup>("DBEntitiesModel.FK_InternshipPosition_InternshipPositionGroup", "InternshipPositionGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipPositionGroup> InternshipPositionGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipPositionGroup>("DBEntitiesModel.FK_InternshipPosition_InternshipPositionGroup", "InternshipPositionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipPositionGroup>("DBEntitiesModel.FK_InternshipPosition_InternshipPositionGroup", "InternshipPositionGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_InternshipPositionLog_InternshipPosition", "InternshipPositionLog")]
        public EntityCollection<InternshipPositionLog> LogEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionLog>("DBEntitiesModel.FK_InternshipPositionLog_InternshipPosition", "InternshipPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionLog>("DBEntitiesModel.FK_InternshipPositionLog_InternshipPosition", "InternshipPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionPreAssignedByOffice", "InternshipOffice")]
        public InternshipOffice PreAssignedByOffice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionPreAssignedByOffice", "InternshipOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionPreAssignedByOffice", "InternshipOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipOffice> PreAssignedByOfficeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionPreAssignedByOffice", "InternshipOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionPreAssignedByOffice", "InternshipOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionPreAssignedByMasterAccountID", "InternshipOffice")]
        public InternshipOffice PreAssignedByMasterAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionPreAssignedByMasterAccountID", "InternshipOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionPreAssignedByMasterAccountID", "InternshipOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipOffice> PreAssignedByMasterAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionPreAssignedByMasterAccountID", "InternshipOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionPreAssignedByMasterAccountID", "InternshipOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionAssignedToStudent", "Student")]
        public Student AssignedToStudent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("DBEntitiesModel.InternshipPositionAssignedToStudent", "Student").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("DBEntitiesModel.InternshipPositionAssignedToStudent", "Student").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> AssignedToStudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("DBEntitiesModel.InternshipPositionAssignedToStudent", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("DBEntitiesModel.InternshipPositionAssignedToStudent", "Student", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionCanceledStudent", "Student")]
        public Student CanceledStudent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("DBEntitiesModel.InternshipPositionCanceledStudent", "Student").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("DBEntitiesModel.InternshipPositionCanceledStudent", "Student").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> CanceledStudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("DBEntitiesModel.InternshipPositionCanceledStudent", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("DBEntitiesModel.InternshipPositionCanceledStudent", "Student", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_InternshipPosition_PreAssignedForAcademic", "Academic")]
        public Academic PreAssignedForAcademic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Academic>("DBEntitiesModel.FK_InternshipPosition_PreAssignedForAcademic", "Academic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Academic>("DBEntitiesModel.FK_InternshipPosition_PreAssignedForAcademic", "Academic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Academic> PreAssignedForAcademicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Academic>("DBEntitiesModel.FK_InternshipPosition_PreAssignedForAcademic", "Academic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Academic>("DBEntitiesModel.FK_InternshipPosition_PreAssignedForAcademic", "Academic", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="InternshipPositionGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InternshipPositionGroup : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InternshipPositionGroup object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="providerID">Initial value of the ProviderID property.</param>
        /// <param name="totalPositions">Initial value of the TotalPositions property.</param>
        /// <param name="availablePositions">Initial value of the AvailablePositions property.</param>
        /// <param name="preAssignedPositions">Initial value of the PreAssignedPositions property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="positionTypeInt">Initial value of the PositionTypeInt property.</param>
        /// <param name="createdAt">Initial value of the CreatedAt property.</param>
        /// <param name="createdAtDateOnly">Initial value of the CreatedAtDateOnly property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="noTimeLimit">Initial value of the NoTimeLimit property.</param>
        /// <param name="positionGroupStatusInt">Initial value of the PositionGroupStatusInt property.</param>
        /// <param name="positionCreationTypeInt">Initial value of the PositionCreationTypeInt property.</param>
        public static InternshipPositionGroup CreateInternshipPositionGroup(global::System.Int32 id, global::System.Int32 providerID, global::System.Int32 totalPositions, global::System.Int32 availablePositions, global::System.Int32 preAssignedPositions, global::System.String title, global::System.Int32 duration, global::System.Int32 countryID, global::System.Int32 positionTypeInt, global::System.DateTime createdAt, global::System.DateTime createdAtDateOnly, global::System.String createdBy, global::System.Boolean noTimeLimit, global::System.Int32 positionGroupStatusInt, global::System.Int32 positionCreationTypeInt)
        {
            InternshipPositionGroup internshipPositionGroup = new InternshipPositionGroup();
            internshipPositionGroup.ID = id;
            internshipPositionGroup.ProviderID = providerID;
            internshipPositionGroup.TotalPositions = totalPositions;
            internshipPositionGroup.AvailablePositions = availablePositions;
            internshipPositionGroup.PreAssignedPositions = preAssignedPositions;
            internshipPositionGroup.Title = title;
            internshipPositionGroup.Duration = duration;
            internshipPositionGroup.CountryID = countryID;
            internshipPositionGroup.PositionTypeInt = positionTypeInt;
            internshipPositionGroup.CreatedAt = createdAt;
            internshipPositionGroup.CreatedAtDateOnly = createdAtDateOnly;
            internshipPositionGroup.CreatedBy = createdBy;
            internshipPositionGroup.NoTimeLimit = noTimeLimit;
            internshipPositionGroup.PositionGroupStatusInt = positionGroupStatusInt;
            internshipPositionGroup.PositionCreationTypeInt = positionCreationTypeInt;
            return internshipPositionGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProviderID
        {
            get
            {
                return _ProviderID;
            }
            set
            {
                if (_ProviderID != value)
                {
                    OnProviderIDChanging(value);
                    ReportPropertyChanging("ProviderID");
                    _ProviderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProviderID");
                    OnProviderIDChanged();
                }
            }
        }
        private global::System.Int32 _ProviderID;
        partial void OnProviderIDChanging(global::System.Int32 value);
        partial void OnProviderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalPositions
        {
            get
            {
                return _TotalPositions;
            }
            set
            {
                if (_TotalPositions != value)
                {
                    OnTotalPositionsChanging(value);
                    ReportPropertyChanging("TotalPositions");
                    _TotalPositions = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TotalPositions");
                    OnTotalPositionsChanged();
                }
            }
        }
        private global::System.Int32 _TotalPositions;
        partial void OnTotalPositionsChanging(global::System.Int32 value);
        partial void OnTotalPositionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AvailablePositions
        {
            get
            {
                return _AvailablePositions;
            }
            set
            {
                if (_AvailablePositions != value)
                {
                    OnAvailablePositionsChanging(value);
                    ReportPropertyChanging("AvailablePositions");
                    _AvailablePositions = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AvailablePositions");
                    OnAvailablePositionsChanged();
                }
            }
        }
        private global::System.Int32 _AvailablePositions;
        partial void OnAvailablePositionsChanging(global::System.Int32 value);
        partial void OnAvailablePositionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PreAssignedPositions
        {
            get
            {
                return _PreAssignedPositions;
            }
            set
            {
                if (_PreAssignedPositions != value)
                {
                    OnPreAssignedPositionsChanging(value);
                    ReportPropertyChanging("PreAssignedPositions");
                    _PreAssignedPositions = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PreAssignedPositions");
                    OnPreAssignedPositionsChanged();
                }
            }
        }
        private global::System.Int32 _PreAssignedPositions;
        partial void OnPreAssignedPositionsChanging(global::System.Int32 value);
        partial void OnPreAssignedPositionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsVisibleToAllAcademics
        {
            get
            {
                return _IsVisibleToAllAcademics;
            }
            set
            {
                if (_IsVisibleToAllAcademics != value)
                {
                    OnIsVisibleToAllAcademicsChanging(value);
                    ReportPropertyChanging("IsVisibleToAllAcademics");
                    _IsVisibleToAllAcademics = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsVisibleToAllAcademics");
                    OnIsVisibleToAllAcademicsChanged();
                }
            }
        }
        private Nullable<global::System.Boolean> _IsVisibleToAllAcademics;
        partial void OnIsVisibleToAllAcademicsChanging(Nullable<global::System.Boolean> value);
        partial void OnIsVisibleToAllAcademicsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                if (_Title != value)
                {
                    OnTitleChanging(value);
                    ReportPropertyChanging("Title");
                    _Title = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Title");
                    OnTitleChanged();
                }
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    OnDescriptionChanging(value);
                    ReportPropertyChanging("Description");
                    _Description = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("Description");
                    OnDescriptionChanged();
                }
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                if (_Duration != value)
                {
                    OnDurationChanging(value);
                    ReportPropertyChanging("Duration");
                    _Duration = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Duration");
                    OnDurationChanged();
                }
            }
        }
        private global::System.Int32 _Duration;
        partial void OnDurationChanging(global::System.Int32 value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                if (_CityID != value)
                {
                    OnCityIDChanging(value);
                    ReportPropertyChanging("CityID");
                    _CityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityID");
                    OnCityIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrefectureID
        {
            get
            {
                return _PrefectureID;
            }
            set
            {
                if (_PrefectureID != value)
                {
                    OnPrefectureIDChanging(value);
                    ReportPropertyChanging("PrefectureID");
                    _PrefectureID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PrefectureID");
                    OnPrefectureIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _PrefectureID;
        partial void OnPrefectureIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrefectureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                if (_StartDate != value)
                {
                    OnStartDateChanging(value);
                    ReportPropertyChanging("StartDate");
                    _StartDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StartDate");
                    OnStartDateChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                if (_EndDate != value)
                {
                    OnEndDateChanging(value);
                    ReportPropertyChanging("EndDate");
                    _EndDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EndDate");
                    OnEndDateChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositionTypeInt
        {
            get
            {
                return _PositionTypeInt;
            }
            set
            {
                if (_PositionTypeInt != value)
                {
                    OnPositionTypeIntChanging(value);
                    ReportPropertyChanging("PositionTypeInt");
                    _PositionTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PositionTypeInt");
                    OnPositionTypeIntChanged();
                }
            }
        }
        private global::System.Int32 _PositionTypeInt;
        partial void OnPositionTypeIntChanging(global::System.Int32 value);
        partial void OnPositionTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactPhone
        {
            get
            {
                return _ContactPhone;
            }
            set
            {
                if (_ContactPhone != value)
                {
                    OnContactPhoneChanging(value);
                    ReportPropertyChanging("ContactPhone");
                    _ContactPhone = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("ContactPhone");
                    OnContactPhoneChanged();
                }
            }
        }
        private global::System.String _ContactPhone;
        partial void OnContactPhoneChanging(global::System.String value);
        partial void OnContactPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FirstPublishedAt
        {
            get
            {
                return _FirstPublishedAt;
            }
            set
            {
                if (_FirstPublishedAt != value)
                {
                    OnFirstPublishedAtChanging(value);
                    ReportPropertyChanging("FirstPublishedAt");
                    _FirstPublishedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FirstPublishedAt");
                    OnFirstPublishedAtChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _FirstPublishedAt;
        partial void OnFirstPublishedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnFirstPublishedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPublishedAt
        {
            get
            {
                return _LastPublishedAt;
            }
            set
            {
                if (_LastPublishedAt != value)
                {
                    OnLastPublishedAtChanging(value);
                    ReportPropertyChanging("LastPublishedAt");
                    _LastPublishedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastPublishedAt");
                    OnLastPublishedAtChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _LastPublishedAt;
        partial void OnLastPublishedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPublishedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                if (_CreatedAt != value)
                {
                    OnCreatedAtChanging(value);
                    ReportPropertyChanging("CreatedAt");
                    _CreatedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedAt");
                    OnCreatedAtChanged();
                }
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAtDateOnly
        {
            get
            {
                return _CreatedAtDateOnly;
            }
            set
            {
                if (_CreatedAtDateOnly != value)
                {
                    OnCreatedAtDateOnlyChanging(value);
                    ReportPropertyChanging("CreatedAtDateOnly");
                    _CreatedAtDateOnly = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedAtDateOnly");
                    OnCreatedAtDateOnlyChanged();
                }
            }
        }
        private global::System.DateTime _CreatedAtDateOnly;
        partial void OnCreatedAtDateOnlyChanging(global::System.DateTime value);
        partial void OnCreatedAtDateOnlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                if (_CreatedBy != value)
                {
                    OnCreatedByChanging(value);
                    ReportPropertyChanging("CreatedBy");
                    _CreatedBy = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CreatedBy");
                    OnCreatedByChanged();
                }
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedAt
        {
            get
            {
                return _UpdatedAt;
            }
            set
            {
                if (_UpdatedAt != value)
                {
                    OnUpdatedAtChanging(value);
                    ReportPropertyChanging("UpdatedAt");
                    _UpdatedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UpdatedAt");
                    OnUpdatedAtChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _UpdatedAt;
        partial void OnUpdatedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                if (_UpdatedBy != value)
                {
                    OnUpdatedByChanging(value);
                    ReportPropertyChanging("UpdatedBy");
                    _UpdatedBy = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("UpdatedBy");
                    OnUpdatedByChanged();
                }
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NoTimeLimit
        {
            get
            {
                return _NoTimeLimit;
            }
            set
            {
                if (_NoTimeLimit != value)
                {
                    OnNoTimeLimitChanging(value);
                    ReportPropertyChanging("NoTimeLimit");
                    _NoTimeLimit = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NoTimeLimit");
                    OnNoTimeLimitChanged();
                }
            }
        }
        private global::System.Boolean _NoTimeLimit;
        partial void OnNoTimeLimitChanging(global::System.Boolean value);
        partial void OnNoTimeLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Supervisor
        {
            get
            {
                return _Supervisor;
            }
            set
            {
                if (_Supervisor != value)
                {
                    OnSupervisorChanging(value);
                    ReportPropertyChanging("Supervisor");
                    _Supervisor = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("Supervisor");
                    OnSupervisorChanged();
                }
            }
        }
        private global::System.String _Supervisor;
        partial void OnSupervisorChanging(global::System.String value);
        partial void OnSupervisorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositionGroupStatusInt
        {
            get
            {
                return _PositionGroupStatusInt;
            }
            set
            {
                if (_PositionGroupStatusInt != value)
                {
                    OnPositionGroupStatusIntChanging(value);
                    ReportPropertyChanging("PositionGroupStatusInt");
                    _PositionGroupStatusInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PositionGroupStatusInt");
                    OnPositionGroupStatusIntChanged();
                }
            }
        }
        private global::System.Int32 _PositionGroupStatusInt;
        partial void OnPositionGroupStatusIntChanging(global::System.Int32 value);
        partial void OnPositionGroupStatusIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupervisorEmail
        {
            get
            {
                return _SupervisorEmail;
            }
            set
            {
                if (_SupervisorEmail != value)
                {
                    OnSupervisorEmailChanging(value);
                    ReportPropertyChanging("SupervisorEmail");
                    _SupervisorEmail = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("SupervisorEmail");
                    OnSupervisorEmailChanged();
                }
            }
        }
        private global::System.String _SupervisorEmail;
        partial void OnSupervisorEmailChanging(global::System.String value);
        partial void OnSupervisorEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositionCreationTypeInt
        {
            get
            {
                return _PositionCreationTypeInt;
            }
            set
            {
                if (_PositionCreationTypeInt != value)
                {
                    OnPositionCreationTypeIntChanging(value);
                    ReportPropertyChanging("PositionCreationTypeInt");
                    _PositionCreationTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PositionCreationTypeInt");
                    OnPositionCreationTypeIntChanged();
                }
            }
        }
        private global::System.Int32 _PositionCreationTypeInt;
        partial void OnPositionCreationTypeIntChanging(global::System.Int32 value);
        partial void OnPositionCreationTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityText
        {
            get
            {
                return _CityText;
            }
            set
            {
                if (_CityText != value)
                {
                    OnCityTextChanging(value);
                    ReportPropertyChanging("CityText");
                    _CityText = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("CityText");
                    OnCityTextChanged();
                }
            }
        }
        private global::System.String _CityText;
        partial void OnCityTextChanging(global::System.String value);
        partial void OnCityTextChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_InternshipPositionGroup_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DBEntitiesModel.FK_InternshipPositionGroup_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DBEntitiesModel.FK_InternshipPositionGroup_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DBEntitiesModel.FK_InternshipPositionGroup_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("DBEntitiesModel.FK_InternshipPositionGroup_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_InternshipPositionGroup_Kali_Cities", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DBEntitiesModel.FK_InternshipPositionGroup_Kali_Cities", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DBEntitiesModel.FK_InternshipPositionGroup_Kali_Cities", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DBEntitiesModel.FK_InternshipPositionGroup_Kali_Cities", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("DBEntitiesModel.FK_InternshipPositionGroup_Kali_Cities", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_InternshipPositionGroup_Kali_Prefectures", "Prefecture")]
        public Prefecture Prefecture
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prefecture>("DBEntitiesModel.FK_InternshipPositionGroup_Kali_Prefectures", "Prefecture").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prefecture>("DBEntitiesModel.FK_InternshipPositionGroup_Kali_Prefectures", "Prefecture").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Prefecture> PrefectureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prefecture>("DBEntitiesModel.FK_InternshipPositionGroup_Kali_Prefectures", "Prefecture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Prefecture>("DBEntitiesModel.FK_InternshipPositionGroup_Kali_Prefectures", "Prefecture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipProviderInternshipPositionGroup", "InternshipProvider")]
        public InternshipProvider Provider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipProvider>("DBEntitiesModel.InternshipProviderInternshipPositionGroup", "InternshipProvider").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipProvider>("DBEntitiesModel.InternshipProviderInternshipPositionGroup", "InternshipProvider").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipProvider> ProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipProvider>("DBEntitiesModel.InternshipProviderInternshipPositionGroup", "InternshipProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipProvider>("DBEntitiesModel.InternshipProviderInternshipPositionGroup", "InternshipProvider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionGroupAcademicXRef1", "Academic")]
        public EntityCollection<Academic> Academics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Academic>("DBEntitiesModel.InternshipPositionGroupAcademicXRef1", "Academic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Academic>("DBEntitiesModel.InternshipPositionGroupAcademicXRef1", "Academic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionGroupPhysicalObjectXRef1", "PhysicalObject")]
        public EntityCollection<PhysicalObject> PhysicalObjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalObject>("DBEntitiesModel.InternshipPositionGroupPhysicalObjectXRef1", "PhysicalObject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalObject>("DBEntitiesModel.InternshipPositionGroupPhysicalObjectXRef1", "PhysicalObject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_InternshipPosition_InternshipPositionGroup", "InternshipPosition")]
        public EntityCollection<InternshipPosition> Positions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPosition>("DBEntitiesModel.FK_InternshipPosition_InternshipPositionGroup", "InternshipPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPosition>("DBEntitiesModel.FK_InternshipPosition_InternshipPositionGroup", "InternshipPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_BlockedPositionGroup_InternshipPositionGroup", "BlockedPositionGroup")]
        public EntityCollection<BlockedPositionGroup> BlockedPositionGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlockedPositionGroup>("DBEntitiesModel.FK_BlockedPositionGroup_InternshipPositionGroup", "BlockedPositionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlockedPositionGroup>("DBEntitiesModel.FK_BlockedPositionGroup_InternshipPositionGroup", "BlockedPositionGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_InternshipPositionGroupLog_InternshipPositionGroup", "InternshipPositionGroupLog")]
        public EntityCollection<InternshipPositionGroupLog> LogEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionGroupLog>("DBEntitiesModel.FK_InternshipPositionGroupLog_InternshipPositionGroup", "InternshipPositionGroupLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionGroupLog>("DBEntitiesModel.FK_InternshipPositionGroupLog_InternshipPositionGroup", "InternshipPositionGroupLog", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="InternshipPositionGroupLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InternshipPositionGroupLog : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InternshipPositionGroupLog object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="groupID">Initial value of the GroupID property.</param>
        /// <param name="oldStatusInt">Initial value of the OldStatusInt property.</param>
        /// <param name="newStatusInt">Initial value of the NewStatusInt property.</param>
        /// <param name="createdAt">Initial value of the CreatedAt property.</param>
        /// <param name="createdAtDateOnly">Initial value of the CreatedAtDateOnly property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static InternshipPositionGroupLog CreateInternshipPositionGroupLog(global::System.Int32 id, global::System.Int32 groupID, global::System.Int32 oldStatusInt, global::System.Int32 newStatusInt, global::System.DateTime createdAt, global::System.DateTime createdAtDateOnly, global::System.String createdBy)
        {
            InternshipPositionGroupLog internshipPositionGroupLog = new InternshipPositionGroupLog();
            internshipPositionGroupLog.ID = id;
            internshipPositionGroupLog.GroupID = groupID;
            internshipPositionGroupLog.OldStatusInt = oldStatusInt;
            internshipPositionGroupLog.NewStatusInt = newStatusInt;
            internshipPositionGroupLog.CreatedAt = createdAt;
            internshipPositionGroupLog.CreatedAtDateOnly = createdAtDateOnly;
            internshipPositionGroupLog.CreatedBy = createdBy;
            return internshipPositionGroupLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                if (_GroupID != value)
                {
                    OnGroupIDChanging(value);
                    ReportPropertyChanging("GroupID");
                    _GroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupID");
                    OnGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _GroupID;
        partial void OnGroupIDChanging(global::System.Int32 value);
        partial void OnGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OldStatusInt
        {
            get
            {
                return _OldStatusInt;
            }
            set
            {
                if (_OldStatusInt != value)
                {
                    OnOldStatusIntChanging(value);
                    ReportPropertyChanging("OldStatusInt");
                    _OldStatusInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OldStatusInt");
                    OnOldStatusIntChanged();
                }
            }
        }
        private global::System.Int32 _OldStatusInt;
        partial void OnOldStatusIntChanging(global::System.Int32 value);
        partial void OnOldStatusIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NewStatusInt
        {
            get
            {
                return _NewStatusInt;
            }
            set
            {
                if (_NewStatusInt != value)
                {
                    OnNewStatusIntChanging(value);
                    ReportPropertyChanging("NewStatusInt");
                    _NewStatusInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NewStatusInt");
                    OnNewStatusIntChanged();
                }
            }
        }
        private global::System.Int32 _NewStatusInt;
        partial void OnNewStatusIntChanging(global::System.Int32 value);
        partial void OnNewStatusIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                if (_CreatedAt != value)
                {
                    OnCreatedAtChanging(value);
                    ReportPropertyChanging("CreatedAt");
                    _CreatedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedAt");
                    OnCreatedAtChanged();
                }
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAtDateOnly
        {
            get
            {
                return _CreatedAtDateOnly;
            }
            set
            {
                if (_CreatedAtDateOnly != value)
                {
                    OnCreatedAtDateOnlyChanging(value);
                    ReportPropertyChanging("CreatedAtDateOnly");
                    _CreatedAtDateOnly = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedAtDateOnly");
                    OnCreatedAtDateOnlyChanged();
                }
            }
        }
        private global::System.DateTime _CreatedAtDateOnly;
        partial void OnCreatedAtDateOnlyChanging(global::System.DateTime value);
        partial void OnCreatedAtDateOnlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                if (_CreatedBy != value)
                {
                    OnCreatedByChanging(value);
                    ReportPropertyChanging("CreatedBy");
                    _CreatedBy = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CreatedBy");
                    OnCreatedByChanged();
                }
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                if (_UpdatedBy != value)
                {
                    OnUpdatedByChanging(value);
                    ReportPropertyChanging("UpdatedBy");
                    _UpdatedBy = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("UpdatedBy");
                    OnUpdatedByChanged();
                }
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedAt
        {
            get
            {
                return _UpdatedAt;
            }
            set
            {
                if (_UpdatedAt != value)
                {
                    OnUpdatedAtChanging(value);
                    ReportPropertyChanging("UpdatedAt");
                    _UpdatedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UpdatedAt");
                    OnUpdatedAtChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _UpdatedAt;
        partial void OnUpdatedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedAtDateOnly
        {
            get
            {
                return _UpdatedAtDateOnly;
            }
            set
            {
                if (_UpdatedAtDateOnly != value)
                {
                    OnUpdatedAtDateOnlyChanging(value);
                    ReportPropertyChanging("UpdatedAtDateOnly");
                    _UpdatedAtDateOnly = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UpdatedAtDateOnly");
                    OnUpdatedAtDateOnlyChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _UpdatedAtDateOnly;
        partial void OnUpdatedAtDateOnlyChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedAtDateOnlyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_InternshipPositionGroupLog_InternshipPositionGroup", "InternshipPositionGroup")]
        public InternshipPositionGroup InternshipPositionGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipPositionGroup>("DBEntitiesModel.FK_InternshipPositionGroupLog_InternshipPositionGroup", "InternshipPositionGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipPositionGroup>("DBEntitiesModel.FK_InternshipPositionGroupLog_InternshipPositionGroup", "InternshipPositionGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipPositionGroup> InternshipPositionGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipPositionGroup>("DBEntitiesModel.FK_InternshipPositionGroupLog_InternshipPositionGroup", "InternshipPositionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipPositionGroup>("DBEntitiesModel.FK_InternshipPositionGroupLog_InternshipPositionGroup", "InternshipPositionGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="InternshipPositionLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InternshipPositionLog : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InternshipPositionLog object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="internshipPositionID">Initial value of the InternshipPositionID property.</param>
        /// <param name="oldStatusInt">Initial value of the OldStatusInt property.</param>
        /// <param name="newStatusInt">Initial value of the NewStatusInt property.</param>
        /// <param name="cancellationReasonInt">Initial value of the CancellationReasonInt property.</param>
        /// <param name="createdAt">Initial value of the CreatedAt property.</param>
        /// <param name="createdAtDateOnly">Initial value of the CreatedAtDateOnly property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static InternshipPositionLog CreateInternshipPositionLog(global::System.Int32 id, global::System.Int32 internshipPositionID, global::System.Int32 oldStatusInt, global::System.Int32 newStatusInt, global::System.Int32 cancellationReasonInt, global::System.DateTime createdAt, global::System.DateTime createdAtDateOnly, global::System.String createdBy)
        {
            InternshipPositionLog internshipPositionLog = new InternshipPositionLog();
            internshipPositionLog.ID = id;
            internshipPositionLog.InternshipPositionID = internshipPositionID;
            internshipPositionLog.OldStatusInt = oldStatusInt;
            internshipPositionLog.NewStatusInt = newStatusInt;
            internshipPositionLog.CancellationReasonInt = cancellationReasonInt;
            internshipPositionLog.CreatedAt = createdAt;
            internshipPositionLog.CreatedAtDateOnly = createdAtDateOnly;
            internshipPositionLog.CreatedBy = createdBy;
            return internshipPositionLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InternshipPositionID
        {
            get
            {
                return _InternshipPositionID;
            }
            set
            {
                if (_InternshipPositionID != value)
                {
                    OnInternshipPositionIDChanging(value);
                    ReportPropertyChanging("InternshipPositionID");
                    _InternshipPositionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InternshipPositionID");
                    OnInternshipPositionIDChanged();
                }
            }
        }
        private global::System.Int32 _InternshipPositionID;
        partial void OnInternshipPositionIDChanging(global::System.Int32 value);
        partial void OnInternshipPositionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OldStatusInt
        {
            get
            {
                return _OldStatusInt;
            }
            set
            {
                if (_OldStatusInt != value)
                {
                    OnOldStatusIntChanging(value);
                    ReportPropertyChanging("OldStatusInt");
                    _OldStatusInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OldStatusInt");
                    OnOldStatusIntChanged();
                }
            }
        }
        private global::System.Int32 _OldStatusInt;
        partial void OnOldStatusIntChanging(global::System.Int32 value);
        partial void OnOldStatusIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NewStatusInt
        {
            get
            {
                return _NewStatusInt;
            }
            set
            {
                if (_NewStatusInt != value)
                {
                    OnNewStatusIntChanging(value);
                    ReportPropertyChanging("NewStatusInt");
                    _NewStatusInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NewStatusInt");
                    OnNewStatusIntChanged();
                }
            }
        }
        private global::System.Int32 _NewStatusInt;
        partial void OnNewStatusIntChanging(global::System.Int32 value);
        partial void OnNewStatusIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreAssignedByOfficeID
        {
            get
            {
                return _PreAssignedByOfficeID;
            }
            set
            {
                if (_PreAssignedByOfficeID != value)
                {
                    OnPreAssignedByOfficeIDChanging(value);
                    ReportPropertyChanging("PreAssignedByOfficeID");
                    _PreAssignedByOfficeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PreAssignedByOfficeID");
                    OnPreAssignedByOfficeIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _PreAssignedByOfficeID;
        partial void OnPreAssignedByOfficeIDChanging(Nullable<global::System.Int32> value);
        partial void OnPreAssignedByOfficeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreAssignedByMasterAccountID
        {
            get
            {
                return _PreAssignedByMasterAccountID;
            }
            set
            {
                if (_PreAssignedByMasterAccountID != value)
                {
                    OnPreAssignedByMasterAccountIDChanging(value);
                    ReportPropertyChanging("PreAssignedByMasterAccountID");
                    _PreAssignedByMasterAccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PreAssignedByMasterAccountID");
                    OnPreAssignedByMasterAccountIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _PreAssignedByMasterAccountID;
        partial void OnPreAssignedByMasterAccountIDChanging(Nullable<global::System.Int32> value);
        partial void OnPreAssignedByMasterAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreAssignedForAcademicID
        {
            get
            {
                return _PreAssignedForAcademicID;
            }
            set
            {
                if (_PreAssignedForAcademicID != value)
                {
                    OnPreAssignedForAcademicIDChanging(value);
                    ReportPropertyChanging("PreAssignedForAcademicID");
                    _PreAssignedForAcademicID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PreAssignedForAcademicID");
                    OnPreAssignedForAcademicIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _PreAssignedForAcademicID;
        partial void OnPreAssignedForAcademicIDChanging(Nullable<global::System.Int32> value);
        partial void OnPreAssignedForAcademicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AssignedByOfficeID
        {
            get
            {
                return _AssignedByOfficeID;
            }
            set
            {
                if (_AssignedByOfficeID != value)
                {
                    OnAssignedByOfficeIDChanging(value);
                    ReportPropertyChanging("AssignedByOfficeID");
                    _AssignedByOfficeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssignedByOfficeID");
                    OnAssignedByOfficeIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _AssignedByOfficeID;
        partial void OnAssignedByOfficeIDChanging(Nullable<global::System.Int32> value);
        partial void OnAssignedByOfficeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AssignedByMasterAccountID
        {
            get
            {
                return _AssignedByMasterAccountID;
            }
            set
            {
                if (_AssignedByMasterAccountID != value)
                {
                    OnAssignedByMasterAccountIDChanging(value);
                    ReportPropertyChanging("AssignedByMasterAccountID");
                    _AssignedByMasterAccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssignedByMasterAccountID");
                    OnAssignedByMasterAccountIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _AssignedByMasterAccountID;
        partial void OnAssignedByMasterAccountIDChanging(Nullable<global::System.Int32> value);
        partial void OnAssignedByMasterAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AssignedToStudentID
        {
            get
            {
                return _AssignedToStudentID;
            }
            set
            {
                if (_AssignedToStudentID != value)
                {
                    OnAssignedToStudentIDChanging(value);
                    ReportPropertyChanging("AssignedToStudentID");
                    _AssignedToStudentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssignedToStudentID");
                    OnAssignedToStudentIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _AssignedToStudentID;
        partial void OnAssignedToStudentIDChanging(Nullable<global::System.Int32> value);
        partial void OnAssignedToStudentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ImplementationStartDate
        {
            get
            {
                return _ImplementationStartDate;
            }
            set
            {
                if (_ImplementationStartDate != value)
                {
                    OnImplementationStartDateChanging(value);
                    ReportPropertyChanging("ImplementationStartDate");
                    _ImplementationStartDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImplementationStartDate");
                    OnImplementationStartDateChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _ImplementationStartDate;
        partial void OnImplementationStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnImplementationStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ImplementationEndDate
        {
            get
            {
                return _ImplementationEndDate;
            }
            set
            {
                if (_ImplementationEndDate != value)
                {
                    OnImplementationEndDateChanging(value);
                    ReportPropertyChanging("ImplementationEndDate");
                    _ImplementationEndDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImplementationEndDate");
                    OnImplementationEndDateChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _ImplementationEndDate;
        partial void OnImplementationEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnImplementationEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompletedByOfficeID
        {
            get
            {
                return _CompletedByOfficeID;
            }
            set
            {
                if (_CompletedByOfficeID != value)
                {
                    OnCompletedByOfficeIDChanging(value);
                    ReportPropertyChanging("CompletedByOfficeID");
                    _CompletedByOfficeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompletedByOfficeID");
                    OnCompletedByOfficeIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _CompletedByOfficeID;
        partial void OnCompletedByOfficeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompletedByOfficeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompletedByMasterAccountID
        {
            get
            {
                return _CompletedByMasterAccountID;
            }
            set
            {
                if (_CompletedByMasterAccountID != value)
                {
                    OnCompletedByMasterAccountIDChanging(value);
                    ReportPropertyChanging("CompletedByMasterAccountID");
                    _CompletedByMasterAccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompletedByMasterAccountID");
                    OnCompletedByMasterAccountIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _CompletedByMasterAccountID;
        partial void OnCompletedByMasterAccountIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompletedByMasterAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CompletedAt
        {
            get
            {
                return _CompletedAt;
            }
            set
            {
                if (_CompletedAt != value)
                {
                    OnCompletedAtChanging(value);
                    ReportPropertyChanging("CompletedAt");
                    _CompletedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompletedAt");
                    OnCompletedAtChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _CompletedAt;
        partial void OnCompletedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnCompletedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompletionComments
        {
            get
            {
                return _CompletionComments;
            }
            set
            {
                if (_CompletionComments != value)
                {
                    OnCompletionCommentsChanging(value);
                    ReportPropertyChanging("CompletionComments");
                    _CompletionComments = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("CompletionComments");
                    OnCompletionCommentsChanged();
                }
            }
        }
        private global::System.String _CompletionComments;
        partial void OnCompletionCommentsChanging(global::System.String value);
        partial void OnCompletionCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CancellationReasonInt
        {
            get
            {
                return _CancellationReasonInt;
            }
            set
            {
                if (_CancellationReasonInt != value)
                {
                    OnCancellationReasonIntChanging(value);
                    ReportPropertyChanging("CancellationReasonInt");
                    _CancellationReasonInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CancellationReasonInt");
                    OnCancellationReasonIntChanged();
                }
            }
        }
        private global::System.Int32 _CancellationReasonInt;
        partial void OnCancellationReasonIntChanging(global::System.Int32 value);
        partial void OnCancellationReasonIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UnPreAssignedByOfficeID
        {
            get
            {
                return _UnPreAssignedByOfficeID;
            }
            set
            {
                if (_UnPreAssignedByOfficeID != value)
                {
                    OnUnPreAssignedByOfficeIDChanging(value);
                    ReportPropertyChanging("UnPreAssignedByOfficeID");
                    _UnPreAssignedByOfficeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnPreAssignedByOfficeID");
                    OnUnPreAssignedByOfficeIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _UnPreAssignedByOfficeID;
        partial void OnUnPreAssignedByOfficeIDChanging(Nullable<global::System.Int32> value);
        partial void OnUnPreAssignedByOfficeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UnPreAssignedByMasterAccountID
        {
            get
            {
                return _UnPreAssignedByMasterAccountID;
            }
            set
            {
                if (_UnPreAssignedByMasterAccountID != value)
                {
                    OnUnPreAssignedByMasterAccountIDChanging(value);
                    ReportPropertyChanging("UnPreAssignedByMasterAccountID");
                    _UnPreAssignedByMasterAccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnPreAssignedByMasterAccountID");
                    OnUnPreAssignedByMasterAccountIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _UnPreAssignedByMasterAccountID;
        partial void OnUnPreAssignedByMasterAccountIDChanging(Nullable<global::System.Int32> value);
        partial void OnUnPreAssignedByMasterAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UnAssignedStudentID
        {
            get
            {
                return _UnAssignedStudentID;
            }
            set
            {
                if (_UnAssignedStudentID != value)
                {
                    OnUnAssignedStudentIDChanging(value);
                    ReportPropertyChanging("UnAssignedStudentID");
                    _UnAssignedStudentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnAssignedStudentID");
                    OnUnAssignedStudentIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _UnAssignedStudentID;
        partial void OnUnAssignedStudentIDChanging(Nullable<global::System.Int32> value);
        partial void OnUnAssignedStudentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UnAssignedByOfficeID
        {
            get
            {
                return _UnAssignedByOfficeID;
            }
            set
            {
                if (_UnAssignedByOfficeID != value)
                {
                    OnUnAssignedByOfficeIDChanging(value);
                    ReportPropertyChanging("UnAssignedByOfficeID");
                    _UnAssignedByOfficeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnAssignedByOfficeID");
                    OnUnAssignedByOfficeIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _UnAssignedByOfficeID;
        partial void OnUnAssignedByOfficeIDChanging(Nullable<global::System.Int32> value);
        partial void OnUnAssignedByOfficeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UnAssignedByMasterAccountID
        {
            get
            {
                return _UnAssignedByMasterAccountID;
            }
            set
            {
                if (_UnAssignedByMasterAccountID != value)
                {
                    OnUnAssignedByMasterAccountIDChanging(value);
                    ReportPropertyChanging("UnAssignedByMasterAccountID");
                    _UnAssignedByMasterAccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnAssignedByMasterAccountID");
                    OnUnAssignedByMasterAccountIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _UnAssignedByMasterAccountID;
        partial void OnUnAssignedByMasterAccountIDChanging(Nullable<global::System.Int32> value);
        partial void OnUnAssignedByMasterAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UnCompletedByOfficeID
        {
            get
            {
                return _UnCompletedByOfficeID;
            }
            set
            {
                if (_UnCompletedByOfficeID != value)
                {
                    OnUnCompletedByOfficeIDChanging(value);
                    ReportPropertyChanging("UnCompletedByOfficeID");
                    _UnCompletedByOfficeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnCompletedByOfficeID");
                    OnUnCompletedByOfficeIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _UnCompletedByOfficeID;
        partial void OnUnCompletedByOfficeIDChanging(Nullable<global::System.Int32> value);
        partial void OnUnCompletedByOfficeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UnCompletedByMasterAccountID
        {
            get
            {
                return _UnCompletedByMasterAccountID;
            }
            set
            {
                if (_UnCompletedByMasterAccountID != value)
                {
                    OnUnCompletedByMasterAccountIDChanging(value);
                    ReportPropertyChanging("UnCompletedByMasterAccountID");
                    _UnCompletedByMasterAccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnCompletedByMasterAccountID");
                    OnUnCompletedByMasterAccountIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _UnCompletedByMasterAccountID;
        partial void OnUnCompletedByMasterAccountIDChanging(Nullable<global::System.Int32> value);
        partial void OnUnCompletedByMasterAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                if (_CreatedAt != value)
                {
                    OnCreatedAtChanging(value);
                    ReportPropertyChanging("CreatedAt");
                    _CreatedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedAt");
                    OnCreatedAtChanged();
                }
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAtDateOnly
        {
            get
            {
                return _CreatedAtDateOnly;
            }
            set
            {
                if (_CreatedAtDateOnly != value)
                {
                    OnCreatedAtDateOnlyChanging(value);
                    ReportPropertyChanging("CreatedAtDateOnly");
                    _CreatedAtDateOnly = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedAtDateOnly");
                    OnCreatedAtDateOnlyChanged();
                }
            }
        }
        private global::System.DateTime _CreatedAtDateOnly;
        partial void OnCreatedAtDateOnlyChanging(global::System.DateTime value);
        partial void OnCreatedAtDateOnlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                if (_CreatedBy != value)
                {
                    OnCreatedByChanging(value);
                    ReportPropertyChanging("CreatedBy");
                    _CreatedBy = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CreatedBy");
                    OnCreatedByChanged();
                }
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FundingTypeInt
        {
            get
            {
                return _FundingTypeInt;
            }
            set
            {
                if (_FundingTypeInt != value)
                {
                    OnFundingTypeIntChanging(value);
                    ReportPropertyChanging("FundingTypeInt");
                    _FundingTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundingTypeInt");
                    OnFundingTypeIntChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _FundingTypeInt;
        partial void OnFundingTypeIntChanging(Nullable<global::System.Int32> value);
        partial void OnFundingTypeIntChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_InternshipPositionLog_InternshipPosition", "InternshipPosition")]
        public InternshipPosition InternshipPosition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipPosition>("DBEntitiesModel.FK_InternshipPositionLog_InternshipPosition", "InternshipPosition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipPosition>("DBEntitiesModel.FK_InternshipPositionLog_InternshipPosition", "InternshipPosition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipPosition> InternshipPositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipPosition>("DBEntitiesModel.FK_InternshipPositionLog_InternshipPosition", "InternshipPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipPosition>("DBEntitiesModel.FK_InternshipPositionLog_InternshipPosition", "InternshipPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogPreAssignedByOffice", "InternshipOffice")]
        public InternshipOffice PreAssignedByOffice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogPreAssignedByOffice", "InternshipOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogPreAssignedByOffice", "InternshipOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipOffice> PreAssignedByOfficeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogPreAssignedByOffice", "InternshipOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogPreAssignedByOffice", "InternshipOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogPreAssignedByMasterAccount", "InternshipOffice")]
        public InternshipOffice PreAssignedByMasterAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogPreAssignedByMasterAccount", "InternshipOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogPreAssignedByMasterAccount", "InternshipOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipOffice> PreAssignedByMasterAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogPreAssignedByMasterAccount", "InternshipOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogPreAssignedByMasterAccount", "InternshipOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogAssignedBy", "InternshipOffice")]
        public InternshipOffice AssignedByOffice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogAssignedBy", "InternshipOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogAssignedBy", "InternshipOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipOffice> AssignedByOfficeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogAssignedBy", "InternshipOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogAssignedBy", "InternshipOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogAssignedByMasterAccount", "InternshipOffice")]
        public InternshipOffice AssignedByMasterAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogAssignedByMasterAccount", "InternshipOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogAssignedByMasterAccount", "InternshipOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipOffice> AssignedByMasterAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogAssignedByMasterAccount", "InternshipOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogAssignedByMasterAccount", "InternshipOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogAssignedToStudent", "Student")]
        public Student AssignedToStudent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("DBEntitiesModel.InternshipPositionLogAssignedToStudent", "Student").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("DBEntitiesModel.InternshipPositionLogAssignedToStudent", "Student").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> AssignedToStudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("DBEntitiesModel.InternshipPositionLogAssignedToStudent", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("DBEntitiesModel.InternshipPositionLogAssignedToStudent", "Student", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogInternshipOffice", "InternshipOffice")]
        public InternshipOffice CompletedByOffice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogInternshipOffice", "InternshipOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogInternshipOffice", "InternshipOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipOffice> CompletedByOfficeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogInternshipOffice", "InternshipOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogInternshipOffice", "InternshipOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogCompletedByMasterAccount", "InternshipOffice")]
        public InternshipOffice CompletedByMasterAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogCompletedByMasterAccount", "InternshipOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogCompletedByMasterAccount", "InternshipOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipOffice> CompletedByMasterAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogCompletedByMasterAccount", "InternshipOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogCompletedByMasterAccount", "InternshipOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogStudent", "Student")]
        public Student UnAssignedStudent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("DBEntitiesModel.InternshipPositionLogStudent", "Student").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("DBEntitiesModel.InternshipPositionLogStudent", "Student").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> UnAssignedStudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("DBEntitiesModel.InternshipPositionLogStudent", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("DBEntitiesModel.InternshipPositionLogStudent", "Student", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogUnPreAssignedByOffice", "InternshipOffice")]
        public InternshipOffice UnPreAssignedByOffice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnPreAssignedByOffice", "InternshipOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnPreAssignedByOffice", "InternshipOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipOffice> UnPreAssignedByOfficeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnPreAssignedByOffice", "InternshipOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnPreAssignedByOffice", "InternshipOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogUnPreAssignedByMasterAccount", "InternshipOffice")]
        public InternshipOffice UnPreAssignedByMasterAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnPreAssignedByMasterAccount", "InternshipOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnPreAssignedByMasterAccount", "InternshipOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipOffice> UnPreAssignedByMasterAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnPreAssignedByMasterAccount", "InternshipOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnPreAssignedByMasterAccount", "InternshipOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogUnAssignedByOffice", "InternshipOffice")]
        public InternshipOffice UnAssignedByOffice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnAssignedByOffice", "InternshipOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnAssignedByOffice", "InternshipOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipOffice> UnAssignedByOfficeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnAssignedByOffice", "InternshipOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnAssignedByOffice", "InternshipOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogUnAssignedByMasterAccount", "InternshipOffice")]
        public InternshipOffice UnAssignedByMasterAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnAssignedByMasterAccount", "InternshipOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnAssignedByMasterAccount", "InternshipOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipOffice> UnAssignedByMasterAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnAssignedByMasterAccount", "InternshipOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnAssignedByMasterAccount", "InternshipOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogUnCompletedByOffice", "InternshipOffice")]
        public InternshipOffice UnCompletedByOffice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnCompletedByOffice", "InternshipOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnCompletedByOffice", "InternshipOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipOffice> UnCompletedByOfficeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnCompletedByOffice", "InternshipOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnCompletedByOffice", "InternshipOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogUnCompletedByMasterAccount", "InternshipOffice")]
        public InternshipOffice UnCompletedByMasterAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnCompletedByMasterAccount", "InternshipOffice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnCompletedByMasterAccount", "InternshipOffice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InternshipOffice> UnCompletedByMasterAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnCompletedByMasterAccount", "InternshipOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InternshipOffice>("DBEntitiesModel.InternshipPositionLogUnCompletedByMasterAccount", "InternshipOffice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_InternshipPositionLog_PreAssignedForAcademic", "Academic")]
        public Academic Academic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Academic>("DBEntitiesModel.FK_InternshipPositionLog_PreAssignedForAcademic", "Academic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Academic>("DBEntitiesModel.FK_InternshipPositionLog_PreAssignedForAcademic", "Academic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Academic> AcademicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Academic>("DBEntitiesModel.FK_InternshipPositionLog_PreAssignedForAcademic", "Academic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Academic>("DBEntitiesModel.FK_InternshipPositionLog_PreAssignedForAcademic", "Academic", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="InternshipProvider")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InternshipProvider : Reporter
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InternshipProvider object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="reporterTypeInt">Initial value of the ReporterTypeInt property.</param>
        /// <param name="declarationTypeInt">Initial value of the DeclarationTypeInt property.</param>
        /// <param name="usernameFromLDAP">Initial value of the UsernameFromLDAP property.</param>
        /// <param name="isEmailVerified">Initial value of the IsEmailVerified property.</param>
        /// <param name="mustChangePassword">Initial value of the MustChangePassword property.</param>
        /// <param name="createdAt">Initial value of the CreatedAt property.</param>
        /// <param name="createdAtDateOnly">Initial value of the CreatedAtDateOnly property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isContactInfoCompleted">Initial value of the IsContactInfoCompleted property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isMasterAccount">Initial value of the IsMasterAccount property.</param>
        /// <param name="registrationTypeInt">Initial value of the RegistrationTypeInt property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static InternshipProvider CreateInternshipProvider(global::System.Int32 id, global::System.Int32 reporterTypeInt, global::System.Int32 declarationTypeInt, global::System.String usernameFromLDAP, global::System.Boolean isEmailVerified, global::System.Boolean mustChangePassword, global::System.DateTime createdAt, global::System.DateTime createdAtDateOnly, global::System.String createdBy, global::System.Boolean isContactInfoCompleted, global::System.Boolean isApproved, global::System.Boolean isMasterAccount, global::System.Int32 registrationTypeInt, global::System.Boolean isActive)
        {
            InternshipProvider internshipProvider = new InternshipProvider();
            internshipProvider.ID = id;
            internshipProvider.ReporterTypeInt = reporterTypeInt;
            internshipProvider.DeclarationTypeInt = declarationTypeInt;
            internshipProvider.UsernameFromLDAP = usernameFromLDAP;
            internshipProvider.IsEmailVerified = isEmailVerified;
            internshipProvider.MustChangePassword = mustChangePassword;
            internshipProvider.CreatedAt = createdAt;
            internshipProvider.CreatedAtDateOnly = createdAtDateOnly;
            internshipProvider.CreatedBy = createdBy;
            internshipProvider.IsContactInfoCompleted = isContactInfoCompleted;
            internshipProvider.IsApproved = isApproved;
            internshipProvider.IsMasterAccount = isMasterAccount;
            internshipProvider.RegistrationTypeInt = registrationTypeInt;
            internshipProvider.IsActive = isActive;
            return internshipProvider;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProviderTypeInt
        {
            get
            {
                return _ProviderTypeInt;
            }
            set
            {
                if (_ProviderTypeInt != value)
                {
                    OnProviderTypeIntChanging(value);
                    ReportPropertyChanging("ProviderTypeInt");
                    _ProviderTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProviderTypeInt");
                    OnProviderTypeIntChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _ProviderTypeInt;
        partial void OnProviderTypeIntChanging(Nullable<global::System.Int32> value);
        partial void OnProviderTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TradeName
        {
            get
            {
                return _TradeName;
            }
            set
            {
                if (_TradeName != value)
                {
                    OnTradeNameChanging(value);
                    ReportPropertyChanging("TradeName");
                    _TradeName = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("TradeName");
                    OnTradeNameChanged();
                }
            }
        }
        private global::System.String _TradeName;
        partial void OnTradeNameChanging(global::System.String value);
        partial void OnTradeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AFM
        {
            get
            {
                return _AFM;
            }
            set
            {
                if (_AFM != value)
                {
                    OnAFMChanging(value);
                    ReportPropertyChanging("AFM");
                    _AFM = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("AFM");
                    OnAFMChanged();
                }
            }
        }
        private global::System.String _AFM;
        partial void OnAFMChanging(global::System.String value);
        partial void OnAFMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DOY
        {
            get
            {
                return _DOY;
            }
            set
            {
                if (_DOY != value)
                {
                    OnDOYChanging(value);
                    ReportPropertyChanging("DOY");
                    _DOY = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("DOY");
                    OnDOYChanged();
                }
            }
        }
        private global::System.String _DOY;
        partial void OnDOYChanging(global::System.String value);
        partial void OnDOYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProviderPhone
        {
            get
            {
                return _ProviderPhone;
            }
            set
            {
                if (_ProviderPhone != value)
                {
                    OnProviderPhoneChanging(value);
                    ReportPropertyChanging("ProviderPhone");
                    _ProviderPhone = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("ProviderPhone");
                    OnProviderPhoneChanged();
                }
            }
        }
        private global::System.String _ProviderPhone;
        partial void OnProviderPhoneChanging(global::System.String value);
        partial void OnProviderPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProviderFax
        {
            get
            {
                return _ProviderFax;
            }
            set
            {
                if (_ProviderFax != value)
                {
                    OnProviderFaxChanging(value);
                    ReportPropertyChanging("ProviderFax");
                    _ProviderFax = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("ProviderFax");
                    OnProviderFaxChanged();
                }
            }
        }
        private global::System.String _ProviderFax;
        partial void OnProviderFaxChanging(global::System.String value);
        partial void OnProviderFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProviderEmail
        {
            get
            {
                return _ProviderEmail;
            }
            set
            {
                if (_ProviderEmail != value)
                {
                    OnProviderEmailChanging(value);
                    ReportPropertyChanging("ProviderEmail");
                    _ProviderEmail = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("ProviderEmail");
                    OnProviderEmailChanged();
                }
            }
        }
        private global::System.String _ProviderEmail;
        partial void OnProviderEmailChanging(global::System.String value);
        partial void OnProviderEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProviderURL
        {
            get
            {
                return _ProviderURL;
            }
            set
            {
                if (_ProviderURL != value)
                {
                    OnProviderURLChanging(value);
                    ReportPropertyChanging("ProviderURL");
                    _ProviderURL = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("ProviderURL");
                    OnProviderURLChanged();
                }
            }
        }
        private global::System.String _ProviderURL;
        partial void OnProviderURLChanging(global::System.String value);
        partial void OnProviderURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfEmployees
        {
            get
            {
                return _NumberOfEmployees;
            }
            set
            {
                if (_NumberOfEmployees != value)
                {
                    OnNumberOfEmployeesChanging(value);
                    ReportPropertyChanging("NumberOfEmployees");
                    _NumberOfEmployees = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NumberOfEmployees");
                    OnNumberOfEmployeesChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _NumberOfEmployees;
        partial void OnNumberOfEmployeesChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfEmployeesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                if (_Address != value)
                {
                    OnAddressChanging(value);
                    ReportPropertyChanging("Address");
                    _Address = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("Address");
                    OnAddressChanged();
                }
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                if (_ZipCode != value)
                {
                    OnZipCodeChanging(value);
                    ReportPropertyChanging("ZipCode");
                    _ZipCode = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("ZipCode");
                    OnZipCodeChanged();
                }
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                if (_CityID != value)
                {
                    OnCityIDChanging(value);
                    ReportPropertyChanging("CityID");
                    _CityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityID");
                    OnCityIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrefectureID
        {
            get
            {
                return _PrefectureID;
            }
            set
            {
                if (_PrefectureID != value)
                {
                    OnPrefectureIDChanging(value);
                    ReportPropertyChanging("PrefectureID");
                    _PrefectureID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PrefectureID");
                    OnPrefectureIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _PrefectureID;
        partial void OnPrefectureIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrefectureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LegalPersonName
        {
            get
            {
                return _LegalPersonName;
            }
            set
            {
                if (_LegalPersonName != value)
                {
                    OnLegalPersonNameChanging(value);
                    ReportPropertyChanging("LegalPersonName");
                    _LegalPersonName = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("LegalPersonName");
                    OnLegalPersonNameChanged();
                }
            }
        }
        private global::System.String _LegalPersonName;
        partial void OnLegalPersonNameChanging(global::System.String value);
        partial void OnLegalPersonNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LegalPersonPhone
        {
            get
            {
                return _LegalPersonPhone;
            }
            set
            {
                if (_LegalPersonPhone != value)
                {
                    OnLegalPersonPhoneChanging(value);
                    ReportPropertyChanging("LegalPersonPhone");
                    _LegalPersonPhone = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("LegalPersonPhone");
                    OnLegalPersonPhoneChanged();
                }
            }
        }
        private global::System.String _LegalPersonPhone;
        partial void OnLegalPersonPhoneChanging(global::System.String value);
        partial void OnLegalPersonPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LegalPersonEmail
        {
            get
            {
                return _LegalPersonEmail;
            }
            set
            {
                if (_LegalPersonEmail != value)
                {
                    OnLegalPersonEmailChanging(value);
                    ReportPropertyChanging("LegalPersonEmail");
                    _LegalPersonEmail = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("LegalPersonEmail");
                    OnLegalPersonEmailChanged();
                }
            }
        }
        private global::System.String _LegalPersonEmail;
        partial void OnLegalPersonEmailChanging(global::System.String value);
        partial void OnLegalPersonEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LegalPersonIdentificationTypeInt
        {
            get
            {
                return _LegalPersonIdentificationTypeInt;
            }
            set
            {
                if (_LegalPersonIdentificationTypeInt != value)
                {
                    OnLegalPersonIdentificationTypeIntChanging(value);
                    ReportPropertyChanging("LegalPersonIdentificationTypeInt");
                    _LegalPersonIdentificationTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LegalPersonIdentificationTypeInt");
                    OnLegalPersonIdentificationTypeIntChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _LegalPersonIdentificationTypeInt;
        partial void OnLegalPersonIdentificationTypeIntChanging(Nullable<global::System.Int32> value);
        partial void OnLegalPersonIdentificationTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LegalPersonIdentificationNumber
        {
            get
            {
                return _LegalPersonIdentificationNumber;
            }
            set
            {
                if (_LegalPersonIdentificationNumber != value)
                {
                    OnLegalPersonIdentificationNumberChanging(value);
                    ReportPropertyChanging("LegalPersonIdentificationNumber");
                    _LegalPersonIdentificationNumber = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("LegalPersonIdentificationNumber");
                    OnLegalPersonIdentificationNumberChanged();
                }
            }
        }
        private global::System.String _LegalPersonIdentificationNumber;
        partial void OnLegalPersonIdentificationNumberChanging(global::System.String value);
        partial void OnLegalPersonIdentificationNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LegalPersonIdentificationIssuer
        {
            get
            {
                return _LegalPersonIdentificationIssuer;
            }
            set
            {
                if (_LegalPersonIdentificationIssuer != value)
                {
                    OnLegalPersonIdentificationIssuerChanging(value);
                    ReportPropertyChanging("LegalPersonIdentificationIssuer");
                    _LegalPersonIdentificationIssuer = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("LegalPersonIdentificationIssuer");
                    OnLegalPersonIdentificationIssuerChanged();
                }
            }
        }
        private global::System.String _LegalPersonIdentificationIssuer;
        partial void OnLegalPersonIdentificationIssuerChanging(global::System.String value);
        partial void OnLegalPersonIdentificationIssuerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LegalPersonIdentificationIssueDate
        {
            get
            {
                return _LegalPersonIdentificationIssueDate;
            }
            set
            {
                if (_LegalPersonIdentificationIssueDate != value)
                {
                    OnLegalPersonIdentificationIssueDateChanging(value);
                    ReportPropertyChanging("LegalPersonIdentificationIssueDate");
                    _LegalPersonIdentificationIssueDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LegalPersonIdentificationIssueDate");
                    OnLegalPersonIdentificationIssueDateChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _LegalPersonIdentificationIssueDate;
        partial void OnLegalPersonIdentificationIssueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLegalPersonIdentificationIssueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrimaryActivityID
        {
            get
            {
                return _PrimaryActivityID;
            }
            set
            {
                if (_PrimaryActivityID != value)
                {
                    OnPrimaryActivityIDChanging(value);
                    ReportPropertyChanging("PrimaryActivityID");
                    _PrimaryActivityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PrimaryActivityID");
                    OnPrimaryActivityIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _PrimaryActivityID;
        partial void OnPrimaryActivityIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrimaryActivityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityText
        {
            get
            {
                return _CityText;
            }
            set
            {
                if (_CityText != value)
                {
                    OnCityTextChanging(value);
                    ReportPropertyChanging("CityText");
                    _CityText = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("CityText");
                    OnCityTextChanged();
                }
            }
        }
        private global::System.String _CityText;
        partial void OnCityTextChanging(global::System.String value);
        partial void OnCityTextChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "CityProvider", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DBEntitiesModel.CityProvider", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DBEntitiesModel.CityProvider", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DBEntitiesModel.CityProvider", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("DBEntitiesModel.CityProvider", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "PrefectureProvider", "Prefecture")]
        public Prefecture Prefecture
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prefecture>("DBEntitiesModel.PrefectureProvider", "Prefecture").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prefecture>("DBEntitiesModel.PrefectureProvider", "Prefecture").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Prefecture> PrefectureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prefecture>("DBEntitiesModel.PrefectureProvider", "Prefecture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Prefecture>("DBEntitiesModel.PrefectureProvider", "Prefecture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "CountryProvider", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DBEntitiesModel.CountryProvider", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DBEntitiesModel.CountryProvider", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DBEntitiesModel.CountryProvider", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("DBEntitiesModel.CountryProvider", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipProviderInternshipPositionGroup", "InternshipPositionGroup")]
        public EntityCollection<InternshipPositionGroup> InternshipPositionGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionGroup>("DBEntitiesModel.InternshipProviderInternshipPositionGroup", "InternshipPositionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionGroup>("DBEntitiesModel.InternshipProviderInternshipPositionGroup", "InternshipPositionGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipProviderPrimaryActivity", "PrimaryActivity")]
        public PrimaryActivity PrimaryActivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrimaryActivity>("DBEntitiesModel.InternshipProviderPrimaryActivity", "PrimaryActivity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrimaryActivity>("DBEntitiesModel.InternshipProviderPrimaryActivity", "PrimaryActivity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrimaryActivity> PrimaryActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrimaryActivity>("DBEntitiesModel.InternshipProviderPrimaryActivity", "PrimaryActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrimaryActivity>("DBEntitiesModel.InternshipProviderPrimaryActivity", "PrimaryActivity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="MassMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MassMessage : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MassMessage object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="reporterTypeInt">Initial value of the ReporterTypeInt property.</param>
        /// <param name="dispatchTypeInt">Initial value of the DispatchTypeInt property.</param>
        /// <param name="sentAt">Initial value of the SentAt property.</param>
        /// <param name="messageText">Initial value of the MessageText property.</param>
        public static MassMessage CreateMassMessage(global::System.Int32 id, global::System.Int32 reporterTypeInt, global::System.Int32 dispatchTypeInt, global::System.DateTime sentAt, global::System.String messageText)
        {
            MassMessage massMessage = new MassMessage();
            massMessage.ID = id;
            massMessage.ReporterTypeInt = reporterTypeInt;
            massMessage.DispatchTypeInt = dispatchTypeInt;
            massMessage.SentAt = sentAt;
            massMessage.MessageText = messageText;
            return massMessage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReporterTypeInt
        {
            get
            {
                return _ReporterTypeInt;
            }
            set
            {
                if (_ReporterTypeInt != value)
                {
                    OnReporterTypeIntChanging(value);
                    ReportPropertyChanging("ReporterTypeInt");
                    _ReporterTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReporterTypeInt");
                    OnReporterTypeIntChanged();
                }
            }
        }
        private global::System.Int32 _ReporterTypeInt;
        partial void OnReporterTypeIntChanging(global::System.Int32 value);
        partial void OnReporterTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DispatchTypeInt
        {
            get
            {
                return _DispatchTypeInt;
            }
            set
            {
                if (_DispatchTypeInt != value)
                {
                    OnDispatchTypeIntChanging(value);
                    ReportPropertyChanging("DispatchTypeInt");
                    _DispatchTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DispatchTypeInt");
                    OnDispatchTypeIntChanged();
                }
            }
        }
        private global::System.Int32 _DispatchTypeInt;
        partial void OnDispatchTypeIntChanging(global::System.Int32 value);
        partial void OnDispatchTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SentAt
        {
            get
            {
                return _SentAt;
            }
            set
            {
                if (_SentAt != value)
                {
                    OnSentAtChanging(value);
                    ReportPropertyChanging("SentAt");
                    _SentAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SentAt");
                    OnSentAtChanged();
                }
            }
        }
        private global::System.DateTime _SentAt;
        partial void OnSentAtChanging(global::System.DateTime value);
        partial void OnSentAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageText
        {
            get
            {
                return _MessageText;
            }
            set
            {
                if (_MessageText != value)
                {
                    OnMessageTextChanging(value);
                    ReportPropertyChanging("MessageText");
                    _MessageText = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MessageText");
                    OnMessageTextChanged();
                }
            }
        }
        private global::System.String _MessageText;
        partial void OnMessageTextChanging(global::System.String value);
        partial void OnMessageTextChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "MassMessageReporterXRef", "Reporter")]
        public EntityCollection<Reporter> Reporters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reporter>("DBEntitiesModel.MassMessageReporterXRef", "Reporter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reporter>("DBEntitiesModel.MassMessageReporterXRef", "Reporter", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="Other")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Other : Reporter
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Other object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="reporterTypeInt">Initial value of the ReporterTypeInt property.</param>
        /// <param name="declarationTypeInt">Initial value of the DeclarationTypeInt property.</param>
        /// <param name="usernameFromLDAP">Initial value of the UsernameFromLDAP property.</param>
        /// <param name="isEmailVerified">Initial value of the IsEmailVerified property.</param>
        /// <param name="mustChangePassword">Initial value of the MustChangePassword property.</param>
        /// <param name="createdAt">Initial value of the CreatedAt property.</param>
        /// <param name="createdAtDateOnly">Initial value of the CreatedAtDateOnly property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isContactInfoCompleted">Initial value of the IsContactInfoCompleted property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isMasterAccount">Initial value of the IsMasterAccount property.</param>
        /// <param name="registrationTypeInt">Initial value of the RegistrationTypeInt property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Other CreateOther(global::System.Int32 id, global::System.Int32 reporterTypeInt, global::System.Int32 declarationTypeInt, global::System.String usernameFromLDAP, global::System.Boolean isEmailVerified, global::System.Boolean mustChangePassword, global::System.DateTime createdAt, global::System.DateTime createdAtDateOnly, global::System.String createdBy, global::System.Boolean isContactInfoCompleted, global::System.Boolean isApproved, global::System.Boolean isMasterAccount, global::System.Int32 registrationTypeInt, global::System.Boolean isActive)
        {
            Other other = new Other();
            other.ID = id;
            other.ReporterTypeInt = reporterTypeInt;
            other.DeclarationTypeInt = declarationTypeInt;
            other.UsernameFromLDAP = usernameFromLDAP;
            other.IsEmailVerified = isEmailVerified;
            other.MustChangePassword = mustChangePassword;
            other.CreatedAt = createdAt;
            other.CreatedAtDateOnly = createdAtDateOnly;
            other.CreatedBy = createdBy;
            other.IsContactInfoCompleted = isContactInfoCompleted;
            other.IsApproved = isApproved;
            other.IsMasterAccount = isMasterAccount;
            other.RegistrationTypeInt = registrationTypeInt;
            other.IsActive = isActive;
            return other;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    OnDescriptionChanging(value);
                    ReportPropertyChanging("Description");
                    _Description = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("Description");
                    OnDescriptionChanged();
                }
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="PhysicalObject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhysicalObject : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhysicalObject object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="nameInGreek">Initial value of the NameInGreek property.</param>
        public static PhysicalObject CreatePhysicalObject(global::System.Int32 id, global::System.String nameInGreek)
        {
            PhysicalObject physicalObject = new PhysicalObject();
            physicalObject.ID = id;
            physicalObject.NameInGreek = nameInGreek;
            return physicalObject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameInGreek
        {
            get
            {
                return _NameInGreek;
            }
            set
            {
                if (_NameInGreek != value)
                {
                    OnNameInGreekChanging(value);
                    ReportPropertyChanging("NameInGreek");
                    _NameInGreek = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("NameInGreek");
                    OnNameInGreekChanged();
                }
            }
        }
        private global::System.String _NameInGreek;
        partial void OnNameInGreekChanging(global::System.String value);
        partial void OnNameInGreekChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameInLatin
        {
            get
            {
                return _NameInLatin;
            }
            set
            {
                if (_NameInLatin != value)
                {
                    OnNameInLatinChanging(value);
                    ReportPropertyChanging("NameInLatin");
                    _NameInLatin = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("NameInLatin");
                    OnNameInLatinChanged();
                }
            }
        }
        private global::System.String _NameInLatin;
        partial void OnNameInLatinChanging(global::System.String value);
        partial void OnNameInLatinChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionGroupPhysicalObjectXRef1", "InternshipPositionGroup")]
        public EntityCollection<InternshipPositionGroup> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionGroup>("DBEntitiesModel.InternshipPositionGroupPhysicalObjectXRef1", "InternshipPositionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionGroup>("DBEntitiesModel.InternshipPositionGroupPhysicalObjectXRef1", "InternshipPositionGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="Prefecture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Prefecture : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Prefecture object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="regionID">Initial value of the RegionID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        public static Prefecture CreatePrefecture(global::System.Int32 id, global::System.String name, global::System.Int32 regionID, global::System.Int32 countryID)
        {
            Prefecture prefecture = new Prefecture();
            prefecture.ID = id;
            prefecture.Name = name;
            prefecture.RegionID = regionID;
            prefecture.CountryID = countryID;
            return prefecture;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegionID
        {
            get
            {
                return _RegionID;
            }
            set
            {
                if (_RegionID != value)
                {
                    OnRegionIDChanging(value);
                    ReportPropertyChanging("RegionID");
                    _RegionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegionID");
                    OnRegionIDChanged();
                }
            }
        }
        private global::System.Int32 _RegionID;
        partial void OnRegionIDChanging(global::System.Int32 value);
        partial void OnRegionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Kap_Cities_Kap_Prefectures", "Kali_Cities")]
        public EntityCollection<City> Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("DBEntitiesModel.FK_Kap_Cities_Kap_Prefectures", "Kali_Cities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("DBEntitiesModel.FK_Kap_Cities_Kap_Prefectures", "Kali_Cities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Kap_Prefectures_Kap_Regions", "Kali_Regions")]
        public Region Regions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("DBEntitiesModel.FK_Kap_Prefectures_Kap_Regions", "Kali_Regions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("DBEntitiesModel.FK_Kap_Prefectures_Kap_Regions", "Kali_Regions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> RegionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("DBEntitiesModel.FK_Kap_Prefectures_Kap_Regions", "Kali_Regions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("DBEntitiesModel.FK_Kap_Prefectures_Kap_Regions", "Kali_Regions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Academic_Kap_Prefectures", "Academic")]
        public EntityCollection<Academic> Academics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Academic>("DBEntitiesModel.FK_Academic_Kap_Prefectures", "Academic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Academic>("DBEntitiesModel.FK_Academic_Kap_Prefectures", "Academic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "PrefectureOffice", "Office")]
        public EntityCollection<InternshipOffice> Offices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipOffice>("DBEntitiesModel.PrefectureOffice", "Office");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipOffice>("DBEntitiesModel.PrefectureOffice", "Office", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "PrefectureProvider", "Provider")]
        public EntityCollection<InternshipProvider> Providers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipProvider>("DBEntitiesModel.PrefectureProvider", "Provider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipProvider>("DBEntitiesModel.PrefectureProvider", "Provider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_InternshipPositionGroup_Kali_Prefectures", "InternshipPositionGroup")]
        public EntityCollection<InternshipPositionGroup> InternshipPositionGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionGroup>("DBEntitiesModel.FK_InternshipPositionGroup_Kali_Prefectures", "InternshipPositionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionGroup>("DBEntitiesModel.FK_InternshipPositionGroup_Kali_Prefectures", "InternshipPositionGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Kali_Prefectures_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DBEntitiesModel.FK_Kali_Prefectures_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DBEntitiesModel.FK_Kali_Prefectures_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DBEntitiesModel.FK_Kali_Prefectures_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("DBEntitiesModel.FK_Kali_Prefectures_Country", "Country", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="PrimaryActivity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrimaryActivity : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrimaryActivity object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="nameInGreek">Initial value of the NameInGreek property.</param>
        public static PrimaryActivity CreatePrimaryActivity(global::System.Int32 id, global::System.String nameInGreek)
        {
            PrimaryActivity primaryActivity = new PrimaryActivity();
            primaryActivity.ID = id;
            primaryActivity.NameInGreek = nameInGreek;
            return primaryActivity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameInGreek
        {
            get
            {
                return _NameInGreek;
            }
            set
            {
                if (_NameInGreek != value)
                {
                    OnNameInGreekChanging(value);
                    ReportPropertyChanging("NameInGreek");
                    _NameInGreek = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("NameInGreek");
                    OnNameInGreekChanged();
                }
            }
        }
        private global::System.String _NameInGreek;
        partial void OnNameInGreekChanging(global::System.String value);
        partial void OnNameInGreekChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameInLatin
        {
            get
            {
                return _NameInLatin;
            }
            set
            {
                if (_NameInLatin != value)
                {
                    OnNameInLatinChanging(value);
                    ReportPropertyChanging("NameInLatin");
                    _NameInLatin = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("NameInLatin");
                    OnNameInLatinChanged();
                }
            }
        }
        private global::System.String _NameInLatin;
        partial void OnNameInLatinChanging(global::System.String value);
        partial void OnNameInLatinChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipProviderPrimaryActivity", "InternshipProvider")]
        public EntityCollection<InternshipProvider> InternshipProvider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipProvider>("DBEntitiesModel.InternshipProviderPrimaryActivity", "InternshipProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipProvider>("DBEntitiesModel.InternshipProviderPrimaryActivity", "InternshipProvider", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="Questionnaire")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Questionnaire : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Questionnaire object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="questionnaireTypeInt">Initial value of the QuestionnaireTypeInt property.</param>
        public static Questionnaire CreateQuestionnaire(global::System.Int32 id, global::System.Int32 questionnaireTypeInt)
        {
            Questionnaire questionnaire = new Questionnaire();
            questionnaire.ID = id;
            questionnaire.QuestionnaireTypeInt = questionnaireTypeInt;
            return questionnaire;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionnaireTypeInt
        {
            get
            {
                return _QuestionnaireTypeInt;
            }
            set
            {
                if (_QuestionnaireTypeInt != value)
                {
                    OnQuestionnaireTypeIntChanging(value);
                    ReportPropertyChanging("QuestionnaireTypeInt");
                    _QuestionnaireTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuestionnaireTypeInt");
                    OnQuestionnaireTypeIntChanged();
                }
            }
        }
        private global::System.Int32 _QuestionnaireTypeInt;
        partial void OnQuestionnaireTypeIntChanging(global::System.Int32 value);
        partial void OnQuestionnaireTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TitleGR
        {
            get
            {
                return _TitleGR;
            }
            set
            {
                if (_TitleGR != value)
                {
                    OnTitleGRChanging(value);
                    ReportPropertyChanging("TitleGR");
                    _TitleGR = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("TitleGR");
                    OnTitleGRChanged();
                }
            }
        }
        private global::System.String _TitleGR;
        partial void OnTitleGRChanging(global::System.String value);
        partial void OnTitleGRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TitleEN
        {
            get
            {
                return _TitleEN;
            }
            set
            {
                if (_TitleEN != value)
                {
                    OnTitleENChanging(value);
                    ReportPropertyChanging("TitleEN");
                    _TitleEN = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("TitleEN");
                    OnTitleENChanged();
                }
            }
        }
        private global::System.String _TitleEN;
        partial void OnTitleENChanging(global::System.String value);
        partial void OnTitleENChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_QuestionnaireQuestion_Questionnaire", "QuestionnaireQuestion")]
        public EntityCollection<QuestionnaireQuestion> QuestionnaireQuestions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuestionnaireQuestion>("DBEntitiesModel.FK_QuestionnaireQuestion_Questionnaire", "QuestionnaireQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuestionnaireQuestion>("DBEntitiesModel.FK_QuestionnaireQuestion_Questionnaire", "QuestionnaireQuestion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_SubmittedQuestionnaire_Questionnaire", "SubmittedQuestionnaire")]
        public EntityCollection<SubmittedQuestionnaire> SubmittedQuestionnaires
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubmittedQuestionnaire>("DBEntitiesModel.FK_SubmittedQuestionnaire_Questionnaire", "SubmittedQuestionnaire");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubmittedQuestionnaire>("DBEntitiesModel.FK_SubmittedQuestionnaire_Questionnaire", "SubmittedQuestionnaire", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="QuestionnaireAnswer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuestionnaireAnswer : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuestionnaireAnswer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="submittedQuestionnaireID">Initial value of the SubmittedQuestionnaireID property.</param>
        /// <param name="questionID">Initial value of the QuestionID property.</param>
        public static QuestionnaireAnswer CreateQuestionnaireAnswer(global::System.Int32 id, global::System.Int32 submittedQuestionnaireID, global::System.Int32 questionID)
        {
            QuestionnaireAnswer questionnaireAnswer = new QuestionnaireAnswer();
            questionnaireAnswer.ID = id;
            questionnaireAnswer.SubmittedQuestionnaireID = submittedQuestionnaireID;
            questionnaireAnswer.QuestionID = questionID;
            return questionnaireAnswer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubmittedQuestionnaireID
        {
            get
            {
                return _SubmittedQuestionnaireID;
            }
            set
            {
                if (_SubmittedQuestionnaireID != value)
                {
                    OnSubmittedQuestionnaireIDChanging(value);
                    ReportPropertyChanging("SubmittedQuestionnaireID");
                    _SubmittedQuestionnaireID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubmittedQuestionnaireID");
                    OnSubmittedQuestionnaireIDChanged();
                }
            }
        }
        private global::System.Int32 _SubmittedQuestionnaireID;
        partial void OnSubmittedQuestionnaireIDChanging(global::System.Int32 value);
        partial void OnSubmittedQuestionnaireIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionID
        {
            get
            {
                return _QuestionID;
            }
            set
            {
                if (_QuestionID != value)
                {
                    OnQuestionIDChanging(value);
                    ReportPropertyChanging("QuestionID");
                    _QuestionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuestionID");
                    OnQuestionIDChanged();
                }
            }
        }
        private global::System.Int32 _QuestionID;
        partial void OnQuestionIDChanging(global::System.Int32 value);
        partial void OnQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AnswerInt
        {
            get
            {
                return _AnswerInt;
            }
            set
            {
                if (_AnswerInt != value)
                {
                    OnAnswerIntChanging(value);
                    ReportPropertyChanging("AnswerInt");
                    _AnswerInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AnswerInt");
                    OnAnswerIntChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _AnswerInt;
        partial void OnAnswerIntChanging(Nullable<global::System.Int32> value);
        partial void OnAnswerIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AnswerString
        {
            get
            {
                return _AnswerString;
            }
            set
            {
                if (_AnswerString != value)
                {
                    OnAnswerStringChanging(value);
                    ReportPropertyChanging("AnswerString");
                    _AnswerString = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("AnswerString");
                    OnAnswerStringChanged();
                }
            }
        }
        private global::System.String _AnswerString;
        partial void OnAnswerStringChanging(global::System.String value);
        partial void OnAnswerStringChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_QuestionnaireAnswer_QuestionnaireQuestion", "QuestionnaireQuestion")]
        public QuestionnaireQuestion QuestionnaireQuestion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionnaireQuestion>("DBEntitiesModel.FK_QuestionnaireAnswer_QuestionnaireQuestion", "QuestionnaireQuestion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionnaireQuestion>("DBEntitiesModel.FK_QuestionnaireAnswer_QuestionnaireQuestion", "QuestionnaireQuestion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuestionnaireQuestion> QuestionnaireQuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionnaireQuestion>("DBEntitiesModel.FK_QuestionnaireAnswer_QuestionnaireQuestion", "QuestionnaireQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuestionnaireQuestion>("DBEntitiesModel.FK_QuestionnaireAnswer_QuestionnaireQuestion", "QuestionnaireQuestion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_QuestionnaireAnswer_SubmittedQuestionnaire", "SubmittedQuestionnaire")]
        public SubmittedQuestionnaire SubmittedQuestionnaire
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubmittedQuestionnaire>("DBEntitiesModel.FK_QuestionnaireAnswer_SubmittedQuestionnaire", "SubmittedQuestionnaire").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubmittedQuestionnaire>("DBEntitiesModel.FK_QuestionnaireAnswer_SubmittedQuestionnaire", "SubmittedQuestionnaire").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubmittedQuestionnaire> SubmittedQuestionnaireReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubmittedQuestionnaire>("DBEntitiesModel.FK_QuestionnaireAnswer_SubmittedQuestionnaire", "SubmittedQuestionnaire");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubmittedQuestionnaire>("DBEntitiesModel.FK_QuestionnaireAnswer_SubmittedQuestionnaire", "SubmittedQuestionnaire", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="QuestionnaireQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuestionnaireQuestion : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuestionnaireQuestion object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="questionnaireID">Initial value of the QuestionnaireID property.</param>
        /// <param name="questionTypeInt">Initial value of the QuestionTypeInt property.</param>
        /// <param name="questionNumber">Initial value of the QuestionNumber property.</param>
        /// <param name="titleGR">Initial value of the TitleGR property.</param>
        public static QuestionnaireQuestion CreateQuestionnaireQuestion(global::System.Int32 id, global::System.Int32 questionnaireID, global::System.Int32 questionTypeInt, global::System.Int32 questionNumber, global::System.String titleGR)
        {
            QuestionnaireQuestion questionnaireQuestion = new QuestionnaireQuestion();
            questionnaireQuestion.ID = id;
            questionnaireQuestion.QuestionnaireID = questionnaireID;
            questionnaireQuestion.QuestionTypeInt = questionTypeInt;
            questionnaireQuestion.QuestionNumber = questionNumber;
            questionnaireQuestion.TitleGR = titleGR;
            return questionnaireQuestion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionnaireID
        {
            get
            {
                return _QuestionnaireID;
            }
            set
            {
                if (_QuestionnaireID != value)
                {
                    OnQuestionnaireIDChanging(value);
                    ReportPropertyChanging("QuestionnaireID");
                    _QuestionnaireID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuestionnaireID");
                    OnQuestionnaireIDChanged();
                }
            }
        }
        private global::System.Int32 _QuestionnaireID;
        partial void OnQuestionnaireIDChanging(global::System.Int32 value);
        partial void OnQuestionnaireIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionTypeInt
        {
            get
            {
                return _QuestionTypeInt;
            }
            set
            {
                if (_QuestionTypeInt != value)
                {
                    OnQuestionTypeIntChanging(value);
                    ReportPropertyChanging("QuestionTypeInt");
                    _QuestionTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuestionTypeInt");
                    OnQuestionTypeIntChanged();
                }
            }
        }
        private global::System.Int32 _QuestionTypeInt;
        partial void OnQuestionTypeIntChanging(global::System.Int32 value);
        partial void OnQuestionTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionNumber
        {
            get
            {
                return _QuestionNumber;
            }
            set
            {
                if (_QuestionNumber != value)
                {
                    OnQuestionNumberChanging(value);
                    ReportPropertyChanging("QuestionNumber");
                    _QuestionNumber = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuestionNumber");
                    OnQuestionNumberChanged();
                }
            }
        }
        private global::System.Int32 _QuestionNumber;
        partial void OnQuestionNumberChanging(global::System.Int32 value);
        partial void OnQuestionNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TitleGR
        {
            get
            {
                return _TitleGR;
            }
            set
            {
                if (_TitleGR != value)
                {
                    OnTitleGRChanging(value);
                    ReportPropertyChanging("TitleGR");
                    _TitleGR = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TitleGR");
                    OnTitleGRChanged();
                }
            }
        }
        private global::System.String _TitleGR;
        partial void OnTitleGRChanging(global::System.String value);
        partial void OnTitleGRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PossibleAnswersGRXml
        {
            get
            {
                return _PossibleAnswersGRXml;
            }
            set
            {
                if (_PossibleAnswersGRXml != value)
                {
                    OnPossibleAnswersGRXmlChanging(value);
                    ReportPropertyChanging("PossibleAnswersGRXml");
                    _PossibleAnswersGRXml = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("PossibleAnswersGRXml");
                    OnPossibleAnswersGRXmlChanged();
                }
            }
        }
        private global::System.String _PossibleAnswersGRXml;
        partial void OnPossibleAnswersGRXmlChanging(global::System.String value);
        partial void OnPossibleAnswersGRXmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TitleEN
        {
            get
            {
                return _TitleEN;
            }
            set
            {
                if (_TitleEN != value)
                {
                    OnTitleENChanging(value);
                    ReportPropertyChanging("TitleEN");
                    _TitleEN = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("TitleEN");
                    OnTitleENChanged();
                }
            }
        }
        private global::System.String _TitleEN;
        partial void OnTitleENChanging(global::System.String value);
        partial void OnTitleENChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PossibleAnswersENXml
        {
            get
            {
                return _PossibleAnswersENXml;
            }
            set
            {
                if (_PossibleAnswersENXml != value)
                {
                    OnPossibleAnswersENXmlChanging(value);
                    ReportPropertyChanging("PossibleAnswersENXml");
                    _PossibleAnswersENXml = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("PossibleAnswersENXml");
                    OnPossibleAnswersENXmlChanged();
                }
            }
        }
        private global::System.String _PossibleAnswersENXml;
        partial void OnPossibleAnswersENXmlChanging(global::System.String value);
        partial void OnPossibleAnswersENXmlChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_QuestionnaireQuestion_Questionnaire", "Questionnaire")]
        public Questionnaire Questionnaire
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Questionnaire>("DBEntitiesModel.FK_QuestionnaireQuestion_Questionnaire", "Questionnaire").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Questionnaire>("DBEntitiesModel.FK_QuestionnaireQuestion_Questionnaire", "Questionnaire").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Questionnaire> QuestionnaireReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Questionnaire>("DBEntitiesModel.FK_QuestionnaireQuestion_Questionnaire", "Questionnaire");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Questionnaire>("DBEntitiesModel.FK_QuestionnaireQuestion_Questionnaire", "Questionnaire", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_QuestionnaireAnswer_QuestionnaireQuestion", "QuestionnaireAnswer")]
        public EntityCollection<QuestionnaireAnswer> QuestionnaireAnswers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuestionnaireAnswer>("DBEntitiesModel.FK_QuestionnaireAnswer_QuestionnaireQuestion", "QuestionnaireAnswer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuestionnaireAnswer>("DBEntitiesModel.FK_QuestionnaireAnswer_QuestionnaireQuestion", "QuestionnaireAnswer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="QueueEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QueueEntry : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QueueEntry object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="noOfRetries">Initial value of the NoOfRetries property.</param>
        /// <param name="queueEntryTypeInt">Initial value of the QueueEntryTypeInt property.</param>
        /// <param name="queueDataID">Initial value of the QueueDataID property.</param>
        /// <param name="lastAttemptDate">Initial value of the LastAttemptDate property.</param>
        public static QueueEntry CreateQueueEntry(global::System.Int32 id, global::System.Int32 noOfRetries, global::System.Int32 queueEntryTypeInt, global::System.Int32 queueDataID, global::System.DateTime lastAttemptDate)
        {
            QueueEntry queueEntry = new QueueEntry();
            queueEntry.ID = id;
            queueEntry.NoOfRetries = noOfRetries;
            queueEntry.QueueEntryTypeInt = queueEntryTypeInt;
            queueEntry.QueueDataID = queueDataID;
            queueEntry.LastAttemptDate = lastAttemptDate;
            return queueEntry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NoOfRetries
        {
            get
            {
                return _NoOfRetries;
            }
            set
            {
                if (_NoOfRetries != value)
                {
                    OnNoOfRetriesChanging(value);
                    ReportPropertyChanging("NoOfRetries");
                    _NoOfRetries = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NoOfRetries");
                    OnNoOfRetriesChanged();
                }
            }
        }
        private global::System.Int32 _NoOfRetries;
        partial void OnNoOfRetriesChanging(global::System.Int32 value);
        partial void OnNoOfRetriesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxNoOfRetries
        {
            get
            {
                return _MaxNoOfRetries;
            }
            set
            {
                if (_MaxNoOfRetries != value)
                {
                    OnMaxNoOfRetriesChanging(value);
                    ReportPropertyChanging("MaxNoOfRetries");
                    _MaxNoOfRetries = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MaxNoOfRetries");
                    OnMaxNoOfRetriesChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _MaxNoOfRetries;
        partial void OnMaxNoOfRetriesChanging(Nullable<global::System.Int32> value);
        partial void OnMaxNoOfRetriesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QueueEntryTypeInt
        {
            get
            {
                return _QueueEntryTypeInt;
            }
            set
            {
                if (_QueueEntryTypeInt != value)
                {
                    OnQueueEntryTypeIntChanging(value);
                    ReportPropertyChanging("QueueEntryTypeInt");
                    _QueueEntryTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QueueEntryTypeInt");
                    OnQueueEntryTypeIntChanged();
                }
            }
        }
        private global::System.Int32 _QueueEntryTypeInt;
        partial void OnQueueEntryTypeIntChanging(global::System.Int32 value);
        partial void OnQueueEntryTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QueueDataID
        {
            get
            {
                return _QueueDataID;
            }
            set
            {
                if (_QueueDataID != value)
                {
                    OnQueueDataIDChanging(value);
                    ReportPropertyChanging("QueueDataID");
                    _QueueDataID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QueueDataID");
                    OnQueueDataIDChanged();
                }
            }
        }
        private global::System.Int32 _QueueDataID;
        partial void OnQueueDataIDChanging(global::System.Int32 value);
        partial void OnQueueDataIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastAttemptDate
        {
            get
            {
                return _LastAttemptDate;
            }
            set
            {
                if (_LastAttemptDate != value)
                {
                    OnLastAttemptDateChanging(value);
                    ReportPropertyChanging("LastAttemptDate");
                    _LastAttemptDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastAttemptDate");
                    OnLastAttemptDateChanged();
                }
            }
        }
        private global::System.DateTime _LastAttemptDate;
        partial void OnLastAttemptDateChanging(global::System.DateTime value);
        partial void OnLastAttemptDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QueueDataXml
        {
            get
            {
                return _QueueDataXml;
            }
            set
            {
                if (_QueueDataXml != value)
                {
                    OnQueueDataXmlChanging(value);
                    ReportPropertyChanging("QueueDataXml");
                    _QueueDataXml = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("QueueDataXml");
                    OnQueueDataXmlChanged();
                }
            }
        }
        private global::System.String _QueueDataXml;
        partial void OnQueueDataXmlChanging(global::System.String value);
        partial void OnQueueDataXmlChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="Region")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Region : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Region object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        public static Region CreateRegion(global::System.Int32 id, global::System.String name, global::System.Int32 countryID)
        {
            Region region = new Region();
            region.ID = id;
            region.Name = name;
            region.CountryID = countryID;
            return region;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Kap_Prefectures_Kap_Regions", "Kali_Prefectures")]
        public EntityCollection<Prefecture> Prefectures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Prefecture>("DBEntitiesModel.FK_Kap_Prefectures_Kap_Regions", "Kali_Prefectures");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Prefecture>("DBEntitiesModel.FK_Kap_Prefectures_Kap_Regions", "Kali_Prefectures", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Kali_Regions_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DBEntitiesModel.FK_Kali_Regions_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DBEntitiesModel.FK_Kali_Regions_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DBEntitiesModel.FK_Kali_Regions_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("DBEntitiesModel.FK_Kali_Regions_Country", "Country", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="Reporter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Student))]
    [KnownTypeAttribute(typeof(InternshipOffice))]
    [KnownTypeAttribute(typeof(InternshipProvider))]
    [KnownTypeAttribute(typeof(FacultyMember))]
    [KnownTypeAttribute(typeof(HelpdeskUser))]
    [KnownTypeAttribute(typeof(AdminUser))]
    [KnownTypeAttribute(typeof(Other))]
    public abstract partial class Reporter : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReporterTypeInt
        {
            get
            {
                return _ReporterTypeInt;
            }
            set
            {
                if (_ReporterTypeInt != value)
                {
                    OnReporterTypeIntChanging(value);
                    ReportPropertyChanging("ReporterTypeInt");
                    _ReporterTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReporterTypeInt");
                    OnReporterTypeIntChanged();
                }
            }
        }
        private global::System.Int32 _ReporterTypeInt;
        partial void OnReporterTypeIntChanging(global::System.Int32 value);
        partial void OnReporterTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeclarationTypeInt
        {
            get
            {
                return _DeclarationTypeInt;
            }
            set
            {
                if (_DeclarationTypeInt != value)
                {
                    OnDeclarationTypeIntChanging(value);
                    ReportPropertyChanging("DeclarationTypeInt");
                    _DeclarationTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DeclarationTypeInt");
                    OnDeclarationTypeIntChanged();
                }
            }
        }
        private global::System.Int32 _DeclarationTypeInt;
        partial void OnDeclarationTypeIntChanging(global::System.Int32 value);
        partial void OnDeclarationTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                if (_ContactName != value)
                {
                    OnContactNameChanging(value);
                    ReportPropertyChanging("ContactName");
                    _ContactName = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("ContactName");
                    OnContactNameChanged();
                }
            }
        }
        private global::System.String _ContactName;
        partial void OnContactNameChanging(global::System.String value);
        partial void OnContactNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactPhone
        {
            get
            {
                return _ContactPhone;
            }
            set
            {
                if (_ContactPhone != value)
                {
                    OnContactPhoneChanging(value);
                    ReportPropertyChanging("ContactPhone");
                    _ContactPhone = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("ContactPhone");
                    OnContactPhoneChanged();
                }
            }
        }
        private global::System.String _ContactPhone;
        partial void OnContactPhoneChanging(global::System.String value);
        partial void OnContactPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactMobilePhone
        {
            get
            {
                return _ContactMobilePhone;
            }
            set
            {
                if (_ContactMobilePhone != value)
                {
                    OnContactMobilePhoneChanging(value);
                    ReportPropertyChanging("ContactMobilePhone");
                    _ContactMobilePhone = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("ContactMobilePhone");
                    OnContactMobilePhoneChanged();
                }
            }
        }
        private global::System.String _ContactMobilePhone;
        partial void OnContactMobilePhoneChanging(global::System.String value);
        partial void OnContactMobilePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactEmail
        {
            get
            {
                return _ContactEmail;
            }
            set
            {
                if (_ContactEmail != value)
                {
                    OnContactEmailChanging(value);
                    ReportPropertyChanging("ContactEmail");
                    _ContactEmail = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("ContactEmail");
                    OnContactEmailChanged();
                }
            }
        }
        private global::System.String _ContactEmail;
        partial void OnContactEmailChanging(global::System.String value);
        partial void OnContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UsernameFromLDAP
        {
            get
            {
                return _UsernameFromLDAP;
            }
            set
            {
                if (_UsernameFromLDAP != value)
                {
                    OnUsernameFromLDAPChanging(value);
                    ReportPropertyChanging("UsernameFromLDAP");
                    _UsernameFromLDAP = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UsernameFromLDAP");
                    OnUsernameFromLDAPChanged();
                }
            }
        }
        private global::System.String _UsernameFromLDAP;
        partial void OnUsernameFromLDAPChanging(global::System.String value);
        partial void OnUsernameFromLDAPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                if (_Email != value)
                {
                    OnEmailChanging(value);
                    ReportPropertyChanging("Email");
                    _Email = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("Email");
                    OnEmailChanged();
                }
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEmailVerified
        {
            get
            {
                return _IsEmailVerified;
            }
            set
            {
                if (_IsEmailVerified != value)
                {
                    OnIsEmailVerifiedChanging(value);
                    ReportPropertyChanging("IsEmailVerified");
                    _IsEmailVerified = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsEmailVerified");
                    OnIsEmailVerifiedChanged();
                }
            }
        }
        private global::System.Boolean _IsEmailVerified;
        partial void OnIsEmailVerifiedChanging(global::System.Boolean value);
        partial void OnIsEmailVerifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailVerificationCode
        {
            get
            {
                return _EmailVerificationCode;
            }
            set
            {
                if (_EmailVerificationCode != value)
                {
                    OnEmailVerificationCodeChanging(value);
                    ReportPropertyChanging("EmailVerificationCode");
                    _EmailVerificationCode = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("EmailVerificationCode");
                    OnEmailVerificationCodeChanged();
                }
            }
        }
        private global::System.String _EmailVerificationCode;
        partial void OnEmailVerificationCodeChanging(global::System.String value);
        partial void OnEmailVerificationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EmailVerificationDate
        {
            get
            {
                return _EmailVerificationDate;
            }
            set
            {
                if (_EmailVerificationDate != value)
                {
                    OnEmailVerificationDateChanging(value);
                    ReportPropertyChanging("EmailVerificationDate");
                    _EmailVerificationDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmailVerificationDate");
                    OnEmailVerificationDateChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _EmailVerificationDate;
        partial void OnEmailVerificationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEmailVerificationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean MustChangePassword
        {
            get
            {
                return _MustChangePassword;
            }
            set
            {
                if (_MustChangePassword != value)
                {
                    OnMustChangePasswordChanging(value);
                    ReportPropertyChanging("MustChangePassword");
                    _MustChangePassword = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MustChangePassword");
                    OnMustChangePasswordChanged();
                }
            }
        }
        private global::System.Boolean _MustChangePassword;
        partial void OnMustChangePasswordChanging(global::System.Boolean value);
        partial void OnMustChangePasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                if (_CreatedAt != value)
                {
                    OnCreatedAtChanging(value);
                    ReportPropertyChanging("CreatedAt");
                    _CreatedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedAt");
                    OnCreatedAtChanged();
                }
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAtDateOnly
        {
            get
            {
                return _CreatedAtDateOnly;
            }
            set
            {
                if (_CreatedAtDateOnly != value)
                {
                    OnCreatedAtDateOnlyChanging(value);
                    ReportPropertyChanging("CreatedAtDateOnly");
                    _CreatedAtDateOnly = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedAtDateOnly");
                    OnCreatedAtDateOnlyChanged();
                }
            }
        }
        private global::System.DateTime _CreatedAtDateOnly;
        partial void OnCreatedAtDateOnlyChanging(global::System.DateTime value);
        partial void OnCreatedAtDateOnlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                if (_CreatedBy != value)
                {
                    OnCreatedByChanging(value);
                    ReportPropertyChanging("CreatedBy");
                    _CreatedBy = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CreatedBy");
                    OnCreatedByChanged();
                }
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedAt
        {
            get
            {
                return _UpdatedAt;
            }
            set
            {
                if (_UpdatedAt != value)
                {
                    OnUpdatedAtChanging(value);
                    ReportPropertyChanging("UpdatedAt");
                    _UpdatedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UpdatedAt");
                    OnUpdatedAtChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _UpdatedAt;
        partial void OnUpdatedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                if (_UpdatedBy != value)
                {
                    OnUpdatedByChanging(value);
                    ReportPropertyChanging("UpdatedBy");
                    _UpdatedBy = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("UpdatedBy");
                    OnUpdatedByChanged();
                }
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsContactInfoCompleted
        {
            get
            {
                return _IsContactInfoCompleted;
            }
            set
            {
                if (_IsContactInfoCompleted != value)
                {
                    OnIsContactInfoCompletedChanging(value);
                    ReportPropertyChanging("IsContactInfoCompleted");
                    _IsContactInfoCompleted = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsContactInfoCompleted");
                    OnIsContactInfoCompletedChanged();
                }
            }
        }
        private global::System.Boolean _IsContactInfoCompleted;
        partial void OnIsContactInfoCompletedChanging(global::System.Boolean value);
        partial void OnIsContactInfoCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                if (_IsApproved != value)
                {
                    OnIsApprovedChanging(value);
                    ReportPropertyChanging("IsApproved");
                    _IsApproved = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsApproved");
                    OnIsApprovedChanged();
                }
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMasterAccount
        {
            get
            {
                return _IsMasterAccount;
            }
            set
            {
                if (_IsMasterAccount != value)
                {
                    OnIsMasterAccountChanging(value);
                    ReportPropertyChanging("IsMasterAccount");
                    _IsMasterAccount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsMasterAccount");
                    OnIsMasterAccountChanged();
                }
            }
        }
        private global::System.Boolean _IsMasterAccount;
        partial void OnIsMasterAccountChanging(global::System.Boolean value);
        partial void OnIsMasterAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VerificationStatusInt
        {
            get
            {
                return _VerificationStatusInt;
            }
            set
            {
                if (_VerificationStatusInt != value)
                {
                    OnVerificationStatusIntChanging(value);
                    ReportPropertyChanging("VerificationStatusInt");
                    _VerificationStatusInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VerificationStatusInt");
                    OnVerificationStatusIntChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _VerificationStatusInt;
        partial void OnVerificationStatusIntChanging(Nullable<global::System.Int32> value);
        partial void OnVerificationStatusIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> VerificationDate
        {
            get
            {
                return _VerificationDate;
            }
            set
            {
                if (_VerificationDate != value)
                {
                    OnVerificationDateChanging(value);
                    ReportPropertyChanging("VerificationDate");
                    _VerificationDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VerificationDate");
                    OnVerificationDateChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _VerificationDate;
        partial void OnVerificationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnVerificationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CertificationNumber
        {
            get
            {
                return _CertificationNumber;
            }
            set
            {
                if (_CertificationNumber != value)
                {
                    OnCertificationNumberChanging(value);
                    ReportPropertyChanging("CertificationNumber");
                    _CertificationNumber = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CertificationNumber");
                    OnCertificationNumberChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _CertificationNumber;
        partial void OnCertificationNumberChanging(Nullable<global::System.Int32> value);
        partial void OnCertificationNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CertificationDate
        {
            get
            {
                return _CertificationDate;
            }
            set
            {
                if (_CertificationDate != value)
                {
                    OnCertificationDateChanging(value);
                    ReportPropertyChanging("CertificationDate");
                    _CertificationDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CertificationDate");
                    OnCertificationDateChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _CertificationDate;
        partial void OnCertificationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCertificationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MasterAccountID
        {
            get
            {
                return _MasterAccountID;
            }
            set
            {
                if (_MasterAccountID != value)
                {
                    OnMasterAccountIDChanging(value);
                    ReportPropertyChanging("MasterAccountID");
                    _MasterAccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MasterAccountID");
                    OnMasterAccountIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _MasterAccountID;
        partial void OnMasterAccountIDChanging(Nullable<global::System.Int32> value);
        partial void OnMasterAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegistrationTypeInt
        {
            get
            {
                return _RegistrationTypeInt;
            }
            set
            {
                if (_RegistrationTypeInt != value)
                {
                    OnRegistrationTypeIntChanging(value);
                    ReportPropertyChanging("RegistrationTypeInt");
                    _RegistrationTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegistrationTypeInt");
                    OnRegistrationTypeIntChanged();
                }
            }
        }
        private global::System.Int32 _RegistrationTypeInt;
        partial void OnRegistrationTypeIntChanging(global::System.Int32 value);
        partial void OnRegistrationTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AlternateContactName
        {
            get
            {
                return _AlternateContactName;
            }
            set
            {
                if (_AlternateContactName != value)
                {
                    OnAlternateContactNameChanging(value);
                    ReportPropertyChanging("AlternateContactName");
                    _AlternateContactName = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("AlternateContactName");
                    OnAlternateContactNameChanged();
                }
            }
        }
        private global::System.String _AlternateContactName;
        partial void OnAlternateContactNameChanging(global::System.String value);
        partial void OnAlternateContactNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AlternateContactPhone
        {
            get
            {
                return _AlternateContactPhone;
            }
            set
            {
                if (_AlternateContactPhone != value)
                {
                    OnAlternateContactPhoneChanging(value);
                    ReportPropertyChanging("AlternateContactPhone");
                    _AlternateContactPhone = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("AlternateContactPhone");
                    OnAlternateContactPhoneChanged();
                }
            }
        }
        private global::System.String _AlternateContactPhone;
        partial void OnAlternateContactPhoneChanging(global::System.String value);
        partial void OnAlternateContactPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AlternateContactMobilePhone
        {
            get
            {
                return _AlternateContactMobilePhone;
            }
            set
            {
                if (_AlternateContactMobilePhone != value)
                {
                    OnAlternateContactMobilePhoneChanging(value);
                    ReportPropertyChanging("AlternateContactMobilePhone");
                    _AlternateContactMobilePhone = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("AlternateContactMobilePhone");
                    OnAlternateContactMobilePhoneChanged();
                }
            }
        }
        private global::System.String _AlternateContactMobilePhone;
        partial void OnAlternateContactMobilePhoneChanging(global::System.String value);
        partial void OnAlternateContactMobilePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AlternateContactEmail
        {
            get
            {
                return _AlternateContactEmail;
            }
            set
            {
                if (_AlternateContactEmail != value)
                {
                    OnAlternateContactEmailChanging(value);
                    ReportPropertyChanging("AlternateContactEmail");
                    _AlternateContactEmail = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("AlternateContactEmail");
                    OnAlternateContactEmailChanged();
                }
            }
        }
        private global::System.String _AlternateContactEmail;
        partial void OnAlternateContactEmailChanging(global::System.String value);
        partial void OnAlternateContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                if (_IsActive != value)
                {
                    OnIsActiveChanging(value);
                    ReportPropertyChanging("IsActive");
                    _IsActive = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsActive");
                    OnIsActiveChanged();
                }
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SMSSentCount
        {
            get
            {
                return _SMSSentCount;
            }
            set
            {
                if (_SMSSentCount != value)
                {
                    OnSMSSentCountChanging(value);
                    ReportPropertyChanging("SMSSentCount");
                    _SMSSentCount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SMSSentCount");
                    OnSMSSentCountChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _SMSSentCount;
        partial void OnSMSSentCountChanging(Nullable<global::System.Int32> value);
        partial void OnSMSSentCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LanguageInt
        {
            get
            {
                return _LanguageInt;
            }
            set
            {
                if (_LanguageInt != value)
                {
                    OnLanguageIntChanging(value);
                    ReportPropertyChanging("LanguageInt");
                    _LanguageInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LanguageInt");
                    OnLanguageIntChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _LanguageInt;
        partial void OnLanguageIntChanging(Nullable<global::System.Int32> value);
        partial void OnLanguageIntChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "UsersInRoles", "Role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("DBEntitiesModel.UsersInRoles", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("DBEntitiesModel.UsersInRoles", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_EmailLog_Reporter", "EmailLog")]
        public EntityCollection<Email> Emails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Email>("DBEntitiesModel.FK_EmailLog_Reporter", "EmailLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Email>("DBEntitiesModel.FK_EmailLog_Reporter", "EmailLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_SmsLog_Reporter", "SmsLog")]
        public EntityCollection<SMS> SMSs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SMS>("DBEntitiesModel.FK_SmsLog_Reporter", "SmsLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SMS>("DBEntitiesModel.FK_SmsLog_Reporter", "SmsLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_IncidentReport_Reporter", "IncidentReport")]
        public EntityCollection<IncidentReport> IncidentReports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IncidentReport>("DBEntitiesModel.FK_IncidentReport_Reporter", "IncidentReport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IncidentReport>("DBEntitiesModel.FK_IncidentReport_Reporter", "IncidentReport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "MassMessageReporterXRef", "MassMessage")]
        public EntityCollection<MassMessage> MassMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MassMessage>("DBEntitiesModel.MassMessageReporterXRef", "MassMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MassMessage>("DBEntitiesModel.MassMessageReporterXRef", "MassMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_VerificationLog_Reporter", "VerificationLog")]
        public EntityCollection<VerificationLog> VerificationLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VerificationLog>("DBEntitiesModel.FK_VerificationLog_Reporter", "VerificationLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VerificationLog>("DBEntitiesModel.FK_VerificationLog_Reporter", "VerificationLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Reporter_MasterAccount", "Reporter1")]
        public EntityCollection<Reporter> ChildAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reporter>("DBEntitiesModel.FK_Reporter_MasterAccount", "Reporter1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reporter>("DBEntitiesModel.FK_Reporter_MasterAccount", "Reporter1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_Reporter_MasterAccount", "Reporter")]
        public Reporter MasterAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reporter>("DBEntitiesModel.FK_Reporter_MasterAccount", "Reporter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reporter>("DBEntitiesModel.FK_Reporter_MasterAccount", "Reporter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reporter> MasterAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reporter>("DBEntitiesModel.FK_Reporter_MasterAccount", "Reporter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Reporter>("DBEntitiesModel.FK_Reporter_MasterAccount", "Reporter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_SubmittedQuestionnaire_Reporter", "SubmittedQuestionnaire")]
        public EntityCollection<SubmittedQuestionnaire> SubmittedQuestionnaires
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubmittedQuestionnaire>("DBEntitiesModel.FK_SubmittedQuestionnaire_Reporter", "SubmittedQuestionnaire");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubmittedQuestionnaire>("DBEntitiesModel.FK_SubmittedQuestionnaire_Reporter", "SubmittedQuestionnaire", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="ReporterIncidentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReporterIncidentType : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReporterIncidentType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="incidentTypeID">Initial value of the IncidentTypeID property.</param>
        /// <param name="reporterTypeInt">Initial value of the ReporterTypeInt property.</param>
        public static ReporterIncidentType CreateReporterIncidentType(global::System.Int32 id, global::System.Int32 incidentTypeID, global::System.Int32 reporterTypeInt)
        {
            ReporterIncidentType reporterIncidentType = new ReporterIncidentType();
            reporterIncidentType.ID = id;
            reporterIncidentType.IncidentTypeID = incidentTypeID;
            reporterIncidentType.ReporterTypeInt = reporterTypeInt;
            return reporterIncidentType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IncidentTypeID
        {
            get
            {
                return _IncidentTypeID;
            }
            set
            {
                if (_IncidentTypeID != value)
                {
                    OnIncidentTypeIDChanging(value);
                    ReportPropertyChanging("IncidentTypeID");
                    _IncidentTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IncidentTypeID");
                    OnIncidentTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _IncidentTypeID;
        partial void OnIncidentTypeIDChanging(global::System.Int32 value);
        partial void OnIncidentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReporterTypeInt
        {
            get
            {
                return _ReporterTypeInt;
            }
            set
            {
                if (_ReporterTypeInt != value)
                {
                    OnReporterTypeIntChanging(value);
                    ReportPropertyChanging("ReporterTypeInt");
                    _ReporterTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReporterTypeInt");
                    OnReporterTypeIntChanged();
                }
            }
        }
        private global::System.Int32 _ReporterTypeInt;
        partial void OnReporterTypeIntChanging(global::System.Int32 value);
        partial void OnReporterTypeIntChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_ReporterIncidentType_IncidentType", "IncidentType")]
        public IncidentType IncidentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentType>("DBEntitiesModel.FK_ReporterIncidentType_IncidentType", "IncidentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentType>("DBEntitiesModel.FK_ReporterIncidentType_IncidentType", "IncidentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IncidentType> IncidentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentType>("DBEntitiesModel.FK_ReporterIncidentType_IncidentType", "IncidentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IncidentType>("DBEntitiesModel.FK_ReporterIncidentType_IncidentType", "IncidentType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String roleName)
        {
            Role role = new Role();
            role.ID = id;
            role.RoleName = roleName;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                if (_RoleName != value)
                {
                    OnRoleNameChanging(value);
                    ReportPropertyChanging("RoleName");
                    _RoleName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoleName");
                    OnRoleNameChanged();
                }
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "UsersInRoles", "Reporter")]
        public EntityCollection<Reporter> Reporters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reporter>("DBEntitiesModel.UsersInRoles", "Reporter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reporter>("DBEntitiesModel.UsersInRoles", "Reporter", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="SMS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SMS : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SMS object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="sendID">Initial value of the SendID property.</param>
        /// <param name="reporterID">Initial value of the ReporterID property.</param>
        /// <param name="reporterNumber">Initial value of the ReporterNumber property.</param>
        /// <param name="msg">Initial value of the Msg property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="sentAt">Initial value of the SentAt property.</param>
        public static SMS CreateSMS(global::System.Int32 id, global::System.Int16 type, global::System.String sendID, global::System.Int32 reporterID, global::System.String reporterNumber, global::System.String msg, global::System.Int32 status, global::System.DateTime sentAt)
        {
            SMS sMS = new SMS();
            sMS.ID = id;
            sMS.Type = type;
            sMS.SendID = sendID;
            sMS.ReporterID = reporterID;
            sMS.ReporterNumber = reporterNumber;
            sMS.Msg = msg;
            sMS.Status = status;
            sMS.SentAt = sentAt;
            return sMS;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                if (_Type != value)
                {
                    OnTypeChanging(value);
                    ReportPropertyChanging("Type");
                    _Type = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Type");
                    OnTypeChanged();
                }
            }
        }
        private global::System.Int16 _Type;
        partial void OnTypeChanging(global::System.Int16 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SendID
        {
            get
            {
                return _SendID;
            }
            set
            {
                if (_SendID != value)
                {
                    OnSendIDChanging(value);
                    ReportPropertyChanging("SendID");
                    _SendID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SendID");
                    OnSendIDChanged();
                }
            }
        }
        private global::System.String _SendID;
        partial void OnSendIDChanging(global::System.String value);
        partial void OnSendIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReporterID
        {
            get
            {
                return _ReporterID;
            }
            set
            {
                if (_ReporterID != value)
                {
                    OnReporterIDChanging(value);
                    ReportPropertyChanging("ReporterID");
                    _ReporterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReporterID");
                    OnReporterIDChanged();
                }
            }
        }
        private global::System.Int32 _ReporterID;
        partial void OnReporterIDChanging(global::System.Int32 value);
        partial void OnReporterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReporterNumber
        {
            get
            {
                return _ReporterNumber;
            }
            set
            {
                if (_ReporterNumber != value)
                {
                    OnReporterNumberChanging(value);
                    ReportPropertyChanging("ReporterNumber");
                    _ReporterNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ReporterNumber");
                    OnReporterNumberChanged();
                }
            }
        }
        private global::System.String _ReporterNumber;
        partial void OnReporterNumberChanging(global::System.String value);
        partial void OnReporterNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Msg
        {
            get
            {
                return _Msg;
            }
            set
            {
                if (_Msg != value)
                {
                    OnMsgChanging(value);
                    ReportPropertyChanging("Msg");
                    _Msg = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Msg");
                    OnMsgChanged();
                }
            }
        }
        private global::System.String _Msg;
        partial void OnMsgChanging(global::System.String value);
        partial void OnMsgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldValuesInternal
        {
            get
            {
                return _FieldValuesInternal;
            }
            set
            {
                if (_FieldValuesInternal != value)
                {
                    OnFieldValuesInternalChanging(value);
                    ReportPropertyChanging("FieldValuesInternal");
                    _FieldValuesInternal = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("FieldValuesInternal");
                    OnFieldValuesInternalChanged();
                }
            }
        }
        private global::System.String _FieldValuesInternal;
        partial void OnFieldValuesInternalChanging(global::System.String value);
        partial void OnFieldValuesInternalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SentAt
        {
            get
            {
                return _SentAt;
            }
            set
            {
                if (_SentAt != value)
                {
                    OnSentAtChanging(value);
                    ReportPropertyChanging("SentAt");
                    _SentAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SentAt");
                    OnSentAtChanged();
                }
            }
        }
        private global::System.DateTime _SentAt;
        partial void OnSentAtChanging(global::System.DateTime value);
        partial void OnSentAtChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_SmsLog_Reporter", "Reporter")]
        public Reporter Reporter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reporter>("DBEntitiesModel.FK_SmsLog_Reporter", "Reporter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reporter>("DBEntitiesModel.FK_SmsLog_Reporter", "Reporter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reporter> ReporterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reporter>("DBEntitiesModel.FK_SmsLog_Reporter", "Reporter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Reporter>("DBEntitiesModel.FK_SmsLog_Reporter", "Reporter", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="Student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Student : Reporter
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Student object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="reporterTypeInt">Initial value of the ReporterTypeInt property.</param>
        /// <param name="declarationTypeInt">Initial value of the DeclarationTypeInt property.</param>
        /// <param name="usernameFromLDAP">Initial value of the UsernameFromLDAP property.</param>
        /// <param name="isEmailVerified">Initial value of the IsEmailVerified property.</param>
        /// <param name="mustChangePassword">Initial value of the MustChangePassword property.</param>
        /// <param name="createdAt">Initial value of the CreatedAt property.</param>
        /// <param name="createdAtDateOnly">Initial value of the CreatedAtDateOnly property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isContactInfoCompleted">Initial value of the IsContactInfoCompleted property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isMasterAccount">Initial value of the IsMasterAccount property.</param>
        /// <param name="registrationTypeInt">Initial value of the RegistrationTypeInt property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Student CreateStudent(global::System.Int32 id, global::System.Int32 reporterTypeInt, global::System.Int32 declarationTypeInt, global::System.String usernameFromLDAP, global::System.Boolean isEmailVerified, global::System.Boolean mustChangePassword, global::System.DateTime createdAt, global::System.DateTime createdAtDateOnly, global::System.String createdBy, global::System.Boolean isContactInfoCompleted, global::System.Boolean isApproved, global::System.Boolean isMasterAccount, global::System.Int32 registrationTypeInt, global::System.Boolean isActive)
        {
            Student student = new Student();
            student.ID = id;
            student.ReporterTypeInt = reporterTypeInt;
            student.DeclarationTypeInt = declarationTypeInt;
            student.UsernameFromLDAP = usernameFromLDAP;
            student.IsEmailVerified = isEmailVerified;
            student.MustChangePassword = mustChangePassword;
            student.CreatedAt = createdAt;
            student.CreatedAtDateOnly = createdAtDateOnly;
            student.CreatedBy = createdBy;
            student.IsContactInfoCompleted = isContactInfoCompleted;
            student.IsApproved = isApproved;
            student.IsMasterAccount = isMasterAccount;
            student.RegistrationTypeInt = registrationTypeInt;
            student.IsActive = isActive;
            return student;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AcademicID
        {
            get
            {
                return _AcademicID;
            }
            set
            {
                if (_AcademicID != value)
                {
                    OnAcademicIDChanging(value);
                    ReportPropertyChanging("AcademicID");
                    _AcademicID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AcademicID");
                    OnAcademicIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _AcademicID;
        partial void OnAcademicIDChanging(Nullable<global::System.Int32> value);
        partial void OnAcademicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OriginalFirstName
        {
            get
            {
                return _OriginalFirstName;
            }
            set
            {
                if (_OriginalFirstName != value)
                {
                    OnOriginalFirstNameChanging(value);
                    ReportPropertyChanging("OriginalFirstName");
                    _OriginalFirstName = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("OriginalFirstName");
                    OnOriginalFirstNameChanged();
                }
            }
        }
        private global::System.String _OriginalFirstName;
        partial void OnOriginalFirstNameChanging(global::System.String value);
        partial void OnOriginalFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OriginalLastName
        {
            get
            {
                return _OriginalLastName;
            }
            set
            {
                if (_OriginalLastName != value)
                {
                    OnOriginalLastNameChanging(value);
                    ReportPropertyChanging("OriginalLastName");
                    _OriginalLastName = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("OriginalLastName");
                    OnOriginalLastNameChanged();
                }
            }
        }
        private global::System.String _OriginalLastName;
        partial void OnOriginalLastNameChanging(global::System.String value);
        partial void OnOriginalLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsNameLatin
        {
            get
            {
                return _IsNameLatin;
            }
            set
            {
                if (_IsNameLatin != value)
                {
                    OnIsNameLatinChanging(value);
                    ReportPropertyChanging("IsNameLatin");
                    _IsNameLatin = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsNameLatin");
                    OnIsNameLatinChanged();
                }
            }
        }
        private Nullable<global::System.Boolean> _IsNameLatin;
        partial void OnIsNameLatinChanging(Nullable<global::System.Boolean> value);
        partial void OnIsNameLatinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GreekFirstName
        {
            get
            {
                return _GreekFirstName;
            }
            set
            {
                if (_GreekFirstName != value)
                {
                    OnGreekFirstNameChanging(value);
                    ReportPropertyChanging("GreekFirstName");
                    _GreekFirstName = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("GreekFirstName");
                    OnGreekFirstNameChanged();
                }
            }
        }
        private global::System.String _GreekFirstName;
        partial void OnGreekFirstNameChanging(global::System.String value);
        partial void OnGreekFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GreekLastName
        {
            get
            {
                return _GreekLastName;
            }
            set
            {
                if (_GreekLastName != value)
                {
                    OnGreekLastNameChanging(value);
                    ReportPropertyChanging("GreekLastName");
                    _GreekLastName = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("GreekLastName");
                    OnGreekLastNameChanged();
                }
            }
        }
        private global::System.String _GreekLastName;
        partial void OnGreekLastNameChanging(global::System.String value);
        partial void OnGreekLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LatinFirstName
        {
            get
            {
                return _LatinFirstName;
            }
            set
            {
                if (_LatinFirstName != value)
                {
                    OnLatinFirstNameChanging(value);
                    ReportPropertyChanging("LatinFirstName");
                    _LatinFirstName = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("LatinFirstName");
                    OnLatinFirstNameChanged();
                }
            }
        }
        private global::System.String _LatinFirstName;
        partial void OnLatinFirstNameChanging(global::System.String value);
        partial void OnLatinFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LatinLastName
        {
            get
            {
                return _LatinLastName;
            }
            set
            {
                if (_LatinLastName != value)
                {
                    OnLatinLastNameChanging(value);
                    ReportPropertyChanging("LatinLastName");
                    _LatinLastName = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("LatinLastName");
                    OnLatinLastNameChanged();
                }
            }
        }
        private global::System.String _LatinLastName;
        partial void OnLatinLastNameChanging(global::System.String value);
        partial void OnLatinLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudentNumber
        {
            get
            {
                return _StudentNumber;
            }
            set
            {
                if (_StudentNumber != value)
                {
                    OnStudentNumberChanging(value);
                    ReportPropertyChanging("StudentNumber");
                    _StudentNumber = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("StudentNumber");
                    OnStudentNumberChanged();
                }
            }
        }
        private global::System.String _StudentNumber;
        partial void OnStudentNumberChanging(global::System.String value);
        partial void OnStudentNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AcademicIDNumber
        {
            get
            {
                return _AcademicIDNumber;
            }
            set
            {
                if (_AcademicIDNumber != value)
                {
                    OnAcademicIDNumberChanging(value);
                    ReportPropertyChanging("AcademicIDNumber");
                    _AcademicIDNumber = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("AcademicIDNumber");
                    OnAcademicIDNumberChanged();
                }
            }
        }
        private global::System.String _AcademicIDNumber;
        partial void OnAcademicIDNumberChanging(global::System.String value);
        partial void OnAcademicIDNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsAssignedToPosition
        {
            get
            {
                return _IsAssignedToPosition;
            }
            set
            {
                if (_IsAssignedToPosition != value)
                {
                    OnIsAssignedToPositionChanging(value);
                    ReportPropertyChanging("IsAssignedToPosition");
                    _IsAssignedToPosition = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsAssignedToPosition");
                    OnIsAssignedToPositionChanged();
                }
            }
        }
        private Nullable<global::System.Boolean> _IsAssignedToPosition;
        partial void OnIsAssignedToPositionChanging(Nullable<global::System.Boolean> value);
        partial void OnIsAssignedToPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PositionCount
        {
            get
            {
                return _PositionCount;
            }
            set
            {
                if (_PositionCount != value)
                {
                    OnPositionCountChanging(value);
                    ReportPropertyChanging("PositionCount");
                    _PositionCount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PositionCount");
                    OnPositionCountChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _PositionCount;
        partial void OnPositionCountChanging(Nullable<global::System.Int32> value);
        partial void OnPositionCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousStudentNumber
        {
            get
            {
                return _PreviousStudentNumber;
            }
            set
            {
                if (_PreviousStudentNumber != value)
                {
                    OnPreviousStudentNumberChanging(value);
                    ReportPropertyChanging("PreviousStudentNumber");
                    _PreviousStudentNumber = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("PreviousStudentNumber");
                    OnPreviousStudentNumberChanged();
                }
            }
        }
        private global::System.String _PreviousStudentNumber;
        partial void OnPreviousStudentNumberChanging(global::System.String value);
        partial void OnPreviousStudentNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousAcademicID
        {
            get
            {
                return _PreviousAcademicID;
            }
            set
            {
                if (_PreviousAcademicID != value)
                {
                    OnPreviousAcademicIDChanging(value);
                    ReportPropertyChanging("PreviousAcademicID");
                    _PreviousAcademicID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PreviousAcademicID");
                    OnPreviousAcademicIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _PreviousAcademicID;
        partial void OnPreviousAcademicIDChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousAcademicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AcademicIDStatusInt
        {
            get
            {
                return _AcademicIDStatusInt;
            }
            set
            {
                if (_AcademicIDStatusInt != value)
                {
                    OnAcademicIDStatusIntChanging(value);
                    ReportPropertyChanging("AcademicIDStatusInt");
                    _AcademicIDStatusInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AcademicIDStatusInt");
                    OnAcademicIDStatusIntChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _AcademicIDStatusInt;
        partial void OnAcademicIDStatusIntChanging(Nullable<global::System.Int32> value);
        partial void OnAcademicIDStatusIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AcademicIDSubmissionDate
        {
            get
            {
                return _AcademicIDSubmissionDate;
            }
            set
            {
                if (_AcademicIDSubmissionDate != value)
                {
                    OnAcademicIDSubmissionDateChanging(value);
                    ReportPropertyChanging("AcademicIDSubmissionDate");
                    _AcademicIDSubmissionDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AcademicIDSubmissionDate");
                    OnAcademicIDSubmissionDateChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _AcademicIDSubmissionDate;
        partial void OnAcademicIDSubmissionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAcademicIDSubmissionDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "AcademicStudent", "Academic")]
        public Academic Academic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Academic>("DBEntitiesModel.AcademicStudent", "Academic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Academic>("DBEntitiesModel.AcademicStudent", "Academic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Academic> AcademicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Academic>("DBEntitiesModel.AcademicStudent", "Academic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Academic>("DBEntitiesModel.AcademicStudent", "Academic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogAssignedToStudent", "InternshipPositionLog")]
        public EntityCollection<InternshipPositionLog> PositionLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogAssignedToStudent", "InternshipPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogAssignedToStudent", "InternshipPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionAssignedToStudent", "InternshipPosition")]
        public EntityCollection<InternshipPosition> Positions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPosition>("DBEntitiesModel.InternshipPositionAssignedToStudent", "InternshipPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPosition>("DBEntitiesModel.InternshipPositionAssignedToStudent", "InternshipPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionLogStudent", "InternshipPositionLog")]
        public EntityCollection<InternshipPositionLog> InternshipPositionLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogStudent", "InternshipPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPositionLog>("DBEntitiesModel.InternshipPositionLogStudent", "InternshipPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "InternshipPositionCanceledStudent", "InternshipPosition")]
        public EntityCollection<InternshipPosition> CanceledPositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternshipPosition>("DBEntitiesModel.InternshipPositionCanceledStudent", "InternshipPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternshipPosition>("DBEntitiesModel.InternshipPositionCanceledStudent", "InternshipPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "PreviousAcademicStudent", "Academic")]
        public Academic PreviousAcademic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Academic>("DBEntitiesModel.PreviousAcademicStudent", "Academic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Academic>("DBEntitiesModel.PreviousAcademicStudent", "Academic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Academic> PreviousAcademicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Academic>("DBEntitiesModel.PreviousAcademicStudent", "Academic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Academic>("DBEntitiesModel.PreviousAcademicStudent", "Academic", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="StudentPracticeApiLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StudentPracticeApiLog : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StudentPracticeApiLog object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="serviceCaller">Initial value of the ServiceCaller property.</param>
        /// <param name="serviceCalledAt">Initial value of the ServiceCalledAt property.</param>
        /// <param name="serviceMethodCalled">Initial value of the ServiceMethodCalled property.</param>
        public static StudentPracticeApiLog CreateStudentPracticeApiLog(global::System.Int32 id, global::System.Int32 serviceCaller, global::System.DateTime serviceCalledAt, global::System.String serviceMethodCalled)
        {
            StudentPracticeApiLog studentPracticeApiLog = new StudentPracticeApiLog();
            studentPracticeApiLog.ID = id;
            studentPracticeApiLog.ServiceCaller = serviceCaller;
            studentPracticeApiLog.ServiceCalledAt = serviceCalledAt;
            studentPracticeApiLog.ServiceMethodCalled = serviceMethodCalled;
            return studentPracticeApiLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceCaller
        {
            get
            {
                return _ServiceCaller;
            }
            set
            {
                if (_ServiceCaller != value)
                {
                    OnServiceCallerChanging(value);
                    ReportPropertyChanging("ServiceCaller");
                    _ServiceCaller = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ServiceCaller");
                    OnServiceCallerChanged();
                }
            }
        }
        private global::System.Int32 _ServiceCaller;
        partial void OnServiceCallerChanging(global::System.Int32 value);
        partial void OnServiceCallerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ServiceCalledAt
        {
            get
            {
                return _ServiceCalledAt;
            }
            set
            {
                if (_ServiceCalledAt != value)
                {
                    OnServiceCalledAtChanging(value);
                    ReportPropertyChanging("ServiceCalledAt");
                    _ServiceCalledAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ServiceCalledAt");
                    OnServiceCalledAtChanged();
                }
            }
        }
        private global::System.DateTime _ServiceCalledAt;
        partial void OnServiceCalledAtChanging(global::System.DateTime value);
        partial void OnServiceCalledAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServiceMethodCalled
        {
            get
            {
                return _ServiceMethodCalled;
            }
            set
            {
                if (_ServiceMethodCalled != value)
                {
                    OnServiceMethodCalledChanging(value);
                    ReportPropertyChanging("ServiceMethodCalled");
                    _ServiceMethodCalled = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ServiceMethodCalled");
                    OnServiceMethodCalledChanged();
                }
            }
        }
        private global::System.String _ServiceMethodCalled;
        partial void OnServiceMethodCalledChanging(global::System.String value);
        partial void OnServiceMethodCalledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ServiceCallerID
        {
            get
            {
                return _ServiceCallerID;
            }
            set
            {
                if (_ServiceCallerID != value)
                {
                    OnServiceCallerIDChanging(value);
                    ReportPropertyChanging("ServiceCallerID");
                    _ServiceCallerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ServiceCallerID");
                    OnServiceCallerIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _ServiceCallerID;
        partial void OnServiceCallerIDChanging(Nullable<global::System.Int32> value);
        partial void OnServiceCallerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorCode
        {
            get
            {
                return _ErrorCode;
            }
            set
            {
                if (_ErrorCode != value)
                {
                    OnErrorCodeChanging(value);
                    ReportPropertyChanging("ErrorCode");
                    _ErrorCode = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("ErrorCode");
                    OnErrorCodeChanged();
                }
            }
        }
        private global::System.String _ErrorCode;
        partial void OnErrorCodeChanging(global::System.String value);
        partial void OnErrorCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Success
        {
            get
            {
                return _Success;
            }
            set
            {
                if (_Success != value)
                {
                    OnSuccessChanging(value);
                    ReportPropertyChanging("Success");
                    _Success = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Success");
                    OnSuccessChanged();
                }
            }
        }
        private Nullable<global::System.Boolean> _Success;
        partial void OnSuccessChanging(Nullable<global::System.Boolean> value);
        partial void OnSuccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IP
        {
            get
            {
                return _IP;
            }
            set
            {
                if (_IP != value)
                {
                    OnIPChanging(value);
                    ReportPropertyChanging("IP");
                    _IP = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("IP");
                    OnIPChanged();
                }
            }
        }
        private global::System.String _IP;
        partial void OnIPChanging(global::System.String value);
        partial void OnIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Request
        {
            get
            {
                return _Request;
            }
            set
            {
                if (_Request != value)
                {
                    OnRequestChanging(value);
                    ReportPropertyChanging("Request");
                    _Request = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("Request");
                    OnRequestChanged();
                }
            }
        }
        private global::System.String _Request;
        partial void OnRequestChanging(global::System.String value);
        partial void OnRequestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ServiceCalledAtDateOnly
        {
            get
            {
                return _ServiceCalledAtDateOnly;
            }
            set
            {
                if (_ServiceCalledAtDateOnly != value)
                {
                    OnServiceCalledAtDateOnlyChanging(value);
                    ReportPropertyChanging("ServiceCalledAtDateOnly");
                    _ServiceCalledAtDateOnly = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ServiceCalledAtDateOnly");
                    OnServiceCalledAtDateOnlyChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _ServiceCalledAtDateOnly;
        partial void OnServiceCalledAtDateOnlyChanging(Nullable<global::System.DateTime> value);
        partial void OnServiceCalledAtDateOnlyChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="SubmittedQuestionnaire")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubmittedQuestionnaire : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubmittedQuestionnaire object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="reporterID">Initial value of the ReporterID property.</param>
        /// <param name="entityTypeInt">Initial value of the EntityTypeInt property.</param>
        /// <param name="questionnaireID">Initial value of the QuestionnaireID property.</param>
        /// <param name="academicYear">Initial value of the AcademicYear property.</param>
        public static SubmittedQuestionnaire CreateSubmittedQuestionnaire(global::System.Int32 id, global::System.Int32 reporterID, global::System.Int32 entityTypeInt, global::System.Int32 questionnaireID, global::System.Int32 academicYear)
        {
            SubmittedQuestionnaire submittedQuestionnaire = new SubmittedQuestionnaire();
            submittedQuestionnaire.ID = id;
            submittedQuestionnaire.ReporterID = reporterID;
            submittedQuestionnaire.EntityTypeInt = entityTypeInt;
            submittedQuestionnaire.QuestionnaireID = questionnaireID;
            submittedQuestionnaire.AcademicYear = academicYear;
            return submittedQuestionnaire;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReporterID
        {
            get
            {
                return _ReporterID;
            }
            set
            {
                if (_ReporterID != value)
                {
                    OnReporterIDChanging(value);
                    ReportPropertyChanging("ReporterID");
                    _ReporterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReporterID");
                    OnReporterIDChanged();
                }
            }
        }
        private global::System.Int32 _ReporterID;
        partial void OnReporterIDChanging(global::System.Int32 value);
        partial void OnReporterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                if (_EntityID != value)
                {
                    OnEntityIDChanging(value);
                    ReportPropertyChanging("EntityID");
                    _EntityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EntityID");
                    OnEntityIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _EntityID;
        partial void OnEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityTypeInt
        {
            get
            {
                return _EntityTypeInt;
            }
            set
            {
                if (_EntityTypeInt != value)
                {
                    OnEntityTypeIntChanging(value);
                    ReportPropertyChanging("EntityTypeInt");
                    _EntityTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EntityTypeInt");
                    OnEntityTypeIntChanged();
                }
            }
        }
        private global::System.Int32 _EntityTypeInt;
        partial void OnEntityTypeIntChanging(global::System.Int32 value);
        partial void OnEntityTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionnaireID
        {
            get
            {
                return _QuestionnaireID;
            }
            set
            {
                if (_QuestionnaireID != value)
                {
                    OnQuestionnaireIDChanging(value);
                    ReportPropertyChanging("QuestionnaireID");
                    _QuestionnaireID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuestionnaireID");
                    OnQuestionnaireIDChanged();
                }
            }
        }
        private global::System.Int32 _QuestionnaireID;
        partial void OnQuestionnaireIDChanging(global::System.Int32 value);
        partial void OnQuestionnaireIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AcademicYear
        {
            get
            {
                return _AcademicYear;
            }
            set
            {
                if (_AcademicYear != value)
                {
                    OnAcademicYearChanging(value);
                    ReportPropertyChanging("AcademicYear");
                    _AcademicYear = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AcademicYear");
                    OnAcademicYearChanged();
                }
            }
        }
        private global::System.Int32 _AcademicYear;
        partial void OnAcademicYearChanging(global::System.Int32 value);
        partial void OnAcademicYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SubmittedAt
        {
            get
            {
                return _SubmittedAt;
            }
            set
            {
                if (_SubmittedAt != value)
                {
                    OnSubmittedAtChanging(value);
                    ReportPropertyChanging("SubmittedAt");
                    _SubmittedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubmittedAt");
                    OnSubmittedAtChanged();
                }
            }
        }
        private Nullable<global::System.DateTime> _SubmittedAt;
        partial void OnSubmittedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnSubmittedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PositionID
        {
            get
            {
                return _PositionID;
            }
            set
            {
                if (_PositionID != value)
                {
                    OnPositionIDChanging(value);
                    ReportPropertyChanging("PositionID");
                    _PositionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PositionID");
                    OnPositionIDChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _PositionID;
        partial void OnPositionIDChanging(Nullable<global::System.Int32> value);
        partial void OnPositionIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_SubmittedQuestionnaire_Questionnaire", "Questionnaire")]
        public Questionnaire Questionnaire
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Questionnaire>("DBEntitiesModel.FK_SubmittedQuestionnaire_Questionnaire", "Questionnaire").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Questionnaire>("DBEntitiesModel.FK_SubmittedQuestionnaire_Questionnaire", "Questionnaire").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Questionnaire> QuestionnaireReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Questionnaire>("DBEntitiesModel.FK_SubmittedQuestionnaire_Questionnaire", "Questionnaire");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Questionnaire>("DBEntitiesModel.FK_SubmittedQuestionnaire_Questionnaire", "Questionnaire", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_QuestionnaireAnswer_SubmittedQuestionnaire", "QuestionnaireAnswer")]
        public EntityCollection<QuestionnaireAnswer> QuestionnaireAnswers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuestionnaireAnswer>("DBEntitiesModel.FK_QuestionnaireAnswer_SubmittedQuestionnaire", "QuestionnaireAnswer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuestionnaireAnswer>("DBEntitiesModel.FK_QuestionnaireAnswer_SubmittedQuestionnaire", "QuestionnaireAnswer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_SubmittedQuestionnaire_Reporter", "Reporter")]
        public Reporter Reporter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reporter>("DBEntitiesModel.FK_SubmittedQuestionnaire_Reporter", "Reporter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reporter>("DBEntitiesModel.FK_SubmittedQuestionnaire_Reporter", "Reporter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reporter> ReporterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reporter>("DBEntitiesModel.FK_SubmittedQuestionnaire_Reporter", "Reporter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Reporter>("DBEntitiesModel.FK_SubmittedQuestionnaire_Reporter", "Reporter", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="SubSystem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubSystem : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubSystem object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="role">Initial value of the Role property.</param>
        public static SubSystem CreateSubSystem(global::System.Int32 id, global::System.String name, global::System.String role)
        {
            SubSystem subSystem = new SubSystem();
            subSystem.ID = id;
            subSystem.Name = name;
            subSystem.Role = role;
            return subSystem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                if (_Role != value)
                {
                    OnRoleChanging(value);
                    ReportPropertyChanging("Role");
                    _Role = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Role");
                    OnRoleChanged();
                }
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_IncidentReport_SubSystem", "IncidentReport")]
        public EntityCollection<IncidentReport> IncidentReports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IncidentReport>("DBEntitiesModel.FK_IncidentReport_SubSystem", "IncidentReport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IncidentReport>("DBEntitiesModel.FK_IncidentReport_SubSystem", "IncidentReport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_IncidentType_SubSystem", "IncidentType")]
        public EntityCollection<IncidentType> IncidentTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IncidentType>("DBEntitiesModel.FK_IncidentType_SubSystem", "IncidentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IncidentType>("DBEntitiesModel.FK_IncidentType_SubSystem", "IncidentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_SubSystemReporterTypes_SubSystem", "SubSystemReporterType")]
        public EntityCollection<SubSystemReporterType> SubSystemReporterTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubSystemReporterType>("DBEntitiesModel.FK_SubSystemReporterTypes_SubSystem", "SubSystemReporterType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubSystemReporterType>("DBEntitiesModel.FK_SubSystemReporterTypes_SubSystem", "SubSystemReporterType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="SubSystemReporterType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubSystemReporterType : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubSystemReporterType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="subSystemID">Initial value of the SubSystemID property.</param>
        /// <param name="reporterTypeInt">Initial value of the ReporterTypeInt property.</param>
        public static SubSystemReporterType CreateSubSystemReporterType(global::System.Int32 id, global::System.Int32 subSystemID, global::System.Int32 reporterTypeInt)
        {
            SubSystemReporterType subSystemReporterType = new SubSystemReporterType();
            subSystemReporterType.ID = id;
            subSystemReporterType.SubSystemID = subSystemID;
            subSystemReporterType.ReporterTypeInt = reporterTypeInt;
            return subSystemReporterType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubSystemID
        {
            get
            {
                return _SubSystemID;
            }
            set
            {
                if (_SubSystemID != value)
                {
                    OnSubSystemIDChanging(value);
                    ReportPropertyChanging("SubSystemID");
                    _SubSystemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubSystemID");
                    OnSubSystemIDChanged();
                }
            }
        }
        private global::System.Int32 _SubSystemID;
        partial void OnSubSystemIDChanging(global::System.Int32 value);
        partial void OnSubSystemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReporterTypeInt
        {
            get
            {
                return _ReporterTypeInt;
            }
            set
            {
                if (_ReporterTypeInt != value)
                {
                    OnReporterTypeIntChanging(value);
                    ReportPropertyChanging("ReporterTypeInt");
                    _ReporterTypeInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReporterTypeInt");
                    OnReporterTypeIntChanged();
                }
            }
        }
        private global::System.Int32 _ReporterTypeInt;
        partial void OnReporterTypeIntChanging(global::System.Int32 value);
        partial void OnReporterTypeIntChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_SubSystemReporterTypes_SubSystem", "SubSystem")]
        public SubSystem SubSystem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubSystem>("DBEntitiesModel.FK_SubSystemReporterTypes_SubSystem", "SubSystem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubSystem>("DBEntitiesModel.FK_SubSystemReporterTypes_SubSystem", "SubSystem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubSystem> SubSystemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubSystem>("DBEntitiesModel.FK_SubSystemReporterTypes_SubSystem", "SubSystem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubSystem>("DBEntitiesModel.FK_SubSystemReporterTypes_SubSystem", "SubSystem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBEntitiesModel", Name="VerificationLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VerificationLog : Imis.Domain.EF.DomainEntity<DBEntities>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VerificationLog object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="reporterID">Initial value of the ReporterID property.</param>
        /// <param name="oldVerificationStatusInt">Initial value of the OldVerificationStatusInt property.</param>
        /// <param name="newVerificationStatusInt">Initial value of the NewVerificationStatusInt property.</param>
        /// <param name="createdAt">Initial value of the CreatedAt property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static VerificationLog CreateVerificationLog(global::System.Int32 id, global::System.Int32 reporterID, global::System.Int32 oldVerificationStatusInt, global::System.Int32 newVerificationStatusInt, global::System.DateTime createdAt, global::System.String createdBy)
        {
            VerificationLog verificationLog = new VerificationLog();
            verificationLog.ID = id;
            verificationLog.ReporterID = reporterID;
            verificationLog.OldVerificationStatusInt = oldVerificationStatusInt;
            verificationLog.NewVerificationStatusInt = newVerificationStatusInt;
            verificationLog.CreatedAt = createdAt;
            verificationLog.CreatedBy = createdBy;
            return verificationLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReporterID
        {
            get
            {
                return _ReporterID;
            }
            set
            {
                if (_ReporterID != value)
                {
                    OnReporterIDChanging(value);
                    ReportPropertyChanging("ReporterID");
                    _ReporterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReporterID");
                    OnReporterIDChanged();
                }
            }
        }
        private global::System.Int32 _ReporterID;
        partial void OnReporterIDChanging(global::System.Int32 value);
        partial void OnReporterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OldVerificationStatusInt
        {
            get
            {
                return _OldVerificationStatusInt;
            }
            set
            {
                if (_OldVerificationStatusInt != value)
                {
                    OnOldVerificationStatusIntChanging(value);
                    ReportPropertyChanging("OldVerificationStatusInt");
                    _OldVerificationStatusInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OldVerificationStatusInt");
                    OnOldVerificationStatusIntChanged();
                }
            }
        }
        private global::System.Int32 _OldVerificationStatusInt;
        partial void OnOldVerificationStatusIntChanging(global::System.Int32 value);
        partial void OnOldVerificationStatusIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NewVerificationStatusInt
        {
            get
            {
                return _NewVerificationStatusInt;
            }
            set
            {
                if (_NewVerificationStatusInt != value)
                {
                    OnNewVerificationStatusIntChanging(value);
                    ReportPropertyChanging("NewVerificationStatusInt");
                    _NewVerificationStatusInt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NewVerificationStatusInt");
                    OnNewVerificationStatusIntChanged();
                }
            }
        }
        private global::System.Int32 _NewVerificationStatusInt;
        partial void OnNewVerificationStatusIntChanging(global::System.Int32 value);
        partial void OnNewVerificationStatusIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                if (_CreatedAt != value)
                {
                    OnCreatedAtChanging(value);
                    ReportPropertyChanging("CreatedAt");
                    _CreatedAt = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedAt");
                    OnCreatedAtChanged();
                }
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                if (_CreatedBy != value)
                {
                    OnCreatedByChanging(value);
                    ReportPropertyChanging("CreatedBy");
                    _CreatedBy = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CreatedBy");
                    OnCreatedByChanged();
                }
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBEntitiesModel", "FK_VerificationLog_Reporter", "Reporter")]
        public Reporter Reporter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reporter>("DBEntitiesModel.FK_VerificationLog_Reporter", "Reporter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reporter>("DBEntitiesModel.FK_VerificationLog_Reporter", "Reporter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reporter> ReporterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reporter>("DBEntitiesModel.FK_VerificationLog_Reporter", "Reporter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Reporter>("DBEntitiesModel.FK_VerificationLog_Reporter", "Reporter", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="DBEntitiesModel", Name="GetTransferStatisticsByDepartment_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetTransferStatisticsByDepartment_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetTransferStatisticsByDepartment_Result object.
        /// </summary>
        /// <param name="academicID">Initial value of the AcademicID property.</param>
        /// <param name="lastTransferedStudentGrade">Initial value of the LastTransferedStudentGrade property.</param>
        public static GetTransferStatisticsByDepartment_Result CreateGetTransferStatisticsByDepartment_Result(global::System.Int32 academicID, global::System.Int32 lastTransferedStudentGrade)
        {
            GetTransferStatisticsByDepartment_Result getTransferStatisticsByDepartment_Result = new GetTransferStatisticsByDepartment_Result();
            getTransferStatisticsByDepartment_Result.AcademicID = academicID;
            getTransferStatisticsByDepartment_Result.LastTransferedStudentGrade = lastTransferedStudentGrade;
            return getTransferStatisticsByDepartment_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AcademicID
        {
            get
            {
                return _AcademicID;
            }
            set
            {
                if (_AcademicID != value)
                {
                    OnAcademicIDChanging(value);
                    ReportPropertyChanging("AcademicID");
                    _AcademicID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AcademicID");
                    OnAcademicIDChanged();
                }
            }
        }
        private global::System.Int32 _AcademicID;
        partial void OnAcademicIDChanging(global::System.Int32 value);
        partial void OnAcademicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Institution
        {
            get
            {
                return _Institution;
            }
            set
            {
                if (_Institution != value)
                {
                    OnInstitutionChanging(value);
                    ReportPropertyChanging("Institution");
                    _Institution = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("Institution");
                    OnInstitutionChanged();
                }
            }
        }
        private global::System.String _Institution;
        partial void OnInstitutionChanging(global::System.String value);
        partial void OnInstitutionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String School
        {
            get
            {
                return _School;
            }
            set
            {
                if (_School != value)
                {
                    OnSchoolChanging(value);
                    ReportPropertyChanging("School");
                    _School = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("School");
                    OnSchoolChanged();
                }
            }
        }
        private global::System.String _School;
        partial void OnSchoolChanging(global::System.String value);
        partial void OnSchoolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Department
        {
            get
            {
                return _Department;
            }
            set
            {
                if (_Department != value)
                {
                    OnDepartmentChanging(value);
                    ReportPropertyChanging("Department");
                    _Department = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("Department");
                    OnDepartmentChanged();
                }
            }
        }
        private global::System.String _Department;
        partial void OnDepartmentChanging(global::System.String value);
        partial void OnDepartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalTransferedStudents
        {
            get
            {
                return _TotalTransferedStudents;
            }
            set
            {
                if (_TotalTransferedStudents != value)
                {
                    OnTotalTransferedStudentsChanging(value);
                    ReportPropertyChanging("TotalTransferedStudents");
                    _TotalTransferedStudents = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TotalTransferedStudents");
                    OnTotalTransferedStudentsChanged();
                }
            }
        }
        private Nullable<global::System.Int32> _TotalTransferedStudents;
        partial void OnTotalTransferedStudentsChanging(Nullable<global::System.Int32> value);
        partial void OnTotalTransferedStudentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastTransferedStudentGrade
        {
            get
            {
                return _LastTransferedStudentGrade;
            }
            set
            {
                if (_LastTransferedStudentGrade != value)
                {
                    OnLastTransferedStudentGradeChanging(value);
                    ReportPropertyChanging("LastTransferedStudentGrade");
                    _LastTransferedStudentGrade = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastTransferedStudentGrade");
                    OnLastTransferedStudentGradeChanged();
                }
            }
        }
        private global::System.Int32 _LastTransferedStudentGrade;
        partial void OnLastTransferedStudentGradeChanging(global::System.Int32 value);
        partial void OnLastTransferedStudentGradeChanged();

        #endregion

    }

    #endregion

    
}
