<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Checking" xml:space="preserve">
    <value>γίνεται έλεγχος...</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="EmailConfirmation" xml:space="preserve">
    <value>Επιβεβαίωση E-mail</value>
  </data>
  <data name="EmailConfirmationMatch" xml:space="preserve">
    <value>Τα πεδία 'E-mail' και 'Επιβεβαίωση E-mail' πρέπει να ταιριάζουν</value>
  </data>
  <data name="EmailConfirmationValidation" xml:space="preserve">
    <value>Το πεδίο 'Επιβεβαίωση E-mail' είναι υποχρεωτικό</value>
  </data>
  <data name="EmailInfo" xml:space="preserve">
    <value>Προσοχή: Στο e-mail που θα δηλώσετε, θα σας σταλεί το e-mail ενεργοποίησης του λογαριασμού σας. Βεβαιωθείτε ότι το πληκτρολογήσατε σωστά.</value>
  </data>
  <data name="EmailInUse" xml:space="preserve">
    <value>Το Email χρησιμοποιείται</value>
  </data>
  <data name="EmailInvalid" xml:space="preserve">
    <value>Το E-mail δεν είναι έγκυρο</value>
  </data>
  <data name="EmailTooltip" xml:space="preserve">
    <value>[έγκυρο e-mail, π.χ. myaccount@myisp.gr ]</value>
  </data>
  <data name="EmailValidation" xml:space="preserve">
    <value>Το πεδίο 'E-mail' είναι υποχρεωτικό</value>
  </data>
  <data name="MobilePhone" xml:space="preserve">
    <value>Το κινητό πρέπει να ξεκινάει από 69 και να αποτελείται από 10 αριθμητικούς χαρακτήρες, χωρίς κενό</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Κωδικός Πρόσβασης (password)</value>
  </data>
  <data name="PasswordCapsWarning" xml:space="preserve">
    <value>Προσοχή: το πλήκτρο Caps Lock είναι πατημένο</value>
  </data>
  <data name="PasswordConfirm" xml:space="preserve">
    <value>Επιβεβαίωση Κωδικού</value>
  </data>
  <data name="PasswordConfirmMatch" xml:space="preserve">
    <value>Ο Κωδικός Πρόσβασης και η Επιβεβαίωση Κωδικού Πρόσβασης πρέπει να ταιριάζουν</value>
  </data>
  <data name="PasswordConfirmValidation" xml:space="preserve">
    <value>Το πεδίο &amp;quot;Επιβεβαίωση Κωδικού Πρόσβασης&amp;quot; είναι υποχρεωτικό</value>
  </data>
  <data name="PasswordInfo" xml:space="preserve">
    <value>Για τη δική σας ασφάλεια συνιστούμε να επιλέξετε έναν συνδυασμό από γράμματα, αριθμούς ή σύμβολα για να δημιουργήσετε έναν μοναδικό κωδικό πρόσβασης που δεν σχετίζεται με τα προσωπικά σας στοιχεία. Ή, επιλέξτε μια τυχαία λέξη ή φράση και εισαγάγετε λέξεις και αριθμούς στην αρχή, στη μέση και στο τέλος, για να είναι ακόμα πιο δύσκολο να τη μαντέψει κανείς (για παράδειγμα "m1awra1ap3tal0uda"). Η χρήση απλών λέξεων ή φράσεων όπως "password" ή "letmein", οι ακολουθίες πλήκτρων όπως "qwerty" ή "qazwsx" ή οι ακολουθίες διαδοχικών χαρακτήρων, όπως "abcd1234" κάνουν πιο εύκολη την αποκρυπτογράφηση του κωδικού σας.</value>
  </data>
  <data name="PasswordInvalid" xml:space="preserve">
    <value>Ο Κωδικός Πρόσβασης πρέπει να αποτελείται από τουλάχιστον 6 χαρακτήρες</value>
  </data>
  <data name="PasswordTooltip" xml:space="preserve">
    <value>Επιτρέπονται μόνο λατινικοί χαρακτήρες, αριθμητικοί (π.χ. 1,2,3) ή ειδικοί (π.χ. !,@,#)&lt;br/&gt;[τουλάχιστον 6 χαρακτήρες]</value>
  </data>
  <data name="PasswordValidation" xml:space="preserve">
    <value>Το πεδίο &amp;quot;Κωδικός Πρόσβασης&amp;quot; είναι υποχρεωτικό</value>
  </data>
  <data name="UserDetailsHeader" xml:space="preserve">
    <value>Στοιχεία Λογαριασμού Χρήστη</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Όνομα Χρήστη (username)</value>
  </data>
  <data name="UsernameInUse" xml:space="preserve">
    <value>Το Όνομα Χρήστη χρησιμοποιείται</value>
  </data>
  <data name="UsernameInvalid" xml:space="preserve">
    <value>Το Όνομα Χρήστη πρέπει να αποτελείται από τουλάχιστον 5 χαρακτήρες. Επιτρέπονται μόνο λατινικοί χαρακτήρες, αριθμητικοί (π.χ. 1,2) ή ειδικοί (π.χ. _,-,.)</value>
  </data>
  <data name="UsernameTooltip" xml:space="preserve">
    <value>Επιτρέπονται μόνο λατινικοί χαρακτήρες, αριθμητικοί (π.χ. 1,2,3) ή ειδικοί (_, - και .)&lt;br/&gt;[τουλάχιστον 5 χαρακτήρες]</value>
  </data>
  <data name="UsernameValidation" xml:space="preserve">
    <value>Το πεδίο &amp;quot;Όνομα Χρήστη&amp;quot; είναι υποχρεωτικό</value>
  </data>
</root>